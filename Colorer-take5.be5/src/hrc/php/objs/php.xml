<?xml version="1.0" encoding="windows-1251"?>
<php>
<lang>
<key name='true'/>
<key name='false'/>
<key name='and'/>
<key name='or'/>
<key name='xor'/>
<key name='exception'/>
<key name='php_user_filter'/>
<key name='array'/>
<key name='as'/>
<key name='break'/>
<key name='case'/>
<key name='cfunction'/>
<key name='class'/>
<key name='const'/>
<key name='continue'/>
<key name='declare'/>
<key name='default'/>
<key name='die'/>
<key name='do'/>
<key name='echo'/>
<key name='else'/>
<key name='elseif'/>
<key name='empty'/>
<key name='enddeclare'/>
<key name='endfor'/>
<key name='endforeach'/>
<key name='endif'/>
<key name='endswitch'/>
<key name='endwhile'/>
<key name='eval'/>
<key name='exit'/>
<key name='extends'/>
<key name='for'/>
<key name='foreach'/>
<key name='function'/>
<key name='global'/>
<key name='if'/>
<key name='include'/>
<key name='include_once'/>
<key name='isset'/>
<key name='list'/>
<key name='new'/>
<key name='old_function'/>
<key name='print'/>
<key name='require'/>
<key name='require_once'/>
<key name='return'/>
<key name='static'/>
<key name='switch'/>
<key name='unset'/>
<key name='use'/>
<key name='var'/>
<key name='while'/>
<key name='null'/>
<key name='interface'/>
<key name='public'/>
<key name='private'/>
<key name='protected'/>
<key name='abstract'/>
<key name='implements'/>
<key name='final'/>
<key name='const'/>
<key name='try'/>
<key name='catch'/>
<key name='throw'/>
<key name='static'/>
<key name='instanceof'/>
<key name='clone'/>
<func name='__construct'/>
<func name='__destruct'/>
<func name='__autoload'/>
<func name='__toString'/>
<func name='__get'/>
<func name='__set'/>
<func name='__call'/>
<func name='__clone'/>
<func name='__sleep'/>
<func name='__wakeup'/>
<type name='int'/>
<type name='integer'/>
<type name='bool'/>
<type name='boolean'/>
<type name='float'/>
<type name='double'/>
<type name='real'/>
<type name='string'/>
<type name='array'/>
<type name='object'/>
<const name='__FILE__'/>
<const name='__LINE__'/>
<const name='__FUNCTION__'/>
<const name='__CLASS__'/>
<const name='__METHOD__'/>
</lang>
<consts>
<const name='PHP_VERSION'/>
<const name='PHP_OS'/>
<const name='DEFAULT_INCLUDE_PATH'/>
<const name='PEAR_INSTALL_DIR'/>
<const name='PEAR_EXTENSION_DIR'/>
<const name='PHP_EXTENSION_DIR'/>
<const name='PHP_BINDIR'/>
<const name='PHP_LIBDIR'/>
<const name='PHP_DATADIR'/>
<const name='PHP_SYSCONFDIR'/>
<const name='PHP_LOCALSTATEDIR'/>
<const name='PHP_CONFIG_FILE_PATH'/>
<const name='PHP_OUTPUT_HANDLER_START'/>
<const name='PHP_OUTPUT_HANDLER_CONT'/>
<const name='PHP_OUTPUT_HANDLER_END'/>
<const name='SORT_ASC'/>
<const name='SORT_DESC'/>
<const name='SORT_REGULAR'/>
<const name='SORT_NUMERIC'/>
<const name='SORT_STRING'/>
<const name='INI_USER'/>
<const name='INI_PERDIR'/>
<const name='INI_SYSTEM'/>
<const name='INI_ALL'/>
<const name='SEEK_SET'/>
<const name='SEEK_CUR'/>
<const name='SEEK_END'/>
<const name='LOCK_SH'/>
<const name='LOCK_EX'/>
<const name='LOCK_UN'/>
<const name='LOCK_NB'/>
<const name='ABDAY_1'/>
<const name='ABDAY_2'/>
<const name='ABDAY_3'/>
<const name='ABDAY_4'/>
<const name='ABDAY_5'/>
<const name='ABDAY_6'/>
<const name='ABDAY_7'/>
<const name='DAY_1'/>
<const name='DAY_2'/>
<const name='DAY_3'/>
<const name='DAY_4'/>
<const name='DAY_5'/>
<const name='DAY_6'/>
<const name='DAY_7'/>
<const name='ABMON_1'/>
<const name='ABMON_2'/>
<const name='ABMON_3'/>
<const name='ABMON_4'/>
<const name='ABMON_5'/>
<const name='ABMON_6'/>
<const name='ABMON_7'/>
<const name='ABMON_8'/>
<const name='ABMON_9'/>
<const name='ABMON_10'/>
<const name='ABMON_11'/>
<const name='ABMON_12'/>
<const name='MON_1'/>
<const name='MON_2'/>
<const name='MON_3'/>
<const name='MON_4'/>
<const name='MON_5'/>
<const name='MON_6'/>
<const name='MON_7'/>
<const name='MON_8'/>
<const name='MON_9'/>
<const name='MON_10'/>
<const name='MON_11'/>
<const name='MON_12'/>
<const name='AM_STR'/>
<const name='PM_STR'/>
<const name='D_T_FMT'/>
<const name='D_FMT'/>
<const name='T_FMT'/>
<const name='T_FMT_AMPM'/>
<const name='ERA'/>
<const name='ERA_YEAR'/>
<const name='ERA_D_T_FMT'/>
<const name='ERA_D_FMT'/>
<const name='ERA_T_FMT'/>
<const name='ALT_DIGITS'/>
<const name='INT_CURR_SYMBOL'/>
<const name='CURRENCY_SYMBOL'/>
<const name='CRNCYSTR'/>
<const name='MON_DECIMAL_POINT'/>
<const name='MON_THOUSANDS_SEP'/>
<const name='MON_GROUPING'/>
<const name='POSITIVE_SIGN'/>
<const name='NEGATIVE_SIGN'/>
<const name='INT_FRAC_DIGITS'/>
<const name='FRAC_DIGITS'/>
<const name='P_CS_PRECEDES'/>
<const name='P_SEP_BY_SPACE'/>
<const name='N_CS_PRECEDES'/>
<const name='N_SEP_BY_SPACE'/>
<const name='P_SIGN_POSN'/>
<const name='N_SIGN_POSN'/>
<const name='DECIMAL_POINT'/>
<const name='RADIXCHAR'/>
<const name='THOUSANDS_SEP'/>
<const name='THOUSEP'/>
<const name='GROUPING'/>
<const name='YESEXPR'/>
<const name='NOEXPR'/>
<const name='YESSTR'/>
<const name='NOSTR'/>
<const name='CODESET'/>
</consts>
<packages>
<package name='Apache-specific' number='I' desc='Apache-specific Functions'>
<function name='apache_child_terminate' decs='Terminate apache process after this request'/>
<function name='apache_get_modules' decs='Get a list of loaded Apache modules '/>
<function name='apache_get_version' decs='Fetch Apache version '/>
<function name='apache_getenv' decs='Get an Apache subprocess_env variable '/>
<function name='apache_lookup_uri' decs='Perform a partial request for the specified URI and return all info about it '/>
<function name='apache_note' decs='Get and set apache request notes'/>
<function name='apache_request_headers' decs='Fetch all HTTP request headers'/>
<function name='apache_response_headers' decs='Fetch all HTTP response headers '/>
<function name='apache_setenv' decs='Set an Apache subprocess_env variable'/>
<function name='ascii2ebcdic' decs='Translate string from ASCII to EBCDIC'/>
<function name='ebcdic2ascii' decs='Translate string from EBCDIC to ASCII'/>
<function name='getallheaders' decs='Fetch all HTTP request headers'/>
<function name='virtual' decs='Perform an Apache sub-request'/>
</package>
<package name='Array' number='II' desc='Array Functions'>
<function name='array_change_key_case' decs='Returns an array with all string keys lowercased or uppercased'/>
<function name='array_chunk' decs='Split an array into chunks'/>
<function name='array_combine' decs='Creates an array by using one array for keys and another for its values '/>
<function name='array_count_values' decs='Counts all the values of an array'/>
<function name='array_diff_assoc' decs='Computes the difference of arrays with additional index check'/>
<function name='array_diff_uassoc' decs='Computes the difference of arrays with additional index check which is performed by a user supplied callback function.'/>
<function name='array_diff' decs='Computes the difference of arrays'/>
<function name='array_fill' decs='Fill an array with values'/>
<function name='array_filter' decs='Filters elements of an array using a callback function '/>
<function name='array_flip' decs='Exchanges all keys with their associated values in an array'/>
<function name='array_intersect_assoc' decs='Computes the intersection of arrays with additional index check'/>
<function name='array_intersect' decs='Computes the intersection of arrays'/>
<function name='array_key_exists' decs='Checks if the given key or index exists in the array'/>
<function name='array_keys' decs='Return all the keys of an array'/>
<function name='array_map' decs='Applies the callback to the elements of the given arrays '/>
<function name='array_merge_recursive' decs='Merge two or more arrays recursively'/>
<function name='array_merge' decs='Merge two or more arrays'/>
<function name='array_multisort' decs='Sort multiple or multi-dimensional arrays'/>
<function name='array_pad' decs='Pad array to the specified length with a value '/>
<function name='array_pop' decs='Pop the element off the end of array'/>
<function name='array_push' decs='Push one or more elements onto the end of array '/>
<function name='array_rand' decs='Pick one or more random entries out of an array '/>
<function name='array_reduce' decs='Iteratively reduce the array to a single value using a callback function '/>
<function name='array_reverse' decs='Return an array with elements in reverse order '/>
<function name='array_search' decs='Searches the array for a given value and returns the corresponding key if successful '/>
<function name='array_shift' decs='Shift an element off the beginning of array '/>
<function name='array_slice' decs='Extract a slice of the array'/>
<function name='array_splice' decs='Remove a portion of the array and replace it with something else '/>
<function name='array_sum' decs='Calculate the sum of values in an array. '/>
<function name='array_udiff_assoc' decs='Computes the difference of arrays with additional index check. The data is compared by using a callback function.'/>
<function name='array_udiff_uassoc' decs='Computes the difference of arrays with additional index check. The data is compared by using a callback function. The index check is done by a callback function also'/>
<function name='array_udiff' decs='Computes the difference of arrays by using a callback function for data comparison.'/>
<function name='array_unique' decs='Removes duplicate values from an array'/>
<function name='array_unshift' decs='Prepend one or more elements to the beginning of an array '/>
<function name='array_values' decs='Return all the values of an array'/>
<function name='array_walk' decs='Apply a user function to every member of an array '/>
<function name='arsort' decs='Sort an array in reverse order and maintain index association '/>
<function name='asort' decs='Sort an array and maintain index association'/>
<function name='compact' decs='Create array containing variables and their values '/>
<function name='count' decs='Count elements in a variable'/>
<function name='current' decs='Return the current element in an array'/>
<function name='each' decs='Return the current key and value pair from an array and advance the array cursor '/>
<function name='end' decs='Set the internal pointer of an array to its last element '/>
<function name='extract' decs='Import variables into the current symbol table from an array '/>
<function name='in_array' decs='Checks if a value exists in an array'/>
<function name='key' decs='Fetch a key from an associative array'/>
<function name='krsort' decs='Sort an array by key in reverse order'/>
<function name='ksort' decs='Sort an array by key'/>
<function name='natcasesort' decs='Sort an array using a case insensitive &quot;natural order&quot; algorithm '/>
<function name='natsort' decs='Sort an array using a &quot;natural order&quot; algorithm '/>
<function name='next' decs='Advance the internal array pointer of an array '/>
<function name='pos' decs='Alias of current()'/>
<function name='prev' decs='Rewind the internal array pointer'/>
<function name='range' decs='Create an array containing a range of elements '/>
<function name='reset' decs='Set the internal pointer of an array to its first element '/>
<function name='rsort' decs='Sort an array in reverse order'/>
<function name='shuffle' decs='Shuffle an array'/>
<function name='sizeof' decs='Alias of count()'/>
<function name='sort' decs='Sort an array'/>
<function name='uasort' decs='Sort an array with a user-defined comparison function and maintain index association '/>
<function name='uksort' decs='Sort an array by keys using a user-defined comparison function '/>
<function name='usort' decs='Sort an array '/>
<const name='CASE_LOWER'/>
<const name='CASE_UPPER'/>
<const name='COUNT_NORMAL'/>
<const name='COUNT_RECURSIVE'/>
<const name='EXTR_OVERWRITE'/>
<const name='EXTR_SKIP'/>
<const name='EXTR_PREFIX_SAME'/>
<const name='EXTR_PREFIX_ALL'/>
<const name='EXTR_PREFIX_INVALID'/>
<const name='EXTR_PREFIX_IF_EXISTS'/>
<const name='EXTR_IF_EXISTS'/>
<const name='EXTR_REFS'/>
</package>
<package name='Aspell' number='III' desc='Aspell functions' depr='on'>
<function name='aspell_check_raw' decs='Check a word without changing its case or trying to trim it' depr='on'/>
<function name='aspell_check' decs='Check a word' depr='on'/>
<function name='aspell_new' decs='Load a new dictionary' depr='on'/>
<function name='aspell_suggest' decs='Suggest spellings of a word' depr='on'/>
</package>
<package name='BCMath-Arbitrary-Precision-Mathematics' number='IV' desc='BCMath Arbitrary Precision Mathematics Functions'>
<function name='bcadd' decs='Add two arbitrary precision numbers'/>
<function name='bccomp' decs='Compare two arbitrary precision numbers'/>
<function name='bcdiv' decs='Divide two arbitrary precision numbers'/>
<function name='bcmod' decs='Get modulus of an arbitrary precision number '/>
<function name='bcmul' decs='Multiply two arbitrary precision number'/>
<function name='bcpow' decs='Raise an arbitrary precision number to another '/>
<function name='bcpowmod' decs='Raise an arbitrary precision number to another, reduced by a specified modulus. '/>
<function name='bcscale' decs='Set default scale parameter for all bc math functions '/>
<function name='bcsqrt' decs='Get the square root of an arbitrary precision number '/>
<function name='bcsub' decs='Subtract one arbitrary precision number from another '/>
</package>
<package name='Bzip2-Compression' number='V' desc='Bzip2 Compression Functions'>
<function name='bzclose' decs='Close a bzip2 file pointer'/>
<function name='bzcompress' decs='Compress a string into bzip2 encoded data'/>
<function name='bzdecompress' decs='Decompresses bzip2 encoded data'/>
<function name='bzerrno' decs='Returns a bzip2 error number'/>
<function name='bzerror' decs='Returns the bzip2 error number and error string in an array'/>
<function name='bzerrstr' decs='Returns a bzip2 error string'/>
<function name='bzflush' decs='Force a write of all buffered data'/>
<function name='bzopen' decs='Opens a bzip2 compressed file'/>
<function name='bzread' decs='Binary safe bzip2 file read'/>
<function name='bzwrite' decs='Binary safe bzip2 file write'/>
</package>
<package name='Calendar' number='VI' desc='Calendar Functions'>
<function name='cal_days_in_month' decs='Return the number of days in a month for a given year and calendar'/>
<function name='cal_from_jd' decs='Converts from Julian Day Count to a supported calendar'/>
<function name='cal_info' decs='Returns information about a particular calendar'/>
<function name='cal_to_jd' decs='Converts from a supported calendar to Julian Day Count'/>
<function name='easter_date' decs='Get Unix timestamp for midnight on Easter of a given year '/>
<function name='easter_days' decs='Get number of days after March 21 on which Easter falls for a given year '/>
<function name='FrenchToJD' decs='Converts a date from the French Republican Calendar to a Julian Day Count '/>
<function name='GregorianToJD' decs='Converts a Gregorian date to Julian Day Count '/>
<function name='JDDayOfWeek' decs='Returns the day of the week'/>
<function name='JDMonthName' decs='Returns a month name'/>
<function name='JDToFrench' decs='Converts a Julian Day Count to the French Republican Calendar '/>
<function name='JDToGregorian' decs='Converts Julian Day Count to Gregorian date'/>
<function name='jdtojewish' decs='Converts a Julian day count to a Jewish calendar date '/>
<function name='JDToJulian' decs='Converts a Julian Day Count to a Julian Calendar Date '/>
<function name='jdtounix' decs='Convert Julian Day to Unix timestamp'/>
<function name='JewishToJD' decs='Converts a date in the Jewish Calendar to Julian Day Count '/>
<function name='JulianToJD' decs='Converts a Julian Calendar date to Julian Day Count '/>
<function name='unixtojd' decs='Convert Unix timestamp to Julian Day'/>
<const name='CAL_GREGORIAN'/>
<const name='CAL_JULIAN'/>
<const name='CAL_JEWISH'/>
<const name='CAL_FRENCH'/>
<const name='CAL_NUM_CALS'/>
<const name='CAL_DOW_DAYNO'/>
<const name='CAL_DOW_SHORT'/>
<const name='CAL_DOW_LONG'/>
<const name='CAL_MONTH_GREGORIAN_SHORT'/>
<const name='CAL_MONTH_GREGORIAN_LONG'/>
<const name='CAL_MONTH_JULIAN_SHORT'/>
<const name='CAL_MONTH_JULIAN_LONG'/>
<const name='CAL_MONTH_JEWISH'/>
<const name='CAL_MONTH_FRENCH'/>
<const name='CAL_EASTER_DEFAULT'/>
<const name='CAL_EASTER_ROMAN'/>
<const name='CAL_EASTER_ALWAYS_GREGORIAN'/>
<const name='CAL_EASTER_ALWAYS_JULIAN'/>
<const name='CAL_JEWISH_ADD_ALAFIM_GERESH'/>
<const name='CAL_JEWISH_ADD_ALAFIM'/>
<const name='CAL_JEWISH_ADD_GERESHAYIM'/>
</package>
<package name='CCVS-API' number='VII' desc='CCVS API Functions' depr='on'>
<function name='ccvs_add' decs='Add data to a transaction' depr='on'/>
<function name='ccvs_auth' decs='Perform credit authorization test on a transaction' depr='on'/>
<function name='ccvs_command' decs='Performs a command which is peculiar to a single protocol, and thus is not available in the general CCVS API' depr='on'/>
<function name='ccvs_count' decs='Find out how many transactions of a given type are stored in the system' depr='on'/>
<function name='ccvs_delete' decs='Delete a transaction' depr='on'/>
<function name='ccvs_done' decs='Terminate CCVS engine and do cleanup work' depr='on'/>
<function name='ccvs_init' decs='Initialize CCVS for use' depr='on'/>
<function name='ccvs_lookup' decs='Look up an item of a particular type in the database #' depr='on'/>
<function name='ccvs_new' decs='Create a new, blank transaction' depr='on'/>
<function name='ccvs_report' decs='Return the status of the background communication process' depr='on'/>
<function name='ccvs_return' decs='Transfer funds from the merchant to the credit card holder' depr='on'/>
<function name='ccvs_reverse' decs='Perform a full reversal on an already-processed authorization' depr='on'/>
<function name='ccvs_sale' decs='Transfer funds from the credit card holder to the merchant' depr='on'/>
<function name='ccvs_status' decs='Check the status of an invoice' depr='on'/>
<function name='ccvs_textvalue' decs='Get text return value for previous function call' depr='on'/>
<function name='ccvs_void' decs='Perform a full reversal on a completed transaction' depr='on'/>
</package>
<package name='COM-supportfor-Windows' number='VIII' desc='COM support functions for Windows'>
<function name='COM' decs='COM class'/>
<function name='VARIANT' decs='VARIANT class'/>
<function name='com_addref' decs='Increases the components reference counter. '/>
<function name='com_get' decs='Gets the value of a COM Component&apos;s property '/>
<function name='com_invoke' decs='Calls a COM component&apos;s method. '/>
<function name='com_isenum' decs='Grabs an IEnumVariant'/>
<function name='com_load_typelib' decs='Loads a Typelib'/>
<function name='com_load' decs='Creates a new reference to a COM component '/>
<function name='com_propget' decs='Alias of com_get()'/>
<function name='com_propput' decs='Alias of com_set()'/>
<function name='com_propset' decs='Alias of com_set()'/>
<function name='com_release' decs='Decreases the components reference counter. '/>
<function name='com_set' decs='Assigns a value to a COM component&apos;s property '/>
<const name='CLSCTX_INPROC_SERVER'/>
<const name='CLSCTX_INPROC_HANDLER'/>
<const name='CLSCTX_LOCAL_SERVER'/>
<const name='CLSCTX_REMOTE_SERVER'/>
<const name='CLSCTX_SERVER'/>
<const name='CLSCTX_ALL'/>
<const name='VT_NULL'/>
<const name='VT_EMPTY'/>
<const name='VT_UI1'/>
<const name='VT_I2'/>
<const name='VT_I4'/>
<const name='VT_R4'/>
<const name='VT_R8'/>
<const name='VT_BOOL'/>
<const name='VT_ERROR'/>
<const name='VT_CY'/>
<const name='VT_DATE'/>
<const name='VT_BSTR'/>
<const name='VT_DECIMAL'/>
<const name='VT_UNKNOWN'/>
<const name='VT_DISPATCH'/>
<const name='VT_VARIANT'/>
<const name='VT_I1'/>
<const name='VT_UI2'/>
<const name='VT_UI4'/>
<const name='VT_INT'/>
<const name='VT_UINT'/>
<const name='VT_ARRAY'/>
<const name='VT_BYREF'/>
<const name='CP_ACP'/>
<const name='CP_MACCP'/>
<const name='CP_OEMCP'/>
<const name='CP_UTF7'/>
<const name='CP_UTF8'/>
<const name='CP_SYMBOL'/>
<const name='CP_THREAD_ACP'/>
</package>
<package name='Class-Object' number='IX' desc='Class/Object Functions'>
<function name='call_user_method_array' decs='Call a user method given with an array of parameters' depr='on'/>
<function name='call_user_method' decs='Call a user method on an specific object' depr='on'/>
<function name='class_exists' decs='Checks if the class has been defined'/>
<function name='get_class_methods' decs='Returns an array of class methods&apos; names'/>
<function name='get_class_vars' decs='Returns an array of default properties of the class '/>
<function name='get_class' decs='Returns the name of the class of an object'/>
<function name='get_declared_classes' decs='Returns an array with the name of the defined classes'/>
<function name='get_object_vars' decs='Returns an associative array of object properties'/>
<function name='get_parent_class' decs='Retrieves the parent class name for object or class'/>
<function name='is_a' decs='Returns TRUE if the object is of this class or has this class as one of its parents '/>
<function name='is_subclass_of' decs='Returns TRUE if the object has this class as one of its parents '/>
<function name='method_exists' decs='Checks if the class method exists'/>
</package>
<package name='ClibPDF' number='X' desc='ClibPDF Functions'>
<function name='cpdf_add_annotation' decs='Adds annotation'/>
<function name='cpdf_add_outline' decs='Adds bookmark for current page'/>
<function name='cpdf_arc' decs='Draws an arc'/>
<function name='cpdf_begin_text' decs='Starts text section'/>
<function name='cpdf_circle' decs='Draw a circle'/>
<function name='cpdf_clip' decs='Clips to current path'/>
<function name='cpdf_close' decs='Closes the pdf document'/>
<function name='cpdf_closepath_fill_stroke' decs='Close, fill and stroke current path'/>
<function name='cpdf_closepath_stroke' decs='Close path and draw line along path'/>
<function name='cpdf_closepath' decs='Close path'/>
<function name='cpdf_continue_text' decs='Output text in next line'/>
<function name='cpdf_curveto' decs='Draws a curve'/>
<function name='cpdf_end_text' decs='Ends text section'/>
<function name='cpdf_fill_stroke' decs='Fill and stroke current path'/>
<function name='cpdf_fill' decs='Fill current path'/>
<function name='cpdf_finalize_page' decs='Ends page'/>
<function name='cpdf_finalize' decs='Ends document'/>
<function name='cpdf_global_set_document_limits' decs='Sets document limits for any pdf document'/>
<function name='cpdf_import_jpeg' decs='Opens a JPEG image'/>
<function name='cpdf_lineto' decs='Draws a line'/>
<function name='cpdf_moveto' decs='Sets current point'/>
<function name='cpdf_newpath' decs='Starts a new path'/>
<function name='cpdf_open' decs='Opens a new pdf document'/>
<function name='cpdf_output_buffer' decs='Outputs the pdf document in memory buffer'/>
<function name='cpdf_page_init' decs='Starts new page'/>
<function name='cpdf_place_inline_image' decs='Places an image on the page'/>
<function name='cpdf_rect' decs='Draw a rectangle'/>
<function name='cpdf_restore' decs='Restores formerly saved environment'/>
<function name='cpdf_rlineto' decs='Draws a line'/>
<function name='cpdf_rmoveto' decs='Sets current point'/>
<function name='cpdf_rotate_text' decs='Sets text rotation angle '/>
<function name='cpdf_rotate' decs='Sets rotation'/>
<function name='cpdf_save_to_file' decs='Writes the pdf document into a file'/>
<function name='cpdf_save' decs='Saves current environment'/>
<function name='cpdf_scale' decs='Sets scaling'/>
<function name='cpdf_set_action_url' decs='Sets hyperlink '/>
<function name='cpdf_set_char_spacing' decs='Sets character spacing'/>
<function name='cpdf_set_creator' decs='Sets the creator field in the pdf document'/>
<function name='cpdf_set_current_page' decs='Sets current page'/>
<function name='cpdf_set_font_directories' decs='Sets directories to search when using external fonts '/>
<function name='cpdf_set_font_map_file' decs='Sets fontname to filename translation map when using external fonts '/>
<function name='cpdf_set_font' decs='Select the current font face and size'/>
<function name='cpdf_set_horiz_scaling' decs='Sets horizontal scaling of text'/>
<function name='cpdf_set_keywords' decs='Sets the keywords field of the pdf document'/>
<function name='cpdf_set_leading' decs='Sets distance between text lines'/>
<function name='cpdf_set_page_animation' decs='Sets duration between pages'/>
<function name='cpdf_set_subject' decs='Sets the subject field of the pdf document'/>
<function name='cpdf_set_text_matrix' decs='Sets the text matrix'/>
<function name='cpdf_set_text_pos' decs='Sets text position'/>
<function name='cpdf_set_text_rendering' decs='Determines how text is rendered'/>
<function name='cpdf_set_text_rise' decs='Sets the text rise'/>
<function name='cpdf_set_title' decs='Sets the title field of the pdf document'/>
<function name='cpdf_set_viewer_preferences' decs='How to show the document in the viewer '/>
<function name='cpdf_set_word_spacing' decs='Sets spacing between words'/>
<function name='cpdf_setdash' decs='Sets dash pattern'/>
<function name='cpdf_setflat' decs='Sets flatness'/>
<function name='cpdf_setgray_fill' decs='Sets filling color to gray value'/>
<function name='cpdf_setgray_stroke' decs='Sets drawing color to gray value'/>
<function name='cpdf_setgray' decs='Sets drawing and filling color to gray value'/>
<function name='cpdf_setlinecap' decs='Sets linecap parameter'/>
<function name='cpdf_setlinejoin' decs='Sets linejoin parameter'/>
<function name='cpdf_setlinewidth' decs='Sets line width'/>
<function name='cpdf_setmiterlimit' decs='Sets miter limit'/>
<function name='cpdf_setrgbcolor_fill' decs='Sets filling color to rgb color value'/>
<function name='cpdf_setrgbcolor_stroke' decs='Sets drawing color to rgb color value'/>
<function name='cpdf_setrgbcolor' decs='Sets drawing and filling color to rgb color value'/>
<function name='cpdf_show_xy' decs='Output text at position'/>
<function name='cpdf_show' decs='Output text at current position'/>
<function name='cpdf_stringwidth' decs='Returns width of text in current font'/>
<function name='cpdf_stroke' decs='Draw line along path'/>
<function name='cpdf_text' decs='Output text with parameters'/>
<function name='cpdf_translate' decs='Sets origin of coordinate system'/>
<const name='CPDF_PM_NONE'/>
<const name='CPDF_PM_OUTLINES'/>
<const name='CPDF_PM_THUMBS'/>
<const name='CPDF_PM_FULLSCREEN'/>
<const name='CPDF_PL_SINGLE'/>
<const name='CPDF_PL_1COLUMN'/>
<const name='CPDF_PL_2LCOLUMN'/>
<const name='CPDF_PL_2RCOLUMN'/>
</package>
<package name='Crack' number='XI' desc='Crack Functions'>
<function name='crack_check' decs='Performs an obscure check with the given password'/>
<function name='crack_closedict' decs='Closes an open CrackLib dictionary '/>
<function name='crack_getlastmessage' decs='Returns the message from the last obscure check'/>
<function name='crack_opendict' decs='Opens a new CrackLib dictionary'/>
</package>
<package name='CURL-Client-URL-Library' number='XII' desc='CURL, Client URL Library Functions'>
<function name='curl_close' decs='Close a CURL session'/>
<function name='curl_errno' decs='Return the last error number'/>
<function name='curl_error' decs='Return a string containing the last error for the current session '/>
<function name='curl_exec' decs='Perform a CURL session'/>
<function name='curl_getinfo' decs='Get information regarding a specific transfer '/>
<function name='curl_init' decs='Initialize a CURL session'/>
<function name='curl_multi_add_handle' decs='Add a normal cURL handle to a cURL multi handle '/>
<function name='curl_multi_close' decs='Close a set of cURL handles '/>
<function name='curl_multi_exec' decs='Run the sub-connections of the current cURL handle '/>
<function name='curl_multi_getcontent' decs='Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set '/>
<function name='curl_multi_info_read' decs='Get information about the current transfers '/>
<function name='curl_multi_init' decs='Returns a new cURL multi handle '/>
<function name='curl_multi_remove_handle' decs='Remove a multi handle from a set of cURL handles '/>
<function name='curl_multi_select' decs='Get all the sockets associated with the cURL extension, which can then be &quot;selected&quot; '/>
<function name='curl_setopt' decs='Set an option for a CURL transfer'/>
<function name='curl_version' decs='Return the current CURL version'/>
<const name='CURLOPT_PORT'/>
<const name='CURLOPT_FILE'/>
<const name='CURLOPT_INFILE'/>
<const name='CURLOPT_INFILESIZE'/>
<const name='CURLOPT_URL'/>
<const name='CURLOPT_PROXY'/>
<const name='CURLOPT_VERBOSE'/>
<const name='CURLOPT_HEADER'/>
<const name='CURLOPT_HTTPHEADER'/>
<const name='CURLOPT_NOPROGRESS'/>
<const name='CURLOPT_NOBODY'/>
<const name='CURLOPT_FAILONERROR'/>
<const name='CURLOPT_UPLOAD'/>
<const name='CURLOPT_POST'/>
<const name='CURLOPT_FTPLISTONLY'/>
<const name='CURLOPT_FTPAPPEND'/>
<const name='CURLOPT_NETRC'/>
<const name='CURLOPT_FOLLOWLOCATION'/>
<const name='CURLOPT_FTPASCII'/>
<const name='CURLOPT_PUT'/>
<const name='CURLOPT_MUTE'/>
<const name='CURLOPT_USERPWD'/>
<const name='CURLOPT_PROXYUSERPWD'/>
<const name='CURLOPT_RANGE'/>
<const name='CURLOPT_TIMEOUT'/>
<const name='CURLOPT_POSTFIELDS'/>
<const name='CURLOPT_REFERER'/>
<const name='CURLOPT_USERAGENT'/>
<const name='CURLOPT_FTPPORT'/>
<const name='CURLOPT_LOW_SPEED_LIMIT'/>
<const name='CURLOPT_LOW_SPEED_TIME'/>
<const name='CURLOPT_RESUME_FROM'/>
<const name='CURLOPT_COOKIE'/>
<const name='CURLOPT_SSLCERT'/>
<const name='CURLOPT_SSLCERTPASSWD'/>
<const name='CURLOPT_WRITEHEADER'/>
<const name='CURLOPT_SSL_VERIFYHOST'/>
<const name='CURLOPT_COOKIEFILE'/>
<const name='CURLOPT_SSLVERSION'/>
<const name='CURLOPT_TIMECONDITION'/>
<const name='CURLOPT_TIMEVALUE'/>
<const name='CURLOPT_CUSTOMREQUEST'/>
<const name='CURLOPT_STDERR'/>
<const name='CURLOPT_TRANSFERTEXT'/>
<const name='CURLOPT_RETURNTRANSFER'/>
<const name='CURLOPT_QUOTE'/>
<const name='CURLOPT_POSTQUOTE'/>
<const name='CURLOPT_INTERFACE'/>
<const name='CURLOPT_KRB4LEVEL'/>
<const name='CURLOPT_HTTPPROXYTUNNEL'/>
<const name='CURLOPT_FILETIME'/>
<const name='CURLOPT_WRITEFUNCTION'/>
<const name='CURLOPT_READFUNCTION'/>
<const name='CURLOPT_PASSWDFUNCTION'/>
<const name='CURLOPT_HEADERFUNCTION'/>
<const name='CURLOPT_MAXREDIRS'/>
<const name='CURLOPT_MAXCONNECTS'/>
<const name='CURLOPT_CLOSEPOLICY'/>
<const name='CURLOPT_FRESH_CONNECT'/>
<const name='CURLOPT_FORBID_REUSE'/>
<const name='CURLOPT_RANDOM_FILE'/>
<const name='CURLOPT_EGDSOCKET'/>
<const name='CURLOPT_CONNECTTIMEOUT'/>
<const name='CURLOPT_SSL_VERIFYPEER'/>
<const name='CURLOPT_CAINFO'/>
<const name='CURLOPT_COOKIEJAR'/>
<const name='CURLOPT_SSL_CIPHER_LIST'/>
<const name='CURLOPT_BINARYTRANSFER'/>
<const name='CURLCLOSEPOLICY_LEAST_RECENTLY_USED'/>
<const name='CURLCLOSEPOLICY_LEAST_TRAFFIC'/>
<const name='CURLCLOSEPOLICY_SLOWEST'/>
<const name='CURLCLOSEPOLICY_CALLBACK'/>
<const name='CURLCLOSEPOLICY_OLDEST'/>
<const name='CURLINFO_EFFECTIVE_URL'/>
<const name='CURLINFO_HTTP_CODE'/>
<const name='CURLINFO_HEADER_SIZE'/>
<const name='CURLINFO_REQUEST_SIZE'/>
<const name='CURLINFO_TOTAL_TIME'/>
<const name='CURLINFO_NAMELOOKUP_TIME'/>
<const name='CURLINFO_CONNECT_TIME'/>
<const name='CURLINFO_PRETRANSFER_TIME'/>
<const name='CURLINFO_SIZE_UPLOAD'/>
<const name='CURLINFO_SIZE_DOWNLOAD'/>
<const name='CURLINFO_SPEED_DOWNLOAD'/>
<const name='CURLINFO_SPEED_UPLOAD'/>
<const name='CURLINFO_FILETIME'/>
<const name='CURLINFO_SSL_VERIFYRESULT'/>
<const name='CURLINFO_CONTENT_LENGTH_DOWNLOAD'/>
<const name='CURLINFO_CONTENT_LENGTH_UPLOAD'/>
<const name='CURLE_OK'/>
<const name='CURLE_UNSUPPORTED_PROTOCOL'/>
<const name='CURLE_FAILED_INIT'/>
<const name='CURLE_URL_MALFORMAT'/>
<const name='CURLE_URL_MALFORMAT_USER'/>
<const name='CURLE_COULDNT_RESOLVE_PROXY'/>
<const name='CURLE_COULDNT_RESOLVE_HOST'/>
<const name='CURLE_COULDNT_CONNECT'/>
<const name='CURLE_FTP_WEIRD_SERVER_REPLY'/>
<const name='CURLE_FTP_ACCESS_DENIED'/>
<const name='CURLE_FTP_USER_PASSWORD_INCORRECT'/>
<const name='CURLE_FTP_WEIRD_PASS_REPLY'/>
<const name='CURLE_FTP_WEIRD_USER_REPLY'/>
<const name='CURLE_FTP_WEIRD_PASV_REPLY'/>
<const name='CURLE_FTP_WEIRD_227_FORMAT'/>
<const name='CURLE_FTP_CANT_GET_HOST'/>
<const name='CURLE_FTP_CANT_RECONNECT'/>
<const name='CURLE_FTP_COULDNT_SET_BINARY'/>
<const name='CURLE_PARTIAL_FILE'/>
<const name='CURLE_FTP_COULDNT_RETR_FILE'/>
<const name='CURLE_FTP_WRITE_ERROR'/>
<const name='CURLE_FTP_QUOTE_ERROR'/>
<const name='CURLE_HTTP_NOT_FOUND'/>
<const name='CURLE_WRITE_ERROR'/>
<const name='CURLE_MALFORMAT_USER'/>
<const name='CURLE_FTP_COULDNT_STOR_FILE'/>
<const name='CURLE_READ_ERROR'/>
<const name='CURLE_OUT_OF_MEMORY'/>
<const name='CURLE_OPERATION_TIMEOUTED'/>
<const name='CURLE_FTP_COULDNT_SET_ASCII'/>
<const name='CURLE_FTP_PORT_FAILED'/>
<const name='CURLE_FTP_COULDNT_USE_REST'/>
<const name='CURLE_FTP_COULDNT_GET_SIZE'/>
<const name='CURLE_HTTP_RANGE_ERROR'/>
<const name='CURLE_HTTP_POST_ERROR'/>
<const name='CURLE_SSL_CONNECT_ERROR'/>
<const name='CURLE_FTP_BAD_DOWNLOAD_RESUME'/>
<const name='CURLE_FILE_COULDNT_READ_FILE'/>
<const name='CURLE_LDAP_CANNOT_BIND'/>
<const name='CURLE_LDAP_SEARCH_FAILED'/>
<const name='CURLE_LIBRARY_NOT_FOUND'/>
<const name='CURLE_FUNCTION_NOT_FOUND'/>
<const name='CURLE_ABORTED_BY_CALLBACK'/>
<const name='CURLE_BAD_FUNCTION_ARGUMENT'/>
<const name='CURLE_BAD_CALLING_ORDER'/>
<const name='CURLE_HTTP_PORT_FAILED'/>
<const name='CURLE_BAD_PASSWORD_ENTERED'/>
<const name='CURLE_TOO_MANY_REDIRECTS'/>
<const name='CURLE_UNKNOWN_TELNET_OPTION'/>
<const name='CURLE_TELNET_OPTION_SYNTAX'/>
<const name='CURLE_OBSOLETE'/>
<const name='CURLE_SSL_PEER_CERTIFICATE'/>
</package>
<package name='Cybercash-Payment' number='XIII' desc='Cybercash Payment Functions'>
<function name='cybercash_base64_decode' decs='base64 decode data for Cybercash'/>
<function name='cybercash_base64_encode' decs='base64 encode data for Cybercash'/>
<function name='cybercash_decr' decs='Cybercash decrypt'/>
<function name='cybercash_encr' decs='Cybercash encrypt'/>
</package>
<package name='Cyrus-IMAP-administration' number='XIV' desc='Cyrus IMAP administration Functions'>
<function name='cyrus_authenticate' decs='Authenticate against a Cyrus IMAP server '/>
<function name='cyrus_bind' decs='Bind callbacks to a Cyrus IMAP connection '/>
<function name='cyrus_close' decs='Close connection to a Cyrus IMAP server '/>
<function name='cyrus_connect' decs='Connect to a Cyrus IMAP server '/>
<function name='cyrus_query' decs='Send a query to a Cyrus IMAP server '/>
<function name='cyrus_unbind' decs='Unbind ... '/>
<const name='CYRUS_CONN_NONSYNCLITERAL'/>
<const name='CYRUS_CONN_INITIALRESPONSE'/>
<const name='CYRUS_CALLBACK_NUMBERED'/>
<const name='CYRUS_CALLBACK_NOLITERAL'/>
</package>
<package name='Character-Type' number='XV' desc='Character Type Functions'>
<function name='ctype_alnum' decs='Check for alphanumeric character(s)'/>
<function name='ctype_alpha' decs='Check for alphabetic character(s)'/>
<function name='ctype_cntrl' decs='Check for control character(s)'/>
<function name='ctype_digit' decs='Check for numeric character(s)'/>
<function name='ctype_graph' decs='Check for any printable character(s) except space'/>
<function name='ctype_lower' decs='Check for lowercase character(s)'/>
<function name='ctype_print' decs='Check for printable character(s)'/>
<function name='ctype_punct' decs='Check for any printable character which is not whitespace or an alphanumeric character '/>
<function name='ctype_space' decs='Check for whitespace character(s)'/>
<function name='ctype_upper' decs='Check for uppercase character(s)'/>
<function name='ctype_xdigit' decs='Check for character(s) representing a hexadecimal digit '/>
</package>
<package name='Database-dbm-style-Abstraction-Layer' number='XVI' desc='Database (dbm-style) Abstraction Layer Functions'>
<function name='dba_close' decs='Close database'/>
<function name='dba_delete' decs='Delete entry specified by key'/>
<function name='dba_exists' decs='Check whether key exists'/>
<function name='dba_fetch' decs='Fetch data specified by key'/>
<function name='dba_firstkey' decs='Fetch first key'/>
<function name='dba_handlers' decs='List handlers available'/>
<function name='dba_insert' decs='Insert entry'/>
<function name='dba_key_split' decs='Splits a key in string representation into array representation'/>
<function name='dba_list' decs='List all open database files'/>
<function name='dba_nextkey' decs='Fetch next key'/>
<function name='dba_open' decs='Open database'/>
<function name='dba_optimize' decs='Optimize database'/>
<function name='dba_popen' decs='Open database persistently'/>
<function name='dba_replace' decs='Replace or insert entry'/>
<function name='dba_sync' decs='Synchronize database'/>
</package>
<package name='Date-and-Time' number='XVII' desc='Date and Time Functions'>
<function name='checkdate' decs='Validate a Gregorian date'/>
<function name='date' decs='Format a local time/date'/>
<function name='getdate' decs='Get date/time information'/>
<function name='gettimeofday' decs='Get current time'/>
<function name='gmdate' decs='Format a GMT/UTC date/time'/>
<function name='gmmktime' decs='Get Unix timestamp for a GMT date'/>
<function name='gmstrftime' decs='Format a GMT/UTC time/date according to locale settings '/>
<function name='localtime' decs='Get the local time'/>
<function name='microtime' decs='Return current Unix timestamp with microseconds '/>
<function name='mktime' decs='Get Unix timestamp for a date'/>
<function name='strftime' decs='Format a local time/date according to locale settings '/>
<function name='strtotime' decs='Parse about any English textual datetime description into a Unix timestamp '/>
<function name='time' decs='Return current Unix timestamp'/>
</package>
<package name='dBase' number='XVIII' desc='dBase Functions'>
<function name='dbase_add_record' decs='Add a record to a dBase database'/>
<function name='dbase_close' decs='Close a dBase database'/>
<function name='dbase_create' decs='Creates a dBase database'/>
<function name='dbase_delete_record' decs='Deletes a record from a dBase database'/>
<function name='dbase_get_header_info' decs='Get the header info of a dBase database'/>
<function name='dbase_get_record_with_names' decs='Gets a record from a dBase database as an associative array '/>
<function name='dbase_get_record' decs='Gets a record from a dBase database'/>
<function name='dbase_numfields' decs='Find out how many fields are in a dBase database '/>
<function name='dbase_numrecords' decs='Find out how many records are in a dBase database '/>
<function name='dbase_open' decs='Opens a dBase database'/>
<function name='dbase_pack' decs='Packs a dBase database'/>
<function name='dbase_replace_record' decs='Replace a record in a dBase database'/>
</package>
<package name='DBM' number='XIX' desc='DBM Functions' depr='on'>
<function name='dblist' decs='Describes the DBM-compatible library being used' depr='on'/>
<function name='dbmclose' decs='Closes a dbm database' depr='on'/>
<function name='dbmdelete' decs='Deletes the value for a key from a DBM database' depr='on'/>
<function name='dbmexists' decs='Tells if a value exists for a key in a DBM database' depr='on'/>
<function name='dbmfetch' decs='Fetches a value for a key from a DBM database' depr='on'/>
<function name='dbmfirstkey' decs='Retrieves the first key from a DBM database' depr='on'/>
<function name='dbminsert' decs='Inserts a value for a key in a DBM database' depr='on'/>
<function name='dbmnextkey' decs='Retrieves the next key from a DBM database' depr='on'/>
<function name='dbmopen' decs='Opens a DBM database' depr='on'/>
<function name='dbmreplace' decs='Replaces the value for a key in a DBM database' depr='on'/>
</package>
<package name='dbx' number='XX' desc='dbx Functions'>
<function name='dbx_close' decs='Close an open connection/database'/>
<function name='dbx_compare' decs='Compare two rows for sorting purposes'/>
<function name='dbx_connect' decs='Open a connection/database'/>
<function name='dbx_error' decs='Report the error message of the latest function call in the module (not just in the connection) '/>
<function name='dbx_escape_string' decs='Escape a string so it can safely be used in an sql-statement. '/>
<function name='dbx_fetch_row' decs='Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set'/>
<function name='dbx_query' decs='Send a query and fetch all results (if any)'/>
<function name='dbx_sort' decs='Sort a result from a dbx_query by a custom sort function '/>
<const name='DBX_MYSQL'/>
<const name='DBX_ODBC'/>
<const name='DBX_PGSQL'/>
<const name='DBX_MSSQL'/>
<const name='DBX_FBSQL'/>
<const name='DBX_OCI8'/>
<const name='DBX_SYBASECT'/>
<const name='DBX_SQLITE'/>
<const name='DBX_PERSISTENT'/>
<const name='DBX_RESULT_INFO'/>
<const name='DBX_RESULT_INDEX'/>
<const name='DBX_RESULT_ASSOC'/>
<const name='DBX_RESULT_UNBUFFERED'/>
<const name='DBX_COLNAMES_UNCHANGED'/>
<const name='DBX_COLNAMES_UPPERCASE'/>
<const name='DBX_COLNAMES_LOWERCASE'/>
<const name='DBX_CMP_NATIVE'/>
<const name='DBX_CMP_TEXT'/>
<const name='DBX_CMP_NUMBER'/>
<const name='DBX_CMP_ASC'/>
<const name='DBX_CMP_DESC'/>
</package>
<package name='DB' number='XXI' desc='DB++ Functions'>
<function name='dbplus_add' decs='Add a tuple to a relation'/>
<function name='dbplus_aql' decs='Perform AQL query'/>
<function name='dbplus_chdir' decs='Get/Set database virtual current directory'/>
<function name='dbplus_close' decs='Close a relation'/>
<function name='dbplus_curr' decs='Get current tuple from relation'/>
<function name='dbplus_errcode' decs='Get error string for given errorcode or last error '/>
<function name='dbplus_errno' decs='Get error code for last operation'/>
<function name='dbplus_find' decs='Set a constraint on a relation'/>
<function name='dbplus_first' decs='Get first tuple from relation'/>
<function name='dbplus_flush' decs='Flush all changes made on a relation'/>
<function name='dbplus_freealllocks' decs='Free all locks held by this client'/>
<function name='dbplus_freelock' decs='Release write lock on tuple'/>
<function name='dbplus_freerlocks' decs='Free all tuple locks on given relation'/>
<function name='dbplus_getlock' decs='Get a write lock on a tuple'/>
<function name='dbplus_getunique' decs='Get an id number unique to a relation'/>
<function name='dbplus_info' decs='???'/>
<function name='dbplus_last' decs='Get last tuple from relation'/>
<function name='dbplus_lockrel' decs='Request write lock on relation'/>
<function name='dbplus_next' decs='Get next tuple from relation'/>
<function name='dbplus_open' decs='Open relation file'/>
<function name='dbplus_prev' decs='Get previous tuple from relation'/>
<function name='dbplus_rchperm' decs='Change relation permissions'/>
<function name='dbplus_rcreate' decs='Creates a new DB++ relation'/>
<function name='dbplus_rcrtexact' decs='Creates an exact but empty copy of a relation including indices'/>
<function name='dbplus_rcrtlike' decs='Creates an empty copy of a relation with default indices'/>
<function name='dbplus_resolve' decs='Resolve host information for relation'/>
<function name='dbplus_restorepos' decs='???'/>
<function name='dbplus_rkeys' decs='Specify new primary key for a relation'/>
<function name='dbplus_ropen' decs='Open relation file local'/>
<function name='dbplus_rquery' decs='Perform local (raw) AQL query'/>
<function name='dbplus_rrename' decs='Rename a relation'/>
<function name='dbplus_rsecindex' decs='Create a new secondary index for a relation '/>
<function name='dbplus_runlink' decs='Remove relation from filesystem'/>
<function name='dbplus_rzap' decs='Remove all tuples from relation'/>
<function name='dbplus_savepos' decs='???'/>
<function name='dbplus_setindex' decs='???'/>
<function name='dbplus_setindexbynumber' decs='???'/>
<function name='dbplus_sql' decs='Perform SQL query'/>
<function name='dbplus_tcl' decs='Execute TCL code on server side'/>
<function name='dbplus_tremove' decs='Remove tuple and return new current tuple'/>
<function name='dbplus_undo' decs='???'/>
<function name='dbplus_undoprepare' decs='???'/>
<function name='dbplus_unlockrel' decs='Give up write lock on relation'/>
<function name='dbplus_unselect' decs='Remove a constraint from relation'/>
<function name='dbplus_update' decs='Update specified tuple in relation'/>
<function name='dbplus_xlockrel' decs='Request exclusive lock on relation'/>
<function name='dbplus_xunlockrel' decs='Free exclusive lock on relation'/>
<const name='DBPLUS_ERR_NOERR'/>
<const name='DBPLUS_ERR_DUPLICATE'/>
<const name='DBPLUS_ERR_EOSCAN'/>
<const name='DBPLUS_ERR_EMPTY'/>
<const name='DBPLUS_ERR_CLOSE'/>
<const name='DBPLUS_ERR_WLOCKED'/>
<const name='DBPLUS_ERR_LOCKED'/>
<const name='DBPLUS_ERR_NOLOCK'/>
<const name='DBPLUS_ERR_READ'/>
<const name='DBPLUS_ERR_WRITE'/>
<const name='DBPLUS_ERR_CREATE'/>
<const name='DBPLUS_ERR_LSEEK'/>
<const name='DBPLUS_ERR_LENGTH'/>
<const name='DBPLUS_ERR_OPEN'/>
<const name='DBPLUS_ERR_WOPEN'/>
<const name='DBPLUS_ERR_MAGIC'/>
<const name='DBPLUS_ERR_VERSION'/>
<const name='DBPLUS_ERR_PGSIZE'/>
<const name='DBPLUS_ERR_CRC'/>
<const name='DBPLUS_ERR_PIPE'/>
<const name='DBPLUS_ERR_NIDX'/>
<const name='DBPLUS_ERR_MALLOC'/>
<const name='DBPLUS_ERR_NUSERS'/>
<const name='DBPLUS_ERR_PREEXIT'/>
<const name='DBPLUS_ERR_ONTRAP'/>
<const name='DBPLUS_ERR_PREPROC'/>
<const name='DBPLUS_ERR_DBPARSE'/>
<const name='DBPLUS_ERR_DBRUNERR'/>
<const name='DBPLUS_ERR_DBPREEXIT'/>
<const name='DBPLUS_ERR_WAIT'/>
<const name='DBPLUS_ERR_CORRUPT_TUPLE'/>
<const name='DBPLUS_ERR_WARNING0'/>
<const name='DBPLUS_ERR_PANIC'/>
<const name='DBPLUS_ERR_FIFO'/>
<const name='DBPLUS_ERR_PERM'/>
<const name='DBPLUS_ERR_TCL'/>
<const name='DBPLUS_ERR_RESTRICTED'/>
<const name='DBPLUS_ERR_USER'/>
<const name='DBPLUS_ERR_UNKNOWN'/>
</package>
<package name='Direct-IO' number='XXII' desc='Direct IO Functions'>
<function name='dio_close' decs='Closes the file descriptor given by fd'/>
<function name='dio_fcntl' decs='Performs a c library fcntl on fd'/>
<function name='dio_open' decs='Opens a new filename with specified permissions of flags and creation permissions of mode '/>
<function name='dio_read' decs='Reads n bytes from fd and returns them, if n is not specified, reads 1k block '/>
<function name='dio_seek' decs='Seeks to pos on fd from whence'/>
<function name='dio_stat' decs='Gets stat information about the file descriptor fd '/>
<function name='dio_tcsetattr' decs='Sets terminal attributes and baud rate for a serial port '/>
<function name='dio_truncate' decs='Truncates file descriptor fd to offset bytes '/>
<function name='dio_write' decs='Writes data to fd with optional truncation at length '/>
</package>
<package name='Directory' number='XXIII' desc='Directory Functions'>
<function name='chdir' decs='Change directory'/>
<function name='chroot' decs='Change the root directory'/>
<function name='dir' decs='directory class'/>
<function name='closedir' decs='close directory handle'/>
<function name='getcwd' decs='gets the current working directory'/>
<function name='opendir' decs='open directory handle'/>
<function name='readdir' decs='read entry from directory handle'/>
<function name='rewinddir' decs='rewind directory handle'/>
<function name='scandir' decs='List files and directories inside the specified path '/>
<const name='DIRECTORY_SEPARATOR'/>
<const name='PATH_SEPARATOR'/>
</package>
<package name='DOM-XML' number='XXIV' desc='DOM XML Functions'>
<method class='DomAttribute' call='dynamic' name='name' decs='Returns name of attribute '/>
<method class='DomAttribute' call='dynamic' name='specified' decs='Checks if attribute is specified '/>
<method class='DomAttribute' call='dynamic' name='value' decs='Returns value of attribute '/>
<method class='DomDocument' call='dynamic' name='add_root' decs='Adds a root node' depr='on'/>
<method class='DomDocument' call='dynamic' name='create_attribute' decs='Create new attribute'/>
<method class='DomDocument' call='dynamic' name='create_cdata_section' decs='Create new cdata node'/>
<method class='DomDocument' call='dynamic' name='create_comment' decs='Create new comment node'/>
<method class='DomDocument' call='dynamic' name='create_element_ns' decs='Create new element node with an associated namespace '/>
<method class='DomDocument' call='dynamic' name='create_element' decs='Create new element node'/>
<method class='DomDocument' call='dynamic' name='create_entity_reference' decs=''/>
<method class='DomDocument' call='dynamic' name='create_processing_instruction' decs='Creates new PI node'/>
<method class='DomDocument' call='dynamic' name='create_text_node' decs='Create new text node'/>
<method class='DomDocument' call='dynamic' name='doctype' decs='Returns the document type '/>
<method class='DomDocument' call='dynamic' name='document_element' decs='Returns root element node '/>
<method class='DomDocument' call='dynamic' name='dump_file' decs='Dumps the internal XML tree back into a file '/>
<method class='DomDocument' call='dynamic' name='dump_mem' decs='Dumps the internal XML tree back into a string '/>
<method class='DomDocument' call='dynamic' name='get_element_by_id' decs='Searches for an element with a certain id '/>
<method class='DomDocument' call='dynamic' name='get_elements_by_tagname' decs=''/>
<method class='DomDocument' call='dynamic' name='html_dump_mem' decs='Dumps the internal XML tree back into a string as HTML '/>
<method class='DomDocument' call='dynamic' name='xinclude' decs='Substitutes XIncludes in a DomDocument Object. '/>
<method class='DomDocumentType' call='dynamic' name='entities' decs='Returns list of entities '/>
<method class='DomDocumentType' call='dynamic' name='internal_subset' decs='Returns internal subset '/>
<method class='DomDocumentType' call='dynamic' name='name' decs='Returns name of document type '/>
<method class='DomDocumentType' call='dynamic' name='notations' decs='Returns list of notations '/>
<method class='DomDocumentType' call='dynamic' name='public_id' decs='Returns public id of document type '/>
<method class='DomDocumentType' call='dynamic' name='system_id' decs='Returns system id of document type '/>
<method class='DomElement' call='dynamic' name='get_attribute_node' decs='Returns value of attribute '/>
<method class='DomElement' call='dynamic' name='get_attribute' decs='Returns value of attribute '/>
<method class='DomElement' call='dynamic' name='get_elements_by_tagname' decs='Gets elements by tagname '/>
<method class='DomElement' call='dynamic' name='has_attribute' decs='Checks to see if attribute exists '/>
<method class='DomElement' call='dynamic' name='remove_attribute' decs='Removes attribute '/>
<method class='DomElement' call='dynamic' name='set_attribute' decs='Adds new attribute '/>
<method class='DomElement' call='dynamic' name='tagname' decs='Returns name of element '/>
<method class='DomNode' call='dynamic' name='add_namespace' decs='Adds a namespace declaration to a node. '/>
<method class='DomNode' call='dynamic' name='append_child' decs='Adds new child at the end of the children '/>
<method class='DomNode' call='dynamic' name='append_sibling' decs='Adds new sibling to a node '/>
<method class='DomNode' call='dynamic' name='attributes' decs='Returns list of attributes '/>
<method class='DomNode' call='dynamic' name='child_nodes' decs='Returns children of node '/>
<method class='DomNode' call='dynamic' name='clone_node' decs='Clones a node '/>
<method class='DomNode' call='dynamic' name='dump_node' decs='Dumps a single node '/>
<method class='DomNode' call='dynamic' name='first_child' decs='Returns first child of node '/>
<method class='DomNode' call='dynamic' name='get_content' decs='Gets content of node '/>
<method class='DomNode' call='dynamic' name='has_attributes' decs='Checks if node has attributes '/>
<method class='DomNode' call='dynamic' name='has_child_nodes' decs='Checks if node has children '/>
<method class='DomNode' call='dynamic' name='insert_before' decs='Inserts new node as child '/>
<method class='DomNode' call='dynamic' name='is_blank_node' decs='Checks if node is blank '/>
<method class='DomNode' call='dynamic' name='last_child' decs='Returns last child of node '/>
<method class='DomNode' call='dynamic' name='next_sibling' decs='Returns the next sibling of node '/>
<method class='DomNode' call='dynamic' name='node_name' decs='Returns name of node '/>
<method class='DomNode' call='dynamic' name='node_type' decs='Returns type of node '/>
<method class='DomNode' call='dynamic' name='node_value' decs='Returns value of a node '/>
<method class='DomNode' call='dynamic' name='owner_document' decs='Returns the document this node belongs to '/>
<method class='DomNode' call='dynamic' name='parent_node' decs='Returns the parent of the node '/>
<method class='DomNode' call='dynamic' name='prefix' decs='Returns name space prefix of node '/>
<method class='DomNode' call='dynamic' name='previous_sibling' decs='Returns the previous sibling of node '/>
<method class='DomNode' call='dynamic' name='remove_child' decs='Removes child from list of children '/>
<method class='DomNode' call='dynamic' name='replace_child' decs='Replaces a child '/>
<method class='DomNode' call='dynamic' name='replace_node' decs='Replaces node '/>
<method class='DomNode' call='dynamic' name='set_content' decs='Sets content of node '/>
<method class='DomNode' call='dynamic' name='set_name' decs='Sets name of node '/>
<method class='DomNode' call='dynamic' name='set_namespace' decs='Sets namespace of a node. '/>
<method class='DomNode' call='dynamic' name='unlink_node' decs='Deletes node '/>
<method class='DomProcessingInstruction' call='dynamic' name='data' decs='Returns data of pi node '/>
<method class='DomProcessingInstruction' call='dynamic' name='target' decs='Returns target of pi node '/>
<method class='DomXsltStylesheet' call='dynamic' name='process' decs='Applies the XSLT-Transformation on a DomDocument Object. '/>
<method class='DomXsltStylesheet' call='dynamic' name='result_dump_file' decs='Dumps the result from a XSLT-Transformation into a file '/>
<method class='DomXsltStylesheet' call='dynamic' name='result_dump_mem' decs='Dumps the result from a XSLT-Transformation back into a string '/>
<function name='domxml_new_doc' decs='Creates new empty XML document '/>
<function name='domxml_open_file' decs='Creates a DOM object from XML file'/>
<function name='domxml_open_mem' decs='Creates a DOM object of an XML document'/>
<function name='domxml_version' decs='Get XML library version '/>
<function name='domxml_xmltree' decs='Creates a tree of PHP objects from an XML document '/>
<function name='domxml_xslt_stylesheet_doc' decs='Creates a DomXsltStylesheet Object from a DomDocument Object. '/>
<function name='domxml_xslt_stylesheet_file' decs='Creates a DomXsltStylesheet Object from an XSL document in a file. '/>
<function name='domxml_xslt_stylesheet' decs='Creates a DomXsltStylesheet Object from an XML document in a string. '/>
<function name='xpath_eval_expression' decs='Evaluates the XPath Location Path in the given string '/>
<function name='xpath_eval' decs='Evaluates the XPath Location Path in the given string '/>
<function name='xpath_new_context' decs='Creates new xpath context '/>
<function name='xptr_eval' decs='Evaluate the XPtr Location Path in the given string '/>
<function name='xptr_new_context' decs='Create new XPath Context '/>
<const name='xmldoc'/>
<const name='xmldocfile'/>
<const name='domxml_new_xmldoc'/>
<const name='domxml_dump_mem'/>
<const name='domxml_dump_mem_file'/>
<const name='DomDocument_dump_mem_file'/>
<const name='DomDocument_add_root'/>
<const name='DomDocument_dtd'/>
<const name='DomDocument_root'/>
<const name='DomDocument_children'/>
<const name='DomDocument_imported_node'/>
<const name='DomNode_add_child'/>
<const name='DomNode_children'/>
<const name='DomNode_parent'/>
<const name='DomNode_new_child'/>
<const name='DomNode_set_content'/>
<const name='DomNode_get_content'/>
<const name='XML_ELEMENT_NODE'/>
<const name='XML_ATTRIBUTE_NODE'/>
<const name='XML_TEXT_NODE'/>
<const name='XML_CDATA_SECTION_NODE'/>
<const name='XML_ENTITY_REF_NODE'/>
<const name='XML_ENTITY_NODE'/>
<const name='XML_PI_NODE'/>
<const name='XML_COMMENT_NODE'/>
<const name='XML_DOCUMENT_NODE'/>
<const name='XML_DOCUMENT_TYPE_NODE'/>
<const name='XML_DOCUMENT_FRAG_NODE'/>
<const name='XML_NOTATION_NODE'/>
<const name='XML_GLOBAL_NAMESPACE'/>
<const name='XML_LOCAL_NAMESPACE'/>
<const name='XML_HTML_DOCUMENT_NODE'/>
<const name='XML_DTD_NODE'/>
<const name='XML_ELEMENT_DECL_NODE'/>
<const name='XML_ATTRIBUTE_DECL_NODE'/>
<const name='XML_ENTITY_DECL_NODE'/>
<const name='XML_NAMESPACE_DECL_NODE'/>
<const name='XML_ATTRIBUTE_CDATA'/>
<const name='XML_ATTRIBUTE_ID'/>
<const name='XML_ATTRIBUTE_IDREF'/>
<const name='XML_ATTRIBUTE_IDREFS'/>
<const name='XML_ATTRIBUTE_ENTITY'/>
<const name='XML_ATTRIBUTE_NMTOKEN'/>
<const name='XML_ATTRIBUTE_NMTOKENS'/>
<const name='XML_ATTRIBUTE_ENUMERATION'/>
<const name='XML_ATTRIBUTE_NOTATION'/>
<const name='XPATH_UNDEFINED'/>
<const name='XPATH_NODESET'/>
<const name='XPATH_BOOLEAN'/>
<const name='XPATH_NUMBER'/>
<const name='XPATH_STRING'/>
<const name='XPATH_POINT'/>
<const name='XPATH_RANGE'/>
<const name='XPATH_LOCATIONSET'/>
<const name='XPATH_USERS'/>
<const name='XPATH_NUMBER'/>
</package>
<package name='NET' number='XXV' desc='.NET Functions'>
<function name='dotnet_load' decs='Loads a DOTNET module'/>
</package>
<package name='Error-Handling-and-Logging' number='XXVI' desc='Error Handling and Logging Functions'>
<function name='debug_backtrace' decs='Generates a backtrace '/>
<function name='debug_print_backtrace' decs='Prints a backtrace '/>
<function name='error_log' decs='Send an error message somewhere'/>
<function name='error_reporting' decs='Sets which PHP errors are reported'/>
<function name='restore_error_handler' decs='Restores the previous error handler function '/>
<function name='set_error_handler' decs='Sets a user-defined error handler function. '/>
<function name='trigger_error' decs='Generates a user-level error/warning/notice message '/>
<function name='user_error' decs='Alias of trigger_error()'/>
<const name='E_ERROR'/>
<const name='E_WARNING'/>
<const name='E_PARSE'/>
<const name='E_NOTICE'/>
<const name='E_CORE_ERROR'/>
<const name='E_CORE_WARNING'/>
<const name='E_COMPILE_ERROR'/>
<const name='E_COMPILE_WARNING'/>
<const name='E_USER_ERROR'/>
<const name='E_USER_WARNING'/>
<const name='E_USER_NOTICE'/>
<const name='E_ALL'/>
<const name='E_STRICT'/>
</package>
<package name='File-Alteration-Monitor' number='XXVII' desc='File Alteration Monitor Functions'>
<function name='fam_cancel_monitor' decs='Terminate monitoring'/>
<function name='fam_close' decs='Close FAM connection'/>
<function name='fam_monitor_collection' decs='Monitor a collection of files in a directory for changes'/>
<function name='fam_monitor_directory' decs='Monitor a directory for changes'/>
<function name='fam_monitor_file' decs='Monitor a regular file for changes'/>
<function name='fam_next_event' decs='...'/>
<function name='fam_open' decs='Open connection to FAM daemon'/>
<function name='fam_pending' decs='Check for pending FAM events'/>
<function name='fam_resume_monitor' decs='Resume suspended monitoring'/>
<function name='fam_suspend_monitor' decs='Temporarily suspend monitoring'/>
<const name='FAMChanged'/>
<const name='FAMDeleted'/>
<const name='FAMStartExecuting'/>
<const name='FAMStopExecuting'/>
<const name='FAMCreated'/>
<const name='FAMMoved'/>
<const name='FAMAcknowledge'/>
<const name='FAMExists'/>
<const name='FAMEndExist'/>
</package>
<package name='FrontBase' number='XXVIII' desc='FrontBase Functions'>
<function name='fbsql_affected_rows' decs='Get number of affected rows in previous FrontBase operation '/>
<function name='fbsql_autocommit' decs='Enable or disable autocommit'/>
<function name='fbsql_change_user' decs='Change logged in user of the active connection '/>
<function name='fbsql_close' decs='Close FrontBase connection'/>
<function name='fbsql_commit' decs='Commits a transaction to the database'/>
<function name='fbsql_connect' decs='Open a connection to a FrontBase Server'/>
<function name='fbsql_create_blob' decs='Create a BLOB'/>
<function name='fbsql_create_clob' decs='Create a CLOB'/>
<function name='fbsql_create_db' decs='Create a FrontBase database'/>
<function name='fbsql_data_seek' decs='Move internal result pointer'/>
<function name='fbsql_database_password' decs='Sets or retrieves the password for a FrontBase database '/>
<function name='fbsql_database' decs='Get or set the database name used with a connection'/>
<function name='fbsql_db_query' decs='Send a FrontBase query'/>
<function name='fbsql_db_status' decs='Get the status for a given database'/>
<function name='fbsql_drop_db' decs='Drop (delete) a FrontBase database'/>
<function name='fbsql_errno' decs='Returns the numerical value of the error message from previous FrontBase operation '/>
<function name='fbsql_error' decs='Returns the text of the error message from previous FrontBase operation '/>
<function name='fbsql_fetch_array' decs='Fetch a result row as an associative array, a numeric array, or both '/>
<function name='fbsql_fetch_assoc' decs='Fetch a result row as an associative array '/>
<function name='fbsql_fetch_field' decs='Get column information from a result and return as an object '/>
<function name='fbsql_fetch_lengths' decs='Get the length of each output in a result '/>
<function name='fbsql_fetch_object' decs='Fetch a result row as an object'/>
<function name='fbsql_fetch_row' decs='Get a result row as an enumerated array'/>
<function name='fbsql_field_flags' decs='Get the flags associated with the specified field in a result '/>
<function name='fbsql_field_len' decs='Returns the length of the specified field '/>
<function name='fbsql_field_name' decs='Get the name of the specified field in a result '/>
<function name='fbsql_field_seek' decs='Set result pointer to a specified field offset '/>
<function name='fbsql_field_table' decs='Get name of the table the specified field is in '/>
<function name='fbsql_field_type' decs='Get the type of the specified field in a result '/>
<function name='fbsql_free_result' decs='Free result memory'/>
<function name='fbsql_get_autostart_info' decs='No description given yet'/>
<function name='fbsql_hostname' decs='Get or set the host name used with a connection'/>
<function name='fbsql_insert_id' decs='Get the id generated from the previous INSERT operation '/>
<function name='fbsql_list_dbs' decs='List databases available on a FrontBase server '/>
<function name='fbsql_list_fields' decs='List FrontBase result fields'/>
<function name='fbsql_list_tables' decs='List tables in a FrontBase database'/>
<function name='fbsql_next_result' decs='Move the internal result pointer to the next result '/>
<function name='fbsql_num_fields' decs='Get number of fields in result'/>
<function name='fbsql_num_rows' decs='Get number of rows in result'/>
<function name='fbsql_password' decs='Get or set the user password used with a connection'/>
<function name='fbsql_pconnect' decs='Open a persistent connection to a FrontBase Server '/>
<function name='fbsql_query' decs='Send a FrontBase query'/>
<function name='fbsql_read_blob' decs='Read a BLOB from the database'/>
<function name='fbsql_read_clob' decs='Read a CLOB from the database'/>
<function name='fbsql_result' decs='Get result data'/>
<function name='fbsql_rollback' decs='Rollback a transaction to the database'/>
<function name='fbsql_select_db' decs='Select a FrontBase database'/>
<function name='fbsql_set_lob_mode' decs='Set the LOB retrieve mode for a FrontBase result set '/>
<function name='fbsql_set_transaction' decs='Set the transaction locking and isolation '/>
<function name='fbsql_start_db' decs='Start a database on local or remote server'/>
<function name='fbsql_stop_db' decs='Stop a database on local or remote server'/>
<function name='fbsql_tablename' decs='Get table name of field'/>
<function name='fbsql_username' decs='Get or set the host user used with a connection'/>
<function name='fbsql_warnings' decs='Enable or disable FrontBase warnings'/>
<const name='FBSQL_ASSOC'/>
<const name='FBSQL_NUM'/>
<const name='FBSQL_BOTH'/>
<const name='FBSQL_LOCK_DEFERRED'/>
<const name='FBSQL_LOCK_OPTIMISTIC'/>
<const name='FBSQL_LOCK_PESSIMISTIC'/>
<const name='FBSQL_ISO_READ_UNCOMMITTED'/>
<const name='FBSQL_ISO_READ_COMMITTED'/>
<const name='FBSQL_ISO_REPEATABLE_READ'/>
<const name='FBSQL_ISO_SERIALIZABLE'/>
<const name='FBSQL_ISO_VERSIONED'/>
<const name='FBSQL_UNKNOWN'/>
<const name='FBSQL_STOPPED'/>
<const name='FBSQL_STARTING'/>
<const name='FBSQL_RUNNING'/>
<const name='FBSQL_STOPPING'/>
<const name='FBSQL_NOEXEC'/>
<const name='FBSQL_LOB_DIRECT'/>
<const name='FBSQL_LOB_HANDLE'/>
</package>
<package name='filePro' number='XXIX' desc='filePro Functions'>
<function name='filepro_fieldcount' decs='Find out how many fields are in a filePro database'/>
<function name='filepro_fieldname' decs='Gets the name of a field'/>
<function name='filepro_fieldtype' decs='Gets the type of a field'/>
<function name='filepro_fieldwidth' decs='Gets the width of a field'/>
<function name='filepro_retrieve' decs='Retrieves data from a filePro database'/>
<function name='filepro_rowcount' decs='Find out how many rows are in a filePro database'/>
<function name='filepro' decs='Read and verify the map file'/>
</package>
<package name='Filesystem' number='XXX' desc='Filesystem Functions'>
<function name='basename' decs='Returns filename component of path'/>
<function name='chgrp' decs='Changes file group'/>
<function name='chmod' decs='Changes file mode'/>
<function name='chown' decs='Changes file owner'/>
<function name='clearstatcache' decs='Clears file status cache'/>
<function name='copy' decs='Copies file'/>
<function name='delete' decs='See unlink() or unset()'/>
<function name='dirname' decs='Returns directory name component of path'/>
<function name='disk_free_space' decs='Returns available space in directory'/>
<function name='disk_total_space' decs='Returns the total size of a directory'/>
<function name='diskfreespace' decs='Alias of disk_free_space()'/>
<function name='fclose' decs='Closes an open file pointer'/>
<function name='feof' decs='Tests for end-of-file on a file pointer'/>
<function name='fflush' decs='Flushes the output to a file'/>
<function name='fgetc' decs='Gets character from file pointer'/>
<function name='fgetcsv' decs='Gets line from file pointer and parse for CSV fields'/>
<function name='fgets' decs='Gets line from file pointer'/>
<function name='fgetss' decs='Gets line from file pointer and strip HTML tags'/>
<function name='file_exists' decs='Checks whether a file or directory exists'/>
<function name='file_get_contents' decs='Reads entire file into a string'/>
<function name='file_put_contents' decs='Write a string to a file'/>
<function name='file' decs='Reads entire file into an array'/>
<function name='fileatime' decs='Gets last access time of file'/>
<function name='filectime' decs='Gets inode change time of file'/>
<function name='filegroup' decs='Gets file group'/>
<function name='fileinode' decs='Gets file inode'/>
<function name='filemtime' decs='Gets file modification time'/>
<function name='fileowner' decs='Gets file owner'/>
<function name='fileperms' decs='Gets file permissions'/>
<function name='filesize' decs='Gets file size'/>
<function name='filetype' decs='Gets file type'/>
<function name='flock' decs='Portable advisory file locking'/>
<function name='fnmatch' decs='Match filename against a pattern'/>
<function name='fopen' decs='Opens file or URL'/>
<function name='fpassthru' decs='Output all remaining data on a file pointer'/>
<function name='fputs' decs='Alias of fwrite()'/>
<function name='fread' decs='Binary-safe file read'/>
<function name='fscanf' decs='Parses input from a file according to a format'/>
<function name='fseek' decs='Seeks on a file pointer'/>
<function name='fstat' decs='Gets information about a file using an open file pointer'/>
<function name='ftell' decs='Tells file pointer read/write position'/>
<function name='ftruncate' decs='Truncates a file to a given length'/>
<function name='fwrite' decs='Binary-safe file write'/>
<function name='glob' decs='Find pathnames matching a pattern'/>
<function name='is_dir' decs='Tells whether the filename is a directory'/>
<function name='is_executable' decs='Tells whether the filename is executable'/>
<function name='is_file' decs='Tells whether the filename is a regular file'/>
<function name='is_link' decs='Tells whether the filename is a symbolic link'/>
<function name='is_readable' decs='Tells whether the filename is readable'/>
<function name='is_uploaded_file' decs='Tells whether the file was uploaded via HTTP POST'/>
<function name='is_writable' decs='Tells whether the filename is writable'/>
<function name='is_writeable' decs='Alias of is_writable()'/>
<function name='link' decs='Create a hard link'/>
<function name='linkinfo' decs='Gets information about a link'/>
<function name='lstat' decs='Gives information about a file or symbolic link'/>
<function name='mkdir' decs='Makes directory'/>
<function name='move_uploaded_file' decs='Moves an uploaded file to a new location'/>
<function name='parse_ini_file' decs='Parse a configuration file'/>
<function name='pathinfo' decs='Returns information about a file path'/>
<function name='pclose' decs='Closes process file pointer'/>
<function name='popen' decs='Opens process file pointer'/>
<function name='readfile' decs='Outputs a file'/>
<function name='readlink' decs='Returns the target of a symbolic link'/>
<function name='realpath' decs='Returns canonicalized absolute pathname'/>
<function name='rename' decs='Renames a file or directory'/>
<function name='rewind' decs='Rewind the position of a file pointer'/>
<function name='rmdir' decs='Removes directory'/>
<function name='set_file_buffer' decs='Alias of stream_set_write_buffer()'/>
<function name='stat' decs='Gives information about a file'/>
<function name='symlink' decs='Creates a symbolic link'/>
<function name='tempnam' decs='Create file with unique file name'/>
<function name='tmpfile' decs='Creates a temporary file'/>
<function name='touch' decs='Sets access and modification time of file'/>
<function name='umask' decs='Changes the current umask'/>
<function name='unlink' decs='Deletes a file'/>
<const name='GLOB_BRACE'/>
<const name='GLOB_ONLYDIR'/>
<const name='GLOB_MARK'/>
<const name='GLOB_NOSORT'/>
<const name='GLOB_NOCHECK'/>
<const name='GLOB_NOESCAPE'/>
<const name='PATHINFO_DIRNAME'/>
<const name='PATHINFO_BASENAME'/>
<const name='PATHINFO_EXTENSION'/>
<const name='FILE_USE_INCLUDE_PATH'/>
<const name='FILE_APPEND'/>
<const name='FILE_IGNORE_NEW_LINES'/>
<const name='FILE_SKIP_EMPTY_LINES'/>
</package>
<package name='Forms-Data-Format' number='XXXI' desc='Forms Data Format Functions'>
<function name='fdf_add_doc_javascript' decs='Adds javascript code to the FDF document'/>
<function name='fdf_add_template' decs='Adds a template into the FDF document'/>
<function name='fdf_close' decs='Close an FDF document'/>
<function name='fdf_create' decs='Create a new FDF document'/>
<function name='fdf_enum_values' decs='Call a user defined function for each document value '/>
<function name='fdf_errno' decs='Return error code for last fdf operation'/>
<function name='fdf_error' decs='Return error description for fdf error code'/>
<function name='fdf_get_ap' decs='Get the appearance of a field'/>
<function name='fdf_get_attachment' decs='Extracts uploaded file embedded in the FDF'/>
<function name='fdf_get_encoding' decs='Get the value of the /Encoding key'/>
<function name='fdf_get_file' decs='Get the value of the /F key'/>
<function name='fdf_get_flags' decs='Gets the flags of a field'/>
<function name='fdf_get_opt' decs='Gets a value from the opt array of a field'/>
<function name='fdf_get_status' decs='Get the value of the /STATUS key'/>
<function name='fdf_get_value' decs='Get the value of a field'/>
<function name='fdf_get_version' decs='Gets version number for FDF API or file '/>
<function name='fdf_header' decs='Sets FDF-specific output headers'/>
<function name='fdf_next_field_name' decs='Get the next field name'/>
<function name='fdf_open_string' decs='Read a FDF document from a string'/>
<function name='fdf_open' decs='Open a FDF document'/>
<function name='fdf_remove_item' decs='Sets target frame for form'/>
<function name='fdf_save_string' decs='Returns the FDF document as a string'/>
<function name='fdf_save' decs='Save a FDF document'/>
<function name='fdf_set_ap' decs='Set the appearance of a field'/>
<function name='fdf_set_encoding' decs='Sets FDF character encoding'/>
<function name='fdf_set_file' decs='Set PDF document to display FDF data in'/>
<function name='fdf_set_flags' decs='Sets a flag of a field'/>
<function name='fdf_set_javascript_action' decs='Sets an javascript action of a field'/>
<function name='fdf_set_opt' decs='Sets an option of a field'/>
<function name='fdf_set_status' decs='Set the value of the /STATUS key'/>
<function name='fdf_set_submit_form_action' decs='Sets a submit form action of a field'/>
<function name='fdf_set_target_frame' decs='Set target frame for form display'/>
<function name='fdf_set_value' decs='Set the value of a field'/>
<function name='fdf_set_version' decs='Sets version number for a FDF file '/>
<const name='FDFValue'/>
<const name='FDFStatus'/>
<const name='FDFFile'/>
<const name='FDFID'/>
<const name='FDFFf'/>
<const name='FDFSetFf'/>
<const name='FDFClearFf'/>
<const name='FDFFlags'/>
<const name='FDFSetF'/>
<const name='FDFClrF'/>
<const name='FDFAP'/>
<const name='FDFAS'/>
<const name='FDFAction'/>
<const name='FDFAA'/>
<const name='FDFAPRef'/>
<const name='FDFIF'/>
<const name='FDFEnter'/>
<const name='FDFExit'/>
<const name='FDFDown'/>
<const name='FDFUp'/>
<const name='FDFFormat'/>
<const name='FDFValidate'/>
<const name='FDFKeystroke'/>
<const name='FDFCalculate'/>
<const name='FDFNormalAP'/>
<const name='FDFRolloverAP'/>
<const name='FDFDownAP'/>
</package>
<package name='FriBiDi' number='XXXII' desc='FriBiDi Functions'>
<function name='fribidi_log2vis' decs='Convert a logical string to a visual one'/>
<const name='FRIBIDI_CHARSET_UTF8'/>
<const name='FRIBIDI_CHARSET_8859_6'/>
<const name='FRIBIDI_CHARSET_8859_8'/>
<const name='FRIBIDI_CHARSET_CP1255'/>
<const name='FRIBIDI_CHARSET_CP1256'/>
<const name='FRIBIDI_CHARSET_ISIRI_3342'/>
</package>
<package name='FTP' number='XXXIII' desc='FTP Functions'>
<function name='ftp_alloc' decs='Allocates space for a file to be uploaded.'/>
<function name='ftp_cdup' decs='Changes to the parent directory'/>
<function name='ftp_chdir' decs='Changes directories on a FTP server'/>
<function name='ftp_chmod' decs='Set permissions on a file via FTP'/>
<function name='ftp_close' decs='Closes an FTP connection'/>
<function name='ftp_connect' decs='Opens an FTP connection'/>
<function name='ftp_delete' decs='Deletes a file on the FTP server'/>
<function name='ftp_exec' decs='Requests execution of a program on the FTP server'/>
<function name='ftp_fget' decs='Downloads a file from the FTP server and saves to an open file'/>
<function name='ftp_fput' decs='Uploads from an open file to the FTP server'/>
<function name='ftp_get_option' decs='Retrieves various runtime behaviours of the current FTP stream'/>
<function name='ftp_get' decs='Downloads a file from the FTP server'/>
<function name='ftp_login' decs='Logs in to an FTP connection'/>
<function name='ftp_mdtm' decs='Returns the last modified time of the given file'/>
<function name='ftp_mkdir' decs='Creates a directory'/>
<function name='ftp_nb_continue' decs='Continues retrieving/sending a file (non-blocking)'/>
<function name='ftp_nb_fget' decs='Retrieves a file from the FTP server and writes it to an open file (non-blocking)'/>
<function name='ftp_nb_fput' decs='Stores a file from an open file to the FTP server (non-blocking)'/>
<function name='ftp_nb_get' decs='Retrieves a file from the FTP server and writes it to a local file (non-blocking)'/>
<function name='ftp_nb_put' decs='Stores a file on the FTP server (non-blocking)'/>
<function name='ftp_nlist' decs='Returns a list of files in the given directory'/>
<function name='ftp_pasv' decs='Turns passive mode on or off'/>
<function name='ftp_put' decs='Uploads a file to the FTP server'/>
<function name='ftp_pwd' decs='Returns the current directory name'/>
<function name='ftp_quit' decs='Alias of ftp_close()'/>
<function name='ftp_raw' decs='Sends an arbitrary command to an FTP server'/>
<function name='ftp_rawlist' decs='Returns a detailed list of files in the given directory'/>
<function name='ftp_rename' decs='Renames a file on the FTP server'/>
<function name='ftp_rmdir' decs='Removes a directory'/>
<function name='ftp_set_option' decs='Set miscellaneous runtime FTP options'/>
<function name='ftp_site' decs='Sends a SITE command to the server'/>
<function name='ftp_size' decs='Returns the size of the given file'/>
<function name='ftp_ssl_connect' decs='Opens an Secure SSL-FTP connection'/>
<function name='ftp_systype' decs='Returns the system type identifier of the remote FTP server'/>
<const name='FTP_ASCII'/>
<const name='FTP_TEXT'/>
<const name='FTP_BINARY'/>
<const name='FTP_IMAGE'/>
<const name='FTP_TIMEOUT_SEC'/>
<const name='FTP_AUTOSEEK'/>
<const name='FTP_AUTORESUME'/>
<const name='FTP_FAILED'/>
<const name='FTP_FINISHED'/>
<const name='FTP_MOREDATA'/>
</package>
<package name='Function-Handling' number='XXXIV' desc='Function Handling Functions'>
<function name='call_user_func_array' decs='Call a user function given with an array of parameters '/>
<function name='call_user_func' decs='Call a user function given by the first parameter '/>
<function name='create_function' decs='Create an anonymous (lambda-style) function'/>
<function name='func_get_arg' decs='Return an item from the argument list'/>
<function name='func_get_args' decs='Returns an array comprising a function&apos;s argument list '/>
<function name='func_num_args' decs='Returns the number of arguments passed to the function '/>
<function name='function_exists' decs='Return TRUE if the given function has been defined '/>
<function name='get_defined_functions' decs='Returns an array of all defined functions '/>
<function name='register_shutdown_function' decs='Register a function for execution on shutdown '/>
<function name='register_tick_function' decs='Register a function for execution on each tick '/>
<function name='unregister_tick_function' decs='De-register a function for execution on each tick '/>
</package>
<package name='Gettext' number='XXXV' desc='Gettext'>
<function name='bind_textdomain_codeset' decs='Specify the character encoding in which the messages from the DOMAIN message catalog will be returned '/>
<function name='bindtextdomain' decs='Sets the path for a domain'/>
<function name='dcgettext' decs='Overrides the domain for a single lookup'/>
<function name='dcngettext' decs='Plural version of dcgettext'/>
<function name='dgettext' decs='Override the current domain'/>
<function name='dngettext' decs='Plural version of dgettext'/>
<function name='gettext' decs='Lookup a message in the current domain'/>
<function name='ngettext' decs='Plural version of gettext'/>
<function name='textdomain' decs='Sets the default domain'/>
</package>
<package name='GMP' number='XXXVI' desc='GMP Functions'>
<function name='gmp_abs' decs='Absolute value'/>
<function name='gmp_add' decs='Add numbers'/>
<function name='gmp_and' decs='Logical AND'/>
<function name='gmp_clrbit' decs='Clear bit'/>
<function name='gmp_cmp' decs='Compare numbers'/>
<function name='gmp_com' decs='Calculates one&apos;s complement'/>
<function name='gmp_div_q' decs='Divide numbers'/>
<function name='gmp_div_qr' decs='Divide numbers and get quotient and remainder'/>
<function name='gmp_div_r' decs='Remainder of the division of numbers'/>
<function name='gmp_div' decs='Alias of gmp_div_q()'/>
<function name='gmp_divexact' decs='Exact division of numbers'/>
<function name='gmp_fact' decs='Factorial'/>
<function name='gmp_gcd' decs='Calculate GCD'/>
<function name='gmp_gcdext' decs='Calculate GCD and multipliers'/>
<function name='gmp_hamdist' decs='Hamming distance'/>
<function name='gmp_init' decs='Create GMP number'/>
<function name='gmp_intval' decs='Convert GMP number to integer'/>
<function name='gmp_invert' decs='Inverse by modulo'/>
<function name='gmp_jacobi' decs='Jacobi symbol'/>
<function name='gmp_legendre' decs='Legendre symbol'/>
<function name='gmp_mod' decs='Modulo operation'/>
<function name='gmp_mul' decs='Multiply numbers'/>
<function name='gmp_neg' decs='Negate number'/>
<function name='gmp_or' decs='Logical OR'/>
<function name='gmp_perfect_square' decs='Perfect square check'/>
<function name='gmp_popcount' decs='Population count'/>
<function name='gmp_pow' decs='Raise number into power'/>
<function name='gmp_powm' decs='Raise number into power with modulo'/>
<function name='gmp_prob_prime' decs='Check if number is &quot;probably prime&quot;'/>
<function name='gmp_random' decs='Random number'/>
<function name='gmp_scan0' decs='Scan for 0'/>
<function name='gmp_scan1' decs='Scan for 1'/>
<function name='gmp_setbit' decs='Set bit'/>
<function name='gmp_sign' decs='Sign of number'/>
<function name='gmp_sqrt' decs='Calculate square root'/>
<function name='gmp_sqrtrem' decs='Square root with remainder '/>
<function name='gmp_strval' decs='Convert GMP number to string'/>
<function name='gmp_sub' decs='Subtract numbers'/>
<function name='gmp_xor' decs='Logical XOR'/>
<const name='GMP_ROUND_ZERO'/>
<const name='GMP_ROUND_PLUSINF'/>
<const name='GMP_ROUND_MINUSINF'/>
</package>
<package name='HTTP' number='XXXVII' desc='HTTP Functions'>
<function name='header' decs='Send a raw HTTP header'/>
<function name='headers_list' decs='Returns a list of response headers sent (or ready to send)'/>
<function name='headers_sent' decs='Checks if or where headers have been sent'/>
<function name='setcookie' decs='Send a cookie'/>
<function name='setrawcookie' decs='Send a cookie without urlencoding the cookie value'/>
</package>
<package name='Hyperwave' number='XXXVIII' desc='Hyperwave Functions'>
<function name='hw_Array2Objrec' decs='convert attributes from object array to object record'/>
<function name='hw_changeobject' decs='Changes attributes of an object (obsolete) '/>
<function name='hw_Children' decs='object ids of children'/>
<function name='hw_ChildrenObj' decs='object records of children'/>
<function name='hw_Close' decs='closes the Hyperwave connection'/>
<function name='hw_Connect' decs='opens a connection'/>
<function name='hw_connection_info' decs='Prints information about the connection to Hyperwave server '/>
<function name='hw_cp' decs='Copies objects'/>
<function name='hw_Deleteobject' decs='deletes object'/>
<function name='hw_DocByAnchor' decs='object id object belonging to anchor'/>
<function name='hw_DocByAnchorObj' decs='object record object belonging to anchor'/>
<function name='hw_Document_Attributes' decs='object record of hw_document'/>
<function name='hw_Document_BodyTag' decs='body tag of hw_document'/>
<function name='hw_documentbodytag' decs='body tag of hw_document' depr='on'/>
<function name='hw_Document_Content' decs='returns content of hw_document'/>
<function name='hw_Document_SetContent' decs='sets/replaces content of hw_document'/>
<function name='hw_Document_Size' decs='size of hw_document'/>
<function name='hw_documentsize' decs='size of hw_document' depr='on'/>
<function name='hw_dummy' decs='Hyperwave dummy function '/>
<function name='hw_EditText' decs='retrieve text document'/>
<function name='hw_Error' decs='error number'/>
<function name='hw_ErrorMsg' decs='returns error message'/>
<function name='hw_Free_Document' decs='frees hw_document'/>
<function name='hw_GetAnchors' decs='object ids of anchors of document'/>
<function name='hw_GetAnchorsObj' decs='object records of anchors of document'/>
<function name='hw_GetAndLock' decs='return object record and lock object'/>
<function name='hw_GetChildColl' decs='object ids of child collections'/>
<function name='hw_GetChildCollObj' decs='object records of child collections'/>
<function name='hw_GetChildDocColl' decs='object ids of child documents of collection'/>
<function name='hw_GetChildDocCollObj' decs='object records of child documents of collection'/>
<function name='hw_GetObject' decs='object record'/>
<function name='hw_GetObjectByQuery' decs='search object'/>
<function name='hw_GetObjectByQueryColl' decs='search object in collection'/>
<function name='hw_GetObjectByQueryCollObj' decs='search object in collection'/>
<function name='hw_GetObjectByQueryObj' decs='search object'/>
<function name='hw_GetParents' decs='object ids of parents'/>
<function name='hw_GetParentsObj' decs='object records of parents'/>
<function name='hw_getrellink' decs='Get link from source to dest relative to rootid '/>
<function name='hw_GetRemote' decs='Gets a remote document'/>
<function name='hw_getremotechildren' decs='Gets children of remote document'/>
<function name='hw_GetSrcByDestObj' decs='Returns anchors pointing at object'/>
<function name='hw_GetText' decs='retrieve text document'/>
<function name='hw_getusername' decs='name of currently logged in user'/>
<function name='hw_Identify' decs='identifies as user'/>
<function name='hw_InCollections' decs='check if object ids in collections'/>
<function name='hw_Info' decs='info about connection'/>
<function name='hw_InsColl' decs='insert collection'/>
<function name='hw_InsDoc' decs='insert document'/>
<function name='hw_insertanchors' decs='Inserts only anchors into text '/>
<function name='hw_InsertDocument' decs='upload any document'/>
<function name='hw_InsertObject' decs='inserts an object record'/>
<function name='hw_mapid' decs='Maps global id on virtual local id'/>
<function name='hw_Modifyobject' decs='modifies object record'/>
<function name='hw_mv' decs='Moves objects'/>
<function name='hw_New_Document' decs='create new document'/>
<function name='hw_objrec2array' decs='Convert attributes from object record to object array'/>
<function name='hw_Output_Document' decs='prints hw_document'/>
<function name='hw_OutputDocument' decs='prints hw_document' depr='on'/>
<function name='hw_pConnect' decs='make a persistent database connection'/>
<function name='hw_PipeDocument' decs='retrieve any document'/>
<function name='hw_Root' decs='root object id'/>
<function name='hw_setlinkroot' decs='Set the id to which links are calculated '/>
<function name='hw_stat' decs='Returns status string '/>
<function name='hw_Unlock' decs='unlock object'/>
<function name='hw_Who' decs='List of currently logged in users'/>
<const name='HW_ATTR_LANG'/>
<const name='HW_ATTR_NR'/>
<const name='HW_ATTR_NONE'/>
</package>
<package name='Hyperwave-API' number='XXXIX' desc='Hyperwave API Functions'>
<method class='hw_api_attribute' call='dynamic' name='key' decs='Returns key of the attribute'/>
<method class='hw_api_attribute' call='dynamic' name='langdepvalue' decs='Returns value for a given language'/>
<method class='hw_api_attribute' call='dynamic' name='value' decs='Returns value of the attribute'/>
<method class='hw_api_attribute' call='dynamic' name='values' decs='Returns all values of the attribute'/>
<function name='hw_api_attribute' decs='Creates instance of class hw_api_attribute'/>
<method class='hw_api' call='dynamic' name='checkin' decs='Checks in an object'/>
<method class='hw_api' call='dynamic' name='checkout' decs='Checks out an object'/>
<method class='hw_api' call='dynamic' name='children' decs='Returns children of an object'/>
<method class='hw_api_content' call='dynamic' name='mimetype' decs='Returns mimetype'/>
<method class='hw_api_content' call='dynamic' name='read' decs='Read content'/>
<method class='hw_api' call='dynamic' name='content' decs='Returns content of an object'/>
<method class='hw_api' call='dynamic' name='copy' decs='Copies physically'/>
<method class='hw_api' call='dynamic' name='dbstat' decs='Returns statistics about database server'/>
<method class='hw_api' call='dynamic' name='dcstat' decs='Returns statistics about document cache server'/>
<method class='hw_api' call='dynamic' name='dstanchors' decs='Returns a list of all destination anchors'/>
<method class='hw_api' call='dynamic' name='dstofsrcanchors' decs='Returns destination of a source anchor'/>
<method class='hw_api_error' call='dynamic' name='count' decs='Returns number of reasons'/>
<method class='hw_api_error' call='dynamic' name='reason' decs='Returns reason of error'/>
<method class='hw_api' call='dynamic' name='find' decs='Search for objects'/>
<method class='hw_api' call='dynamic' name='ftstat' decs='Returns statistics about fulltext server'/>
<function name='hwapi_hgcsp' decs='Returns object of class hw_api'/>
<method class='hw_api' call='dynamic' name='hwstat' decs='Returns statistics about Hyperwave server'/>
<method class='hw_api' call='dynamic' name='identify' decs='Log into Hyperwave Server'/>
<method class='hw_api' call='dynamic' name='info' decs='Returns information about server configuration'/>
<method class='hw_api' call='dynamic' name='insert' decs='Inserts a new object'/>
<method class='hw_api' call='dynamic' name='insertanchor' decs='Inserts a new object of type anchor'/>
<method class='hw_api' call='dynamic' name='insertcollection' decs='Inserts a new object of type collection'/>
<method class='hw_api' call='dynamic' name='insertdocument' decs='Inserts a new object of type document'/>
<method class='hw_api' call='dynamic' name='link' decs='Creates a link to an object'/>
<method class='hw_api' call='dynamic' name='lock' decs='Locks an object'/>
<method class='hw_api' call='dynamic' name='move' decs='Moves object between collections'/>
<function name='hw_api_content' decs='Create new instance of class hw_api_content'/>
<method class='hw_api_object' call='dynamic' name='assign' decs='Clones object'/>
<method class='hw_api_object' call='dynamic' name='attreditable' decs='Checks whether an attribute is editable'/>
<method class='hw_api_object' call='dynamic' name='count' decs='Returns number of attributes'/>
<method class='hw_api_object' call='dynamic' name='insert' decs='Inserts new attribute'/>
<function name='hw_api_object' decs='Creates a new instance of class hw_api_object'/>
<method class='hw_api_object' call='dynamic' name='remove' decs='Removes attribute'/>
<method class='hw_api_object' call='dynamic' name='title' decs='Returns the title attribute'/>
<method class='hw_api_object' call='dynamic' name='value' decs='Returns value of attribute'/>
<method class='hw_api' call='dynamic' name='object' decs='Retrieve attribute information'/>
<method class='hw_api' call='dynamic' name='objectbyanchor' decs='Returns the object an anchor belongs to'/>
<method class='hw_api' call='dynamic' name='parents' decs='Returns parents of an object'/>
<method class='hw_api_reason' call='dynamic' name='description' decs='Returns description of reason'/>
<method class='hw_api_reason' call='dynamic' name='type' decs='Returns type of reason'/>
<method class='hw_api' call='dynamic' name='remove' decs='Delete an object'/>
<method class='hw_api' call='dynamic' name='replace' decs='Replaces an object'/>
<method class='hw_api' call='dynamic' name='setcommitedversion' decs='Commits version other than last version'/>
<method class='hw_api' call='dynamic' name='srcanchors' decs='Returns a list of all source anchors'/>
<method class='hw_api' call='dynamic' name='srcsofdst' decs='Returns source of a destination object'/>
<method class='hw_api' call='dynamic' name='unlock' decs='Unlocks a locked object'/>
<method class='hw_api' call='dynamic' name='user' decs='Returns the own user object'/>
<method class='hw_api' call='dynamic' name='userlist' decs='Returns a list of all logged in users'/>
</package>
<package name='iconv' number='XL' desc='iconv Functions'>
<function name='iconv_get_encoding' decs='Retrieve internal configuration variables of iconv extension'/>
<function name='iconv_mime_decode_headers' decs='Decodes multiple MIME header fields at once '/>
<function name='iconv_mime_decode' decs='Decodes a MIME header field '/>
<function name='iconv_mime_encode' decs='Composes a MIME header field '/>
<function name='iconv_set_encoding' decs='Set current setting for character encoding conversion'/>
<function name='iconv_strlen' decs='Returns the character count of string '/>
<function name='iconv_strpos' decs='Finds position of first occurrence of a needle within a haystack. '/>
<function name='iconv_strrpos' decs='Finds the last occurrence of a needle within the specified range of haystack. '/>
<function name='iconv_substr' decs='Cut out part of a string '/>
<function name='iconv' decs='Convert string to requested character encoding'/>
<function name='ob_iconv_handler' decs='Convert character encoding as output buffer handler'/>
<const name='HW_ATTR_LANG'/>
<const name='ICONV_VERSION'/>
<const name='ICONV_MIME_DECODE_STRICT'/>
<const name='ICONV_MIME_DECODE_CONTINUE_ON_ERROR'/>
</package>
<package name='Image' number='XLI' desc='Image Functions'>
<function name='exif_imagetype' decs='Determine the type of an image'/>
<function name='exif_read_data' decs='Reads the EXIF headers from JPEG or TIFF. This way you can read meta data generated by digital cameras.'/>
<function name='exif_thumbnail' decs='Retrieve the embedded thumbnail of a TIFF or JPEG image'/>
<function name='gd_info' decs='Retrieve information about the currently installed GD library'/>
<function name='getimagesize' decs='Get the size of an image'/>
<function name='image_type_to_mime_type' decs='Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype'/>
<function name='image2wbmp' decs='Output image to browser or file'/>
<function name='imagealphablending' decs='Set the blending mode for an image'/>
<function name='imageantialias' decs='Should antialias functions be used or not '/>
<function name='imagearc' decs='Draw a partial ellipse'/>
<function name='imagechar' decs='Draw a character horizontally'/>
<function name='imagecharup' decs='Draw a character vertically'/>
<function name='imagecolorallocate' decs='Allocate a color for an image'/>
<function name='imagecolorallocatealpha' decs='Allocate a color for an image'/>
<function name='imagecolorat' decs='Get the index of the color of a pixel'/>
<function name='imagecolorclosest' decs='Get the index of the closest color to the specified color'/>
<function name='imagecolorclosestalpha' decs='Get the index of the closest color to the specified color + alpha'/>
<function name='imagecolorclosesthwb' decs='Get the index of the color which has the hue, white and blackness nearest to the given color '/>
<function name='imagecolordeallocate' decs='De-allocate a color for an image'/>
<function name='imagecolorexact' decs='Get the index of the specified color'/>
<function name='imagecolorexactalpha' decs='Get the index of the specified color + alpha'/>
<function name='imagecolormatch' decs='Makes the colors of the palette version of an image more closely match the true color version '/>
<function name='imagecolorresolve' decs='Get the index of the specified color or its closest possible alternative '/>
<function name='imagecolorresolvealpha' decs='Get the index of the specified color + alpha or its closest possible alternative '/>
<function name='imagecolorset' decs='Set the color for the specified palette index'/>
<function name='imagecolorsforindex' decs='Get the colors for an index'/>
<function name='imagecolorstotal' decs='Find out the number of colors in an image&apos;s palette'/>
<function name='imagecolortransparent' decs='Define a color as transparent'/>
<function name='imagecopy' decs='Copy part of an image'/>
<function name='imagecopymerge' decs='Copy and merge part of an image'/>
<function name='imagecopymergegray' decs='Copy and merge part of an image with gray scale'/>
<function name='imagecopyresampled' decs='Copy and resize part of an image with resampling'/>
<function name='imagecopyresized' decs='Copy and resize part of an image'/>
<function name='imagecreate' decs='Create a new palette based image'/>
<function name='imagecreatefromgd2' decs='Create a new image from GD2 file or URL'/>
<function name='imagecreatefromgd2part' decs='Create a new image from a given part of GD2 file or URL'/>
<function name='imagecreatefromgd' decs='Create a new image from GD file or URL'/>
<function name='imagecreatefromgif' decs='Create a new image from file or URL'/>
<function name='imagecreatefromjpeg' decs='Create a new image from file or URL'/>
<function name='imagecreatefrompng' decs='Create a new image from file or URL'/>
<function name='imagecreatefromstring' decs='Create a new image from the image stream in the string'/>
<function name='imagecreatefromwbmp' decs='Create a new image from file or URL'/>
<function name='imagecreatefromxbm' decs='Create a new image from file or URL'/>
<function name='imagecreatefromxpm' decs='Create a new image from file or URL'/>
<function name='imagecreatetruecolor' decs='Create a new true color image'/>
<function name='imagedashedline' decs='Draw a dashed line' depr='on'/>
<function name='imagedestroy' decs='Destroy an image'/>
<function name='imageellipse' decs='Draw an ellipse'/>
<function name='imagefill' decs='Flood fill'/>
<function name='imagefilledarc' decs='Draw a partial ellipse and fill it'/>
<function name='imagefilledellipse' decs='Draw a filled ellipse'/>
<function name='imagefilledpolygon' decs='Draw a filled polygon'/>
<function name='imagefilledrectangle' decs='Draw a filled rectangle'/>
<function name='imagefilltoborder' decs='Flood fill to specific color'/>
<function name='imagefontheight' decs='Get font height'/>
<function name='imagefontwidth' decs='Get font width'/>
<function name='imageftbbox' decs='Give the bounding box of a text using fonts via freetype2'/>
<function name='imagefttext' decs='Write text to the image using fonts using FreeType 2'/>
<function name='imagegammacorrect' decs='Apply a gamma correction to a GD image'/>
<function name='imagegd2' decs='Output GD2 image'/>
<function name='imagegd' decs='Output GD image to browser or file'/>
<function name='imagegif' decs='Output image to browser or file'/>
<function name='imageinterlace' decs='Enable or disable interlace'/>
<function name='imageistruecolor' decs='Finds whether an image is a truecolor image.'/>
<function name='imagejpeg' decs='Output image to browser or file'/>
<function name='imagelayereffect' decs='Set the alpha blending flag to use the bundled libgd layering effects '/>
<function name='imageline' decs='Draw a line'/>
<function name='imageloadfont' decs='Load a new font'/>
<function name='imagepalettecopy' decs='Copy the palette from one image to another'/>
<function name='imagepng' decs='Output a PNG image to either the browser or a file'/>
<function name='imagepolygon' decs='Draw a polygon'/>
<function name='imagepsbbox' decs='Give the bounding box of a text rectangle using PostScript Type1 fonts '/>
<function name='imagepscopyfont' decs='Make a copy of an already loaded font for further modification '/>
<function name='imagepsencodefont' decs='Change the character encoding vector of a font'/>
<function name='imagepsextendfont' decs='Extend or condense a font'/>
<function name='imagepsfreefont' decs='Free memory used by a PostScript Type 1 font'/>
<function name='imagepsloadfont' decs='Load a PostScript Type 1 font from file'/>
<function name='imagepsslantfont' decs='Slant a font'/>
<function name='imagepstext' decs='To draw a text string over an image using PostScript Type1 fonts'/>
<function name='imagerectangle' decs='Draw a rectangle'/>
<function name='imagerotate' decs='Rotate an image with a given angle'/>
<function name='imagesavealpha' decs='Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images. '/>
<function name='imagesetbrush' decs='Set the brush image for line drawing'/>
<function name='imagesetpixel' decs='Set a single pixel'/>
<function name='imagesetstyle' decs='Set the style for line drawing'/>
<function name='imagesetthickness' decs='Set the thickness for line drawing'/>
<function name='imagesettile' decs='Set the tile image for filling'/>
<function name='imagestring' decs='Draw a string horizontally'/>
<function name='imagestringup' decs='Draw a string vertically'/>
<function name='imagesx' decs='Get image width'/>
<function name='imagesy' decs='Get image height'/>
<function name='imagetruecolortopalette' decs='Convert a true color image to a palette image'/>
<function name='imagettfbbox' decs='Give the bounding box of a text using TrueType fonts'/>
<function name='imagettftext' decs='Write text to the image using TrueType fonts'/>
<function name='imagetypes' decs='Return the image types supported by this PHP build'/>
<function name='imagewbmp' decs='Output image to browser or file'/>
<function name='iptcembed' decs='Embed binary IPTC data into a JPEG image'/>
<function name='iptcparse' decs='Parse a binary IPTC http://www.iptc.org/ block into single tags. '/>
<function name='jpeg2wbmp' decs='Convert JPEG image file to WBMP image file'/>
<function name='png2wbmp' decs='Convert PNG image file to WBMP image file'/>
<function name='read_exif_data' decs='Alias of exif_read_data()'/>
<const name='IMG_GIF'/>
<const name='IMG_JPG'/>
<const name='IMG_JPEG'/>
<const name='IMG_PNG'/>
<const name='IMG_WBMP'/>
<const name='IMG_XPM'/>
<const name='IMG_COLOR_TILED'/>
<const name='IMG_COLOR_STYLED'/>
<const name='IMG_COLOR_BRUSHED'/>
<const name='IMG_COLOR_STYLEDBRUSHED'/>
<const name='IMG_COLOR_TRANSPARENT'/>
<const name='IMG_ARC_ROUNDED'/>
<const name='IMG_ARC_PIE'/>
<const name='IMG_ARC_CHORD'/>
<const name='IMG_ARC_NOFILL'/>
<const name='IMG_ARC_EDGED'/>
<const name='IMAGETYPE_GIF'/>
<const name='IMAGETYPE_JPEG'/>
<const name='IMAGETYPE_PNG'/>
<const name='IMAGETYPE_SWF'/>
<const name='IMAGETYPE_PSD'/>
<const name='IMAGETYPE_BMP'/>
<const name='IMAGETYPE_WBMP'/>
<const name='IMAGETYPE_XBM'/>
<const name='IMAGETYPE_TIFF_II'/>
<const name='IMAGETYPE_TIFF_MM'/>
<const name='IMAGETYPE_IFF'/>
<const name='IMAGETYPE_JB2'/>
<const name='IMAGETYPE_JPC'/>
<const name='IMAGETYPE_JP2'/>
<const name='IMAGETYPE_JPX'/>
<const name='IMAGETYPE_SWC'/>
</package>
<package name='IMAP-POP3-and-NNTP' number='XLII' desc='IMAP, POP3 and NNTP Functions'>
<function name='imap_8bit' decs='Convert an 8bit string to a quoted-printable string '/>
<function name='imap_alerts' decs='This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset '/>
<function name='imap_append' decs='Append a string message to a specified mailbox '/>
<function name='imap_base64' decs='Decode BASE64 encoded text'/>
<function name='imap_binary' decs='Convert an 8bit string to a base64 string '/>
<function name='imap_body' decs='Read the message body'/>
<function name='imap_bodystruct' decs='Read the structure of a specified body section of a specific message '/>
<function name='imap_check' decs='Check current mailbox'/>
<function name='imap_clearflag_full' decs='Clears flags on messages'/>
<function name='imap_close' decs='Close an IMAP stream'/>
<function name='imap_createmailbox' decs='Create a new mailbox'/>
<function name='imap_delete' decs='Mark a message for deletion from current mailbox '/>
<function name='imap_deletemailbox' decs='Delete a mailbox'/>
<function name='imap_errors' decs='This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset. '/>
<function name='imap_expunge' decs='Delete all messages marked for deletion'/>
<function name='imap_fetch_overview' decs='Read an overview of the information in the headers of the given message '/>
<function name='imap_fetchbody' decs='Fetch a particular section of the body of the message '/>
<function name='imap_fetchheader' decs='Returns header for a message'/>
<function name='imap_fetchstructure' decs='Read the structure of a particular message '/>
<function name='imap_get_quota' decs='Retrieve the quota level settings, and usage statics per mailbox '/>
<function name='imap_get_quotaroot' decs='Retrieve the quota settings per user '/>
<function name='imap_getacl' decs='Gets the ACL for a given mailbox '/>
<function name='imap_getmailboxes' decs='Read the list of mailboxes, returning detailed information on each one '/>
<function name='imap_getsubscribed' decs='List all the subscribed mailboxes'/>
<function name='imap_header' decs='Alias of imap_headerinfo()'/>
<function name='imap_headerinfo' decs='Read the header of the message'/>
<function name='imap_headers' decs='Returns headers for all messages in a mailbox '/>
<function name='imap_last_error' decs='This function returns the last IMAP error (if any) that occurred during this page request '/>
<function name='imap_list' decs='Read the list of mailboxes'/>
<function name='imap_listmailbox' decs='Alias of imap_list()'/>
<function name='imap_listscan' decs='Read the list of mailboxes, takes a string to search for in the text of the mailbox '/>
<function name='imap_listsubscribed' decs='Alias of imap_lsub()'/>
<function name='imap_lsub' decs='List all the subscribed mailboxes'/>
<function name='imap_mail_compose' decs='Create a MIME message based on given envelope and body sections '/>
<function name='imap_mail_copy' decs='Copy specified messages to a mailbox'/>
<function name='imap_mail_move' decs='Move specified messages to a mailbox'/>
<function name='imap_mail' decs='Send an email message '/>
<function name='imap_mailboxmsginfo' decs='Get information about the current mailbox'/>
<function name='imap_mime_header_decode' decs='Decode MIME header elements'/>
<function name='imap_msgno' decs='This function returns the message sequence number for the given UID '/>
<function name='imap_num_msg' decs='Gives the number of messages in the current mailbox '/>
<function name='imap_num_recent' decs='Gives the number of recent messages in current mailbox'/>
<function name='imap_open' decs='Open an IMAP stream to a mailbox'/>
<function name='imap_ping' decs='Check if the IMAP stream is still active'/>
<function name='imap_qprint' decs='Convert a quoted-printable string to an 8 bit string'/>
<function name='imap_renamemailbox' decs='Rename an old mailbox to new mailbox'/>
<function name='imap_reopen' decs='Reopen IMAP stream to new mailbox'/>
<function name='imap_rfc822_parse_adrlist' decs='Parses an address string'/>
<function name='imap_rfc822_parse_headers' decs='Parse mail headers from a string'/>
<function name='imap_rfc822_write_address' decs='Returns a properly formatted email address given the mailbox, host, and personal info. '/>
<function name='imap_scanmailbox' decs='Alias of imap_listscan()'/>
<function name='imap_search' decs='This function returns an array of messages matching the given search criteria '/>
<function name='imap_set_quota' decs='Sets a quota for a given mailbox'/>
<function name='imap_setacl' decs='Sets the ACL for a giving mailbox '/>
<function name='imap_setflag_full' decs='Sets flags on messages'/>
<function name='imap_sort' decs='Sort an array of message headers'/>
<function name='imap_status' decs='This function returns status information on a mailbox other than the current one '/>
<function name='imap_subscribe' decs='Subscribe to a mailbox'/>
<function name='imap_thread' decs='Return threaded by REFERENCES tree '/>
<function name='imap_timeout' decs='Set or fetch imap timeout '/>
<function name='imap_uid' decs='This function returns the UID for the given message sequence number '/>
<function name='imap_undelete' decs='Unmark the message which is marked deleted '/>
<function name='imap_unsubscribe' decs='Unsubscribe from a mailbox'/>
<function name='imap_utf7_decode' decs='Decodes a modified UTF-7 encoded string. '/>
<function name='imap_utf7_encode' decs='Converts ISO-8859-1 string to modified UTF-7 text. '/>
<function name='imap_utf8' decs='Converts MIME-encoded text to UTF-8 '/>
<const name='NIL'/>
<const name='OP_DEBUG'/>
<const name='OP_READONLY'/>
<const name='OP_ANONYMOUS'/>
<const name='OP_SHORTCACHE'/>
<const name='OP_SILENT'/>
<const name='OP_PROTOTYPE'/>
<const name='OP_HALFOPEN'/>
<const name='OP_EXPUNGE'/>
<const name='OP_SECURE'/>
<const name='CL_EXPUNGE'/>
<const name='FT_UID'/>
<const name='FT_PEEK'/>
<const name='FT_NOT'/>
<const name='FT_INTERNAL'/>
<const name='FT_PREFETCHTEXT'/>
<const name='ST_UID'/>
<const name='ST_SILENT'/>
<const name='ST_SET'/>
<const name='CP_UID'/>
<const name='CP_MOVE'/>
<const name='SE_UID'/>
<const name='SE_FREE'/>
<const name='SE_NOPREFETCH'/>
<const name='SO_FREE'/>
<const name='SO_NOSERVER'/>
<const name='SA_MESSAGES'/>
<const name='SA_RECENT'/>
<const name='SA_UNSEEN'/>
<const name='SA_UIDNEXT'/>
<const name='SA_UIDVALIDITY'/>
<const name='SA_ALL'/>
<const name='LATT_NOINFERIORS'/>
<const name='LATT_NOSELECT'/>
<const name='LATT_MARKED'/>
<const name='LATT_UNMARKED'/>
<const name='SORTDATE'/>
<const name='SORTARRIVAL'/>
<const name='SORTFROM'/>
<const name='SORTSUBJECT'/>
<const name='SORTTO'/>
<const name='SORTCC'/>
<const name='SORTSIZE'/>
<const name='TYPETEXT'/>
<const name='TYPEMULTIPART'/>
<const name='TYPEMESSAGE'/>
<const name='TYPEAPPLICATION'/>
<const name='TYPEAUDIO'/>
<const name='TYPEIMAGE'/>
<const name='TYPEVIDEO'/>
<const name='TYPEOTHER'/>
<const name='ENC7BIT'/>
<const name='ENC8BIT'/>
<const name='ENCBINARY'/>
<const name='ENCBASE64'/>
<const name='ENCQUOTEDPRINTABLE'/>
<const name='ENCOTHER'/>
</package>
<package name='Informix' number='XLIII' desc='Informix Functions'>
<function name='ifx_affected_rows' decs='Get number of rows affected by a query'/>
<function name='ifx_blobinfile_mode' decs='Set the default blob mode for all select queries'/>
<function name='ifx_byteasvarchar' decs='Set the default byte mode'/>
<function name='ifx_close' decs='Close Informix connection'/>
<function name='ifx_connect' decs='Open Informix server connection'/>
<function name='ifx_copy_blob' decs='Duplicates the given blob object'/>
<function name='ifx_create_blob' decs='Creates an blob object'/>
<function name='ifx_create_char' decs='Creates an char object'/>
<function name='ifx_do' decs='Execute a previously prepared SQL-statement '/>
<function name='ifx_error' decs='Returns error code of last Informix call'/>
<function name='ifx_errormsg' decs='Returns error message of last Informix call'/>
<function name='ifx_fetch_row' decs='Get row as enumerated array'/>
<function name='ifx_fieldproperties' decs='List of SQL fieldproperties'/>
<function name='ifx_fieldtypes' decs='List of Informix SQL fields'/>
<function name='ifx_free_blob' decs='Deletes the blob object'/>
<function name='ifx_free_char' decs='Deletes the char object'/>
<function name='ifx_free_result' decs='Releases resources for the query'/>
<function name='ifx_get_blob' decs='Return the content of a blob object'/>
<function name='ifx_get_char' decs='Return the content of the char object'/>
<function name='ifx_getsqlca' decs='Get the contents of sqlca.sqlerrd[0..5] after a query '/>
<function name='ifx_htmltbl_result' decs='Formats all rows of a query into a HTML table '/>
<function name='ifx_nullformat' decs='Sets the default return value on a fetch row '/>
<function name='ifx_num_fields' decs='Returns the number of columns in the query'/>
<function name='ifx_num_rows' decs='Count the rows already fetched from a query'/>
<function name='ifx_pconnect' decs='Open persistent Informix connection'/>
<function name='ifx_prepare' decs='Prepare an SQL-statement for execution'/>
<function name='ifx_query' decs='Send Informix query'/>
<function name='ifx_textasvarchar' decs='Set the default text mode'/>
<function name='ifx_update_blob' decs='Updates the content of the blob object'/>
<function name='ifx_update_char' decs='Updates the content of the char object'/>
<function name='ifxus_close_slob' decs='Deletes the slob object'/>
<function name='ifxus_create_slob' decs='Creates an slob object and opens it'/>
<function name='ifxus_free_slob' decs='Deletes the slob object'/>
<function name='ifxus_open_slob' decs='Opens an slob object'/>
<function name='ifxus_read_slob' decs='Reads nbytes of the slob object'/>
<function name='ifxus_seek_slob' decs='Sets the current file or seek position'/>
<function name='ifxus_tell_slob' decs='Returns the current file or seek position'/>
<function name='ifxus_write_slob' decs='Writes a string into the slob object'/>
<const name='IBASE_DEFAULT'/>
<const name='IBASE_TEXT'/>
<const name='IBASE_UNIXTIME'/>
<const name='IBASE_WRITE'/>
<const name='IBASE_READ'/>
<const name='IBASE_COMMITTED'/>
<const name='IBASE_CONSISTENCY'/>
<const name='IBASE_CONCURRENCY'/>
<const name='IBASE_REC_VERSION'/>
<const name='IBASE_REC_NO_VERSION'/>
<const name='IBASE_NOWAIT'/>
<const name='IBASE_WAIT'/>
<const name='IBASE_TIMESTAMP'/>
<const name='IBASE_DATE'/>
<const name='IBASE_TIME'/>
</package>
<package name='InterBase' number='XLIV' desc='InterBase Functions'>
<function name='ibase_add_user' decs='Add a user to a security database (only for IB6 or later) '/>
<function name='ibase_affected_rows' decs='Return the number of rows that were affected by the previous query '/>
<function name='ibase_blob_add' decs='Add data into a newly created blob '/>
<function name='ibase_blob_cancel' decs='Cancel creating blob '/>
<function name='ibase_blob_close' decs='Close blob '/>
<function name='ibase_blob_create' decs='Create a new blob for adding data '/>
<function name='ibase_blob_echo' decs='Output blob contents to browser '/>
<function name='ibase_blob_get' decs='Get len bytes data from open blob '/>
<function name='ibase_blob_import' decs='Create blob, copy file in it, and close it '/>
<function name='ibase_blob_info' decs='Return blob length and other useful info '/>
<function name='ibase_blob_open' decs='Open blob for retrieving data parts '/>
<function name='ibase_close' decs='Close a connection to an InterBase database '/>
<function name='ibase_commit_ret' decs='Commit a transaction without closing it'/>
<function name='ibase_commit' decs='Commit a transaction'/>
<function name='ibase_connect' decs='Open a connection to an InterBase database '/>
<function name='ibase_delete_user' decs='Delete a user from a security database (only for IB6 or later) '/>
<function name='ibase_drop_db' decs='Drops a database '/>
<function name='ibase_errcode' decs='Return an error code '/>
<function name='ibase_errmsg' decs='Return error messages '/>
<function name='ibase_execute' decs='Execute a previously prepared query'/>
<function name='ibase_fetch_assoc' decs='Fetch a result row from a query as an associative array '/>
<function name='ibase_fetch_object' decs='Get an object from a InterBase database'/>
<function name='ibase_fetch_row' decs='Fetch a row from an InterBase database'/>
<function name='ibase_field_info' decs='Get information about a field '/>
<function name='ibase_free_event_handler' decs='Cancels a registered event handler '/>
<function name='ibase_free_query' decs='Free memory allocated by a prepared query '/>
<function name='ibase_free_result' decs='Free a result set'/>
<function name='ibase_gen_id' decs='Increments the named generator and returns its new value '/>
<function name='ibase_modify_user' decs='Modify a user to a security database (only for IB6 or later) '/>
<function name='ibase_name_result' decs='Assigns a name to a result set '/>
<function name='ibase_num_fields' decs='Get the number of fields in a result set '/>
<function name='ibase_num_params' decs='Return the number of parameters in a prepared query '/>
<function name='ibase_param_info' decs='Return information about a parameter in a prepared query '/>
<function name='ibase_pconnect' decs='Open a persistent connection to an InterBase database '/>
<function name='ibase_prepare' decs='Prepare a query for later binding of parameter placeholders and execution '/>
<function name='ibase_query' decs='Execute a query on an InterBase database'/>
<function name='ibase_rollback_ret' decs='Roll back a transaction without closing it'/>
<function name='ibase_rollback' decs='Roll back a transaction'/>
<function name='ibase_set_event_handler' decs='Register a callback function to be called when events are posted '/>
<function name='ibase_timefmt' decs='Sets the format of timestamp, date and time type columns returned from queries '/>
<function name='ibase_trans' decs='Begin a transaction'/>
<function name='ibase_wait_event' decs='Wait for an event to be posted by the database '/>
</package>
<package name='Ingres-II' number='XLV' desc='Ingres II Functions'>
<function name='ingres_autocommit' decs='Switch autocommit on or off'/>
<function name='ingres_close' decs='Close an Ingres II database connection'/>
<function name='ingres_commit' decs='Commit a transaction'/>
<function name='ingres_connect' decs='Open a connection to an Ingres II database '/>
<function name='ingres_fetch_array' decs='Fetch a row of result into an array'/>
<function name='ingres_fetch_object' decs='Fetch a row of result into an object.'/>
<function name='ingres_fetch_row' decs='Fetch a row of result into an enumerated array '/>
<function name='ingres_field_length' decs='Get the length of a field'/>
<function name='ingres_field_name' decs='Get the name of a field in a query result.'/>
<function name='ingres_field_nullable' decs='Test if a field is nullable'/>
<function name='ingres_field_precision' decs='Get the precision of a field'/>
<function name='ingres_field_scale' decs='Get the scale of a field'/>
<function name='ingres_field_type' decs='Get the type of a field in a query result '/>
<function name='ingres_num_fields' decs='Get the number of fields returned by the last query '/>
<function name='ingres_num_rows' decs='Get the number of rows affected or returned by the last query '/>
<function name='ingres_pconnect' decs='Open a persistent connection to an Ingres II database '/>
<function name='ingres_query' decs='Send a SQL query to Ingres II'/>
<function name='ingres_rollback' decs='Roll back a transaction'/>
<const name='INGRES_ASSOC'/>
<const name='INGRES_NUM'/>
<const name='INGRES_BOTH'/>
</package>
<package name='IRC-Gateway' number='XLVI' desc='IRC Gateway Functions'>
<function name='ircg_channel_mode' decs='Set channel mode flags for user '/>
<function name='ircg_disconnect' decs='Close connection to server '/>
<function name='ircg_fetch_error_msg' decs='Returns the error from previous IRCG operation '/>
<function name='ircg_get_username' decs='Get username for connection '/>
<function name='ircg_html_encode' decs='Encodes HTML preserving output '/>
<function name='ircg_ignore_add' decs='Add a user to your ignore list on a server '/>
<function name='ircg_ignore_del' decs='Remove a user from your ignore list on a server '/>
<function name='ircg_invite' decs='Invites nickname to channel'/>
<function name='ircg_is_conn_alive' decs='Check connection status '/>
<function name='ircg_join' decs='Join a channel on a connected server '/>
<function name='ircg_kick' decs='Kick a user out of a channel on server '/>
<function name='ircg_list' decs='List topic/user count of channel(s)'/>
<function name='ircg_lookup_format_messages' decs='Check for the existence of a format message set '/>
<function name='ircg_lusers' decs='IRC network statistics'/>
<function name='ircg_msg' decs='Send message to channel or user on server '/>
<function name='ircg_nick' decs='Change nickname on server '/>
<function name='ircg_nickname_escape' decs='Encode special characters in nickname to be IRC-compliant '/>
<function name='ircg_nickname_unescape' decs='Decodes encoded nickname '/>
<function name='ircg_notice' decs='Send a notice to a user on server '/>
<function name='ircg_oper' decs='Elevates privileges to IRC OPER'/>
<function name='ircg_part' decs='Leave a channel on server '/>
<function name='ircg_pconnect' decs='Connect to an IRC server '/>
<function name='ircg_register_format_messages' decs='Register a format message set '/>
<function name='ircg_set_current' decs='Set current connection for output '/>
<function name='ircg_set_file' decs='Set logfile for connection '/>
<function name='ircg_set_on_die' decs='Set action to be executed when connection dies '/>
<function name='ircg_topic' decs='Set topic for channel on server '/>
<function name='ircg_who' decs='Queries server for WHO information'/>
<function name='ircg_whois' decs='Query server for user information '/>
</package>
<package name='PHP-Java-Integration' number='XLVII' desc='PHP / Java Integration'>
<function name='java_last_exception_clear' decs='Clear last Java exception'/>
<function name='java_last_exception_get' decs='Get last Java exception'/>
</package>
<package name='LDAP' number='XLVIII' desc='LDAP Functions'>
<function name='ldap_8859_to_t61' decs='Translate 8859 characters to t61 characters '/>
<function name='ldap_add' decs='Add entries to LDAP directory'/>
<function name='ldap_bind' decs='Bind to LDAP directory'/>
<function name='ldap_close' decs='Close link to LDAP server'/>
<function name='ldap_compare' decs='Compare value of attribute found in entry specified with DN'/>
<function name='ldap_connect' decs='Connect to an LDAP server'/>
<function name='ldap_count_entries' decs='Count the number of entries in a search'/>
<function name='ldap_delete' decs='Delete an entry from a directory'/>
<function name='ldap_dn2ufn' decs='Convert DN to User Friendly Naming format'/>
<function name='ldap_err2str' decs='Convert LDAP error number into string error message '/>
<function name='ldap_errno' decs='Return the LDAP error number of the last LDAP command '/>
<function name='ldap_error' decs='Return the LDAP error message of the last LDAP command '/>
<function name='ldap_explode_dn' decs='Splits DN into its component parts'/>
<function name='ldap_first_attribute' decs='Return first attribute'/>
<function name='ldap_first_entry' decs='Return first result id'/>
<function name='ldap_first_reference' decs='Return first reference '/>
<function name='ldap_free_result' decs='Free result memory'/>
<function name='ldap_get_attributes' decs='Get attributes from a search result entry'/>
<function name='ldap_get_dn' decs='Get the DN of a result entry'/>
<function name='ldap_get_entries' decs='Get all result entries'/>
<function name='ldap_get_option' decs='Get the current value for given option'/>
<function name='ldap_get_values_len' decs='Get all binary values from a result entry'/>
<function name='ldap_get_values' decs='Get all values from a result entry'/>
<function name='ldap_list' decs='Single-level search'/>
<function name='ldap_mod_add' decs='Add attribute values to current attributes'/>
<function name='ldap_mod_del' decs='Delete attribute values from current attributes'/>
<function name='ldap_mod_replace' decs='Replace attribute values with new ones'/>
<function name='ldap_modify' decs='Modify an LDAP entry'/>
<function name='ldap_next_attribute' decs='Get the next attribute in result'/>
<function name='ldap_next_entry' decs='Get next result entry'/>
<function name='ldap_next_reference' decs='Get next reference '/>
<function name='ldap_parse_reference' decs='Extract information from reference entry '/>
<function name='ldap_parse_result' decs='Extract information from result '/>
<function name='ldap_read' decs='Read an entry'/>
<function name='ldap_rename' decs='Modify the name of an entry'/>
<function name='ldap_search' decs='Search LDAP tree'/>
<function name='ldap_set_option' decs='Set the value of the given option'/>
<function name='ldap_set_rebind_proc' decs='Set a callback function to do re-binds on referral chasing. '/>
<function name='ldap_sort' decs='Sort LDAP result entries '/>
<function name='ldap_start_tls' decs='Start TLS '/>
<function name='ldap_t61_to_8859' decs='Translate t61 characters to 8859 characters '/>
<function name='ldap_unbind' decs='Unbind from LDAP directory'/>
<const name='LDAP_DEREF_NEVER'/>
<const name='LDAP_DEREF_SEARCHING'/>
<const name='LDAP_DEREF_FINDING'/>
<const name='LDAP_DEREF_ALWAYS'/>
<const name='LDAP_OPT_DEREF'/>
<const name='LDAP_OPT_SIZELIMIT'/>
<const name='LDAP_OPT_TIMELIMIT'/>
<const name='LDAP_OPT_PROTOCOL_VERSION'/>
<const name='LDAP_OPT_ERROR_NUMBER'/>
<const name='LDAP_OPT_REFERRALS'/>
<const name='LDAP_OPT_RESTART'/>
<const name='LDAP_OPT_HOST_NAME'/>
<const name='LDAP_OPT_ERROR_STRING'/>
<const name='LDAP_OPT_MATCHED_DN'/>
<const name='LDAP_OPT_SERVER_CONTROLS'/>
<const name='LDAP_OPT_CLIENT_CONTROLS'/>
<const name='LDAP_OPT_DEBUG_LEVEL'/>
<const name='GSLC_SSL_NO_AUTH'/>
<const name='GSLC_SSL_ONEWAY_AUTH'/>
<const name='GSLC_SSL_TWOWAY_AUTH'/>
</package>
<package name='LZF' number='XLIX' desc='LZF Functions'>
<function name='lzf_compress' decs='LZF compression. '/>
<function name='lzf_decompress' decs='LZF decompression. '/>
<function name='lzf_optimized_for' decs='Determines what LZF extension was optimized for. '/>
</package>
<package name='Mail' number='L' desc='Mail Functions'>
<function name='ezmlm_hash' decs='Calculate the hash value needed by EZMLM'/>
<function name='mail' decs='send mail'/>
</package>
<package name='mailparse' number='LI' desc='mailparse Functions'>
<function name='mailparse_determine_best_xfer_encoding' decs='Figures out the best way of encoding the content read from the file pointer fp, which must be seek-able '/>
<function name='mailparse_msg_create' decs='Returns a handle that can be used to parse a message '/>
<function name='mailparse_msg_extract_part_file' decs='Extracts/decodes a message section, decoding the transfer encoding '/>
<function name='mailparse_msg_extract_part' decs='Extracts/decodes a message section. If callbackfunc is not specified, the contents will be sent to &quot;stdout&quot; '/>
<function name='mailparse_msg_free' decs='Frees a handle allocated by mailparse_msg_create()'/>
<function name='mailparse_msg_get_part_data' decs='Returns an associative array of info about the message '/>
<function name='mailparse_msg_get_part' decs='Returns a handle on a given section in a mimemessage '/>
<function name='mailparse_msg_get_structure' decs='Returns an array of mime section names in the supplied message '/>
<function name='mailparse_msg_parse_file' decs='Parse file and return a resource representing the structure '/>
<function name='mailparse_msg_parse' decs='Incrementally parse data into buffer '/>
<function name='mailparse_rfc822_parse_addresses' decs='Parse addresses and returns a hash containing that data '/>
<function name='mailparse_stream_encode' decs='Streams data from source file pointer, apply encoding and write to destfp '/>
<function name='mailparse_uudecode_all' decs='Scans the data from fp and extract each embedded uuencoded file. Returns an array listing filename information '/>
</package>
<package name='Mathematical' number='LII' desc='Mathematical Functions'>
<function name='abs' decs='Absolute value'/>
<function name='acos' decs='Arc cosine'/>
<function name='acosh' decs='Inverse hyperbolic cosine'/>
<function name='asin' decs='Arc sine'/>
<function name='asinh' decs='Inverse hyperbolic sine'/>
<function name='atan2' decs='Arc tangent of two variables'/>
<function name='atan' decs='Arc tangent'/>
<function name='atanh' decs='Inverse hyperbolic tangent'/>
<function name='base_convert' decs='Convert a number between arbitrary bases'/>
<function name='bindec' decs='Binary to decimal'/>
<function name='ceil' decs='Round fractions up'/>
<function name='cos' decs='Cosine'/>
<function name='cosh' decs='Hyperbolic cosine'/>
<function name='decbin' decs='Decimal to binary'/>
<function name='dechex' decs='Decimal to hexadecimal'/>
<function name='decoct' decs='Decimal to octal'/>
<function name='deg2rad' decs='Converts the number in degrees to the radian equivalent '/>
<function name='exp' decs='Calculates the exponent of e (the Neperian or Natural logarithm base)'/>
<function name='expm1' decs='Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero '/>
<function name='floor' decs='Round fractions down'/>
<function name='fmod' decs='Returns the floating point remainder (modulo) of the division of the arguments'/>
<function name='getrandmax' decs='Show largest possible random value'/>
<function name='hexdec' decs='Hexadecimal to decimal'/>
<function name='hypot' decs='Returns sqrt(num1*num1 + num2*num2) '/>
<function name='is_finite' decs='Finds whether a value is a legal finite number'/>
<function name='is_infinite' decs='Finds whether a value is infinite'/>
<function name='is_nan' decs='Finds whether a value is not a number'/>
<function name='lcg_value' decs='Combined linear congruential generator'/>
<function name='log10' decs='Base-10 logarithm'/>
<function name='log1p' decs='Returns log(1 + number), computed in a way that is accurate even when the value of number is close to zero '/>
<function name='log' decs='Natural logarithm'/>
<function name='max' decs='Find highest value'/>
<function name='min' decs='Find lowest value'/>
<function name='mt_getrandmax' decs='Show largest possible random value'/>
<function name='mt_rand' decs='Generate a better random value'/>
<function name='mt_srand' decs='Seed the better random number generator'/>
<function name='octdec' decs='Octal to decimal'/>
<function name='pi' decs='Get value of pi'/>
<function name='pow' decs='Exponential expression'/>
<function name='rad2deg' decs='Converts the radian number to the equivalent number in degrees '/>
<function name='rand' decs='Generate a random integer'/>
<function name='round' decs='Rounds a float'/>
<function name='sin' decs='Sine'/>
<function name='sinh' decs='Hyperbolic sine'/>
<function name='sqrt' decs='Square root'/>
<function name='srand' decs='Seed the random number generator'/>
<function name='tan' decs='Tangent'/>
<function name='tanh' decs='Hyperbolic tangent'/>
<const name='M_PI'/>
<const name='M_E'/>
<const name='M_LOG2E'/>
<const name='M_LOG10E'/>
<const name='M_LN2'/>
<const name='M_LN10'/>
<const name='M_PI_2'/>
<const name='M_PI_4'/>
<const name='M_1_PI'/>
<const name='M_2_PI'/>
<const name='M_SQRTPI'/>
<const name='M_2_SQRTPI'/>
<const name='M_SQRT2'/>
<const name='M_SQRT3'/>
<const name='M_SQRT1_2'/>
<const name='M_LNPI'/>
<const name='M_EULER'/>
</package>
<package name='Multi-Byte-String' number='LIII' desc='Multi-Byte String Functions'>
<function name='mb_convert_case' decs='Perform case folding on a string'/>
<function name='mb_convert_encoding' decs='Convert character encoding'/>
<function name='mb_convert_kana' decs='Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more) '/>
<function name='mb_convert_variables' decs='Convert character code in variable(s)'/>
<function name='mb_decode_mimeheader' decs='Decode string in MIME header field'/>
<function name='mb_decode_numericentity' decs='Decode HTML numeric string reference to character '/>
<function name='mb_detect_encoding' decs='Detect character encoding'/>
<function name='mb_detect_order' decs='Set/Get character encoding detection order '/>
<function name='mb_encode_mimeheader' decs='Encode string for MIME header'/>
<function name='mb_encode_numericentity' decs='Encode character to HTML numeric string reference '/>
<function name='mb_ereg_match' decs='Regular expression match for multibyte string '/>
<function name='mb_ereg_replace' decs='Replace regular expression with multibyte support'/>
<function name='mb_ereg_search_getpos' decs='Returns start point for next regular expression match '/>
<function name='mb_ereg_search_getregs' decs='Retrieve the result from the last multibyte regular expression match '/>
<function name='mb_ereg_search_init' decs='Setup string and regular expression for multibyte regular expression match '/>
<function name='mb_ereg_search_pos' decs='Return position and length of matched part of multibyte regular expression for predefined multibyte string '/>
<function name='mb_ereg_search_regs' decs='Returns the matched part of multibyte regular expression '/>
<function name='mb_ereg_search_setpos' decs='Set start point of next regular expression match '/>
<function name='mb_ereg_search' decs='Multibyte regular expression match for predefined multibyte string '/>
<function name='mb_ereg' decs='Regular expression match with multibyte support'/>
<function name='mb_eregi_replace' decs='Replace regular expression with multibyte support ignoring case '/>
<function name='mb_eregi' decs='Regular expression match ignoring case with multibyte support '/>
<function name='mb_get_info' decs='Get internal settings of mbstring'/>
<function name='mb_http_input' decs='Detect HTTP input character encoding'/>
<function name='mb_http_output' decs='Set/Get HTTP output character encoding'/>
<function name='mb_internal_encoding' decs='Set/Get internal character encoding '/>
<function name='mb_language' decs='Set/Get current language '/>
<function name='mb_output_handler' decs='Callback function converts character encoding in output buffer '/>
<function name='mb_parse_str' decs='Parse GET/POST/COOKIE data and set global variable '/>
<function name='mb_preferred_mime_name' decs='Get MIME charset string'/>
<function name='mb_regex_encoding' decs='Returns current encoding for multibyte regex as string '/>
<function name='mb_regex_set_options' decs='Set/Get the default options for mbregex functions '/>
<function name='mb_send_mail' decs='Send encoded mail. '/>
<function name='mb_split' decs='Split multibyte string using regular expression'/>
<function name='mb_strcut' decs='Get part of string'/>
<function name='mb_strimwidth' decs='Get truncated string with specified width'/>
<function name='mb_strlen' decs='Get string length'/>
<function name='mb_strpos' decs='Find position of first occurrence of string in a string '/>
<function name='mb_strrpos' decs='Find position of last occurrence of a string in a string '/>
<function name='mb_strtolower' decs='Make a string lowercase'/>
<function name='mb_strtoupper' decs='Make a string uppercase'/>
<function name='mb_strwidth' decs='Return width of string'/>
<function name='mb_substitute_character' decs='Set/Get substitution character'/>
<function name='mb_substr_count' decs='Count the number of substring occurrences'/>
<function name='mb_substr' decs='Get part of string'/>
<const name='MB_OVERLOAD_MAIL'/>
<const name='MB_OVERLOAD_STRING'/>
<const name='MB_OVERLOAD_REGEX'/>
</package>
<package name='MCAL' number='LIV' desc='MCAL Functions'>
<function name='mcal_append_event' decs='Store a new event into an MCAL calendar'/>
<function name='mcal_close' decs='Close an MCAL stream'/>
<function name='mcal_create_calendar' decs='Create a new MCAL calendar '/>
<function name='mcal_date_compare' decs='Compares two dates'/>
<function name='mcal_date_valid' decs='Returns TRUE if the given year, month, day is a valid date '/>
<function name='mcal_day_of_week' decs='Returns the day of the week of the given date '/>
<function name='mcal_day_of_year' decs='Returns the day of the year of the given date '/>
<function name='mcal_days_in_month' decs='Returns the number of days in a month '/>
<function name='mcal_delete_calendar' decs='Delete an MCAL calendar'/>
<function name='mcal_delete_event' decs='Delete an event from an MCAL calendar'/>
<function name='mcal_event_add_attribute' decs='Adds an attribute and a value to the streams global event structure '/>
<function name='mcal_event_init' decs='Initializes a streams global event structure '/>
<function name='mcal_event_set_alarm' decs='Sets the alarm of the streams global event structure '/>
<function name='mcal_event_set_category' decs='Sets the category of the streams global event structure '/>
<function name='mcal_event_set_class' decs='Sets the class of the streams global event structure '/>
<function name='mcal_event_set_description' decs='Sets the description of the streams global event structure '/>
<function name='mcal_event_set_end' decs='Sets the end date and time of the streams global event structure '/>
<function name='mcal_event_set_recur_daily' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_recur_monthly_mday' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_recur_monthly_wday' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_recur_none' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_recur_weekly' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_recur_yearly' decs='Sets the recurrence of the streams global event structure '/>
<function name='mcal_event_set_start' decs='Sets the start date and time of the streams global event structure '/>
<function name='mcal_event_set_title' decs='Sets the title of the streams global event structure '/>
<function name='mcal_expunge' decs='Deletes all events marked for being expunged. '/>
<function name='mcal_fetch_current_stream_event' decs='Returns an object containing the current streams event structure '/>
<function name='mcal_fetch_event' decs='Fetches an event from the calendar stream '/>
<function name='mcal_is_leap_year' decs='Returns if the given year is a leap year or not '/>
<function name='mcal_list_alarms' decs='Return a list of events that has an alarm triggered at the given datetime '/>
<function name='mcal_list_events' decs='Return a list of IDs for a date or a range of dates '/>
<function name='mcal_next_recurrence' decs='Returns the next recurrence of the event'/>
<function name='mcal_open' decs='Opens up an MCAL connection'/>
<function name='mcal_popen' decs='Opens up a persistent MCAL connection'/>
<function name='mcal_rename_calendar' decs='Rename an MCAL calendar '/>
<function name='mcal_reopen' decs='Reopens an MCAL connection'/>
<function name='mcal_snooze' decs='Turn off an alarm for an event'/>
<function name='mcal_store_event' decs='Modify an existing event in an MCAL calendar'/>
<function name='mcal_time_valid' decs='Returns TRUE if the given year, month, day is a valid time '/>
<function name='mcal_week_of_year' decs='Returns the week number of the given date '/>
<const name='MCAL_SUNDAY'/>
<const name='MCAL_MONDAY'/>
<const name='MCAL_TUESDAY'/>
<const name='MCAL_WEDNESDAY'/>
<const name='MCAL_THURSDAY'/>
<const name='MCAL_FRIDAY'/>
<const name='MCAL_SATURDAY'/>
<const name='MCAL_JANUARY'/>
<const name='MCAL_FEBRUARY'/>
<const name='MCAL_MARCH'/>
<const name='MCAL_APRIL'/>
<const name='MCAL_MAY'/>
<const name='MCAL_JUNE'/>
<const name='MCAL_JULY'/>
<const name='MCAL_AUGUST'/>
<const name='MCAL_SEPTEMBER'/>
<const name='MCAL_OCTOBER'/>
<const name='MCAL_NOVEMBER'/>
<const name='MCAL_DECEMBER'/>
<const name='MCAL_RECUR_NONE'/>
<const name='MCAL_RECUR_DAILY'/>
<const name='MCAL_RECUR_WEEKLY'/>
<const name='MCAL_RECUR_MONTHLY_MDAY'/>
<const name='MCAL_RECUR_MONTHLY_WDAY'/>
<const name='MCAL_RECUR_YEARLY'/>
<const name='MCAL_M_SUNDAY'/>
<const name='MCAL_M_MONDAY'/>
<const name='MCAL_M_TUESDAY'/>
<const name='MCAL_M_WEDNESDAY'/>
<const name='MCAL_M_THURSDAY'/>
<const name='MCAL_M_FRIDAY'/>
<const name='MCAL_M_SATURDAY'/>
<const name='MCAL_M_WEEKDAYS'/>
<const name='MCAL_M_WEEKEND'/>
<const name='MCAL_M_ALLDAYS'/>
</package>
<package name='Mcrypt-Encryption' number='LV' desc='Mcrypt Encryption Functions'>
<function name='mcrypt_cbc' decs='Encrypt/decrypt data in CBC mode'/>
<function name='mcrypt_cfb' decs='Encrypt/decrypt data in CFB mode'/>
<function name='mcrypt_create_iv' decs='Create an initialization vector (IV) from a random source '/>
<function name='mcrypt_decrypt' decs='Decrypts crypttext with given parameters'/>
<function name='mcrypt_ecb' decs='Deprecated: Encrypt/decrypt data in ECB mode'/>
<function name='mcrypt_enc_get_algorithms_name' decs='Returns the name of the opened algorithm'/>
<function name='mcrypt_enc_get_block_size' decs='Returns the blocksize of the opened algorithm'/>
<function name='mcrypt_enc_get_iv_size' decs='Returns the size of the IV of the opened algorithm'/>
<function name='mcrypt_enc_get_key_size' decs='Returns the maximum supported keysize of the opened mode'/>
<function name='mcrypt_enc_get_modes_name' decs='Returns the name of the opened mode'/>
<function name='mcrypt_enc_get_supported_key_sizes' decs='Returns an array with the supported keysizes of the opened algorithm'/>
<function name='mcrypt_enc_is_block_algorithm_mode' decs='Checks whether the encryption of the opened mode works on blocks'/>
<function name='mcrypt_enc_is_block_algorithm' decs='Checks whether the algorithm of the opened mode is a block algorithm'/>
<function name='mcrypt_enc_is_block_mode' decs='Checks whether the opened mode outputs blocks'/>
<function name='mcrypt_enc_self_test' decs='This function runs a self test on the opened module'/>
<function name='mcrypt_encrypt' decs='Encrypts plaintext with given parameters'/>
<function name='mcrypt_generic_deinit' decs='This function deinitializes an encryption module '/>
<function name='mcrypt_generic_end' decs='This function terminates encryption' depr='on'/>
<function name='mcrypt_generic_init' decs='This function initializes all buffers needed for encryption'/>
<function name='mcrypt_generic' decs='This function encrypts data'/>
<function name='mcrypt_get_block_size' decs='Get the block size of the specified cipher'/>
<function name='mcrypt_get_cipher_name' decs='Get the name of the specified cipher'/>
<function name='mcrypt_get_iv_size' decs='Returns the size of the IV belonging to a specific cipher/mode combination '/>
<function name='mcrypt_get_key_size' decs='Get the key size of the specified cipher'/>
<function name='mcrypt_list_algorithms' decs='Get an array of all supported ciphers'/>
<function name='mcrypt_list_modes' decs='Get an array of all supported modes'/>
<function name='mcrypt_module_close' decs='Close the mcrypt module '/>
<function name='mcrypt_module_get_algo_block_size' decs='Returns the blocksize of the specified algorithm'/>
<function name='mcrypt_module_get_algo_key_size' decs='Returns the maximum supported keysize of the opened mode'/>
<function name='mcrypt_module_get_supported_key_sizes' decs='Returns an array with the supported keysizes of the opened algorithm'/>
<function name='mcrypt_module_is_block_algorithm_mode' decs='returns if the specified module is a block algorithm or not'/>
<function name='mcrypt_module_is_block_algorithm' decs='This function checks whether the specified algorithm is a block algorithm'/>
<function name='mcrypt_module_is_block_mode' decs='Returns if the specified mode outputs blocks or not'/>
<function name='mcrypt_module_open' decs='Opens the module of the algorithm and the mode to be used'/>
<function name='mcrypt_module_self_test' decs='This function runs a self test on the specified module'/>
<function name='mcrypt_ofb' decs='Encrypt/decrypt data in OFB mode'/>
<function name='mdecrypt_generic' decs='Decrypt data'/>
<const name='MCRYPT_ENCRYPT'/>
<const name='MCRYPT_DECRYPT'/>
<const name='MCRYPT_DEV_RANDOM'/>
<const name='MCRYPT_DEV_URANDOM'/>
<const name='MCRYPT_RAND'/>
</package>
<package name='MCVE-Payment' number='LVI' desc='MCVE Payment Functions'>
<function name='mcve_adduser' decs='Add an MCVE user using usersetup structure '/>
<function name='mcve_adduserarg' decs='Add a value to user configuration structure '/>
<function name='mcve_bt' decs='Get unsettled batch totals '/>
<function name='mcve_checkstatus' decs='Check to see if a transaction has completed '/>
<function name='mcve_chkpwd' decs='Verify Password '/>
<function name='mcve_chngpwd' decs='Change the system administrator&apos;s password '/>
<function name='mcve_completeauthorizations' decs='Number of complete authorizations in queue, returning an array of their identifiers '/>
<function name='mcve_connect' decs='Establish the connection to MCVE '/>
<function name='mcve_connectionerror' decs='Get a textual representation of why a connection failed '/>
<function name='mcve_deleteresponse' decs='Delete specified transaction from MCVE_CONN structure '/>
<function name='mcve_deletetrans' decs='Delete specified transaction from MCVE_CONN structure '/>
<function name='mcve_deleteusersetup' decs='Deallocate data associated with usersetup structure '/>
<function name='mcve_deluser' decs='Delete an MCVE user account '/>
<function name='mcve_destroyconn' decs='Destroy the connection and MCVE_CONN structure '/>
<function name='mcve_destroyengine' decs='Free memory associated with IP/SSL connectivity '/>
<function name='mcve_disableuser' decs='Disable an active MCVE user account '/>
<function name='mcve_edituser' decs='Edit MCVE user using usersetup structure '/>
<function name='mcve_enableuser' decs='Enable an inactive MCVE user account '/>
<function name='mcve_force' decs='Send a FORCE to MCVE. (typically, a phone-authorization) '/>
<function name='mcve_getcell' decs='Get a specific cell from a comma delimited response by column name '/>
<function name='mcve_getcellbynum' decs='Get a specific cell from a comma delimited response by column number '/>
<function name='mcve_getcommadelimited' decs='Get the RAW comma delimited data returned from MCVE '/>
<function name='mcve_getheader' decs='Get the name of the column in a comma-delimited response '/>
<function name='mcve_getuserarg' decs='Grab a value from usersetup structure '/>
<function name='mcve_getuserparam' decs='Get a user response parameter '/>
<function name='mcve_gft' decs='Audit MCVE for Failed transactions '/>
<function name='mcve_gl' decs='Audit MCVE for settled transactions '/>
<function name='mcve_gut' decs='Audit MCVE for Unsettled Transactions '/>
<function name='mcve_initconn' decs='Create and initialize an MCVE_CONN structure '/>
<function name='mcve_initengine' decs='Ready the client for IP/SSL Communication '/>
<function name='mcve_initusersetup' decs='Initialize structure to store user data '/>
<function name='mcve_iscommadelimited' decs='Checks to see if response is comma delimited '/>
<function name='mcve_liststats' decs='List statistics for all users on MCVE system '/>
<function name='mcve_listusers' decs='List all users on MCVE system '/>
<function name='mcve_maxconntimeout' decs='The maximum amount of time the API will attempt a connection to MCVE '/>
<function name='mcve_monitor' decs='Perform communication with MCVE (send/receive data) Non-blocking '/>
<function name='mcve_numcolumns' decs='Number of columns returned in a comma delimited response '/>
<function name='mcve_numrows' decs='Number of rows returned in a comma delimited response '/>
<function name='mcve_override' decs='Send an OVERRIDE to MCVE '/>
<function name='mcve_parsecommadelimited' decs='Parse the comma delimited response so mcve_getcell, etc will work '/>
<function name='mcve_ping' decs='Send a ping request to MCVE '/>
<function name='mcve_preauth' decs='Send a PREAUTHORIZATION to MCVE '/>
<function name='mcve_preauthcompletion' decs='Complete a PREAUTHORIZATION... Ready it for settlement '/>
<function name='mcve_qc' decs='Audit MCVE for a list of transactions in the outgoing queue '/>
<function name='mcve_responseparam' decs='Get a custom response parameter '/>
<function name='mcve_return' decs='Issue a RETURN or CREDIT to MCVE '/>
<function name='mcve_returncode' decs='Grab the exact return code from the transaction '/>
<function name='mcve_returnstatus' decs='Check to see if the transaction was successful '/>
<function name='mcve_sale' decs='Send a SALE to MCVE '/>
<function name='mcve_setblocking' decs='Set blocking/non-blocking mode for connection '/>
<function name='mcve_setdropfile' decs='Set the connection method to Drop-File '/>
<function name='mcve_setip' decs='Set the connection method to IP '/>
<function name='mcve_setssl_files' decs='Set certificate key files and certificates if server requires client certificate verification '/>
<function name='mcve_setssl' decs='Set the connection method to SSL '/>
<function name='mcve_settimeout' decs='Set maximum transaction time (per trans) '/>
<function name='mcve_settle' decs='Issue a settlement command to do a batch deposit '/>
<function name='mcve_text_avs' decs='Get a textual representation of the return_avs '/>
<function name='mcve_text_code' decs='Get a textual representation of the return_code '/>
<function name='mcve_text_cv' decs='Get a textual representation of the return_cv '/>
<function name='mcve_transactionauth' decs='Get the authorization number returned for the transaction (alpha-numeric) '/>
<function name='mcve_transactionavs' decs='Get the Address Verification return status '/>
<function name='mcve_transactionbatch' decs='Get the batch number associated with the transaction '/>
<function name='mcve_transactioncv' decs='Get the CVC2/CVV2/CID return status '/>
<function name='mcve_transactionid' decs='Get the unique system id for the transaction '/>
<function name='mcve_transactionitem' decs='Get the ITEM number in the associated batch for this transaction '/>
<function name='mcve_transactionssent' decs='Check to see if outgoing buffer is clear '/>
<function name='mcve_transactiontext' decs='Get verbiage (text) return from MCVE or processing institution '/>
<function name='mcve_transinqueue' decs='Number of transactions in client-queue '/>
<function name='mcve_transnew' decs='Start a new transaction '/>
<function name='mcve_transparam' decs='Add a parameter to a transaction '/>
<function name='mcve_transsend' decs='Finalize and send the transaction '/>
<function name='mcve_ub' decs='Get a list of all Unsettled batches '/>
<function name='mcve_uwait' decs='Wait x microsecs '/>
<function name='mcve_verifyconnection' decs='Set whether or not to PING upon connect to verify connection '/>
<function name='mcve_verifysslcert' decs='Set whether or not to verify the server ssl certificate '/>
<function name='mcve_void' decs='VOID a transaction in the settlement queue '/>
<const name='MC_TRANTYPE'/>
<const name='MC_USERNAME'/>
<const name='MC_PASSWORD'/>
<const name='MC_ACCOUNT'/>
<const name='MC_TRACKDATA'/>
<const name='MC_EXPDATE'/>
<const name='MC_STREET'/>
<const name='MC_ZIP'/>
<const name='MC_CV'/>
<const name='MC_COMMENTS'/>
<const name='MC_CLERKID'/>
<const name='MC_STATIONID'/>
<const name='MC_APPRCODE'/>
<const name='MC_AMOUNT'/>
<const name='MC_PTRANNUM'/>
<const name='MC_TTID'/>
<const name='MC_USER'/>
<const name='MC_PWD'/>
<const name='MC_ACCT'/>
<const name='MC_BDATE'/>
<const name='MC_EDATE'/>
<const name='MC_BATCH'/>
<const name='MC_FILE'/>
<const name='MC_ADMIN'/>
<const name='MC_AUDITTYPE'/>
<const name='MC_CUSTOM'/>
<const name='MC_EXAMOUNT'/>
<const name='MC_EXCHARGES'/>
<const name='MC_RATE'/>
<const name='MC_RENTERNAME'/>
<const name='MC_RETURNCITY'/>
<const name='MC_RETURNSTATE'/>
<const name='MC_RETURNLOCATION'/>
<const name='MC_PRIORITY'/>
<const name='MC_INQUIRY'/>
<const name='MC_CARDTYPES'/>
<const name='MC_SUB'/>
<const name='MC_MARKER'/>
<const name='MC_DEVICETYPE'/>
<const name='MC_ERRORCODE'/>
<const name='MC_NEWBATCH'/>
<const name='MC_CURR'/>
<const name='MC_DESCMERCH'/>
<const name='MC_DESCLOC'/>
<const name='MC_ORIGTYPE'/>
<const name='MC_PIN'/>
<const name='MC_VOIDORIGTYPE'/>
<const name='MC_TIMESTAMP'/>
<const name='MC_PRIO_HIGH'/>
<const name='MC_PRIO_NORMAL'/>
<const name='MC_PRIO_LOW'/>
<const name='MC_USER_PROC'/>
<const name='MC_USER_USER'/>
<const name='MC_USER_PWD'/>
<const name='MC_USER_INDCODE'/>
<const name='MC_USER_MERCHID'/>
<const name='MC_USER_BANKID'/>
<const name='MC_USER_TERMID'/>
<const name='MC_USER_CLIENTNUM'/>
<const name='MC_USER_STOREID'/>
<const name='MC_USER_AGENTID'/>
<const name='MC_USER_CHAINID'/>
<const name='MC_USER_ZIPCODE'/>
<const name='MC_USER_TIMEZONE'/>
<const name='MC_USER_MERCHCAT'/>
<const name='MC_USER_MERNAME'/>
<const name='MC_USER_MERCHLOC'/>
<const name='MC_USER_STATECODE'/>
<const name='MC_USER_PHONE'/>
<const name='MC_USER_SUB'/>
<const name='MC_USER_CARDTYPES'/>
<const name='MC_USER_MODE'/>
<const name='MC_USER_VNUMBER'/>
<const name='MC_USER_ROUTINGID'/>
<const name='MC_USER_PPROPERTY'/>
<const name='MC_USER_PID'/>
<const name='MC_USER_PIDPWD'/>
<const name='MC_USER_SMID'/>
<const name='MC_USER_SMIDPWD'/>
<const name='MC_USER_USDDIV'/>
<const name='MC_USER_AUDDIV'/>
<const name='MC_USER_DKKDIV'/>
<const name='MC_USER_GBPDIV'/>
<const name='MC_USER_HKDDIV'/>
<const name='MC_USER_JPYDIV'/>
<const name='MC_USER_NZDDIV'/>
<const name='MC_USER_NOKDIV'/>
<const name='MC_USER_SGDDIV'/>
<const name='MC_USER_ZARDIV'/>
<const name='MC_USER_SEKDIV'/>
<const name='MC_USER_CHFDIV'/>
<const name='MC_USER_CADDIV'/>
<const name='MC_USER_DIVNUM'/>
<const name='MC_CARD_VISA'/>
<const name='MC_CARD_MC'/>
<const name='MC_CARD_AMEX'/>
<const name='MC_CARD_DISC'/>
<const name='MC_CARD_JCB'/>
<const name='MC_CARD_CB'/>
<const name='MC_CARD_DC'/>
<const name='MC_CARD_GIFT'/>
<const name='MC_CARD_OTHER'/>
<const name='MC_CARD_ALL'/>
<const name='MC_MODE_AUTH'/>
<const name='MC_MODE_SETTLE'/>
<const name='MC_MODE_BOTH'/>
<const name='MC_MODE_ALL'/>
<const name='MC_EXCHARGES_REST'/>
<const name='MC_EXCHARGES_GIFT'/>
<const name='MC_EXCHARGES_MINI'/>
<const name='MC_EXCHARGES_TELE'/>
<const name='MC_EXCHARGES_OTHER'/>
<const name='MC_EXCHARGES_LAUND'/>
<const name='MC_EXCHARGES_NONE'/>
<const name='MC_EXCHARGES_GAS'/>
<const name='MC_EXCHARGES_MILE'/>
<const name='MC_EXCHARGES_LATE'/>
<const name='MC_EXCHARGES_1WAY'/>
<const name='MC_EXCHARGES_VIOL'/>
<const name='MC_TRAN_SALE'/>
<const name='MC_TRAN_REDEMPTION'/>
<const name='MC_TRAN_PREAUTH'/>
<const name='MC_TRAN_VOID'/>
<const name='MC_TRAN_PREAUTHCOMPLETE'/>
<const name='MC_TRAN_FORCE'/>
<const name='MC_TRAN_OVERRIDE'/>
<const name='MC_TRAN_RETURN'/>
<const name='MC_TRAN_RELOAD'/>
<const name='MC_TRAN_CREDIT'/>
<const name='MC_TRAN_SETTLE'/>
<const name='MC_TRAN_INCREMENTAL'/>
<const name='MC_TRAN_REVERSAL'/>
<const name='MC_TRAN_ACTIVATE'/>
<const name='MC_TRAN_BALANCEINQ'/>
<const name='MC_TRAN_CASHOUT'/>
<const name='MC_TRAN_TOREVERSAL'/>
<const name='MC_TRAN_SETTLERFR'/>
<const name='MC_TRAN_ISSUE'/>
<const name='MC_TRAN_TIP'/>
<const name='MC_TRAN_MERCHRETURN'/>
<const name='MC_TRAN_IVRREQ'/>
<const name='MC_TRAN_IVRRESP'/>
<const name='MC_TRAN_ADMIN'/>
<const name='MC_TRAN_PING'/>
<const name='MC_TRAN_CHKPWD'/>
<const name='MC_TRAN_CHNGPWD'/>
<const name='MC_TRAN_LISTSTATS'/>
<const name='MC_TRAN_LISTUSERS'/>
<const name='MC_TRAN_GETUSERINFO'/>
<const name='MC_TRAN_ADDUSER'/>
<const name='MC_TRAN_EDITUSER'/>
<const name='MC_TRAN_DELUSER'/>
<const name='MC_TRAN_ENABLEUSER'/>
<const name='MC_TRAN_DISABLEUSER'/>
<const name='MC_TRAN_IMPORT'/>
<const name='MC_TRAN_EXPORT'/>
<const name='MC_TRAN_ERRORLOG'/>
<const name='MC_TRAN_CLEARERRORLOG'/>
<const name='MC_TRAN_GETSUBACCTS'/>
<const name='MC_ADMIN_GUT'/>
<const name='MC_ADMIN_GL'/>
<const name='MC_ADMIN_GFT'/>
<const name='MC_ADMIN_BT'/>
<const name='MC_ADMIN_UB'/>
<const name='MC_ADMIN_QC'/>
<const name='MC_ADMIN_RS'/>
<const name='MC_ADMIN_CTH'/>
<const name='MC_ADMIN_CFH'/>
<const name='MC_ADMIN_FORCESETTLE'/>
<const name='MC_ADMIN_SETBATCHNUM'/>
<const name='MC_ADMIN_RENUMBERBATCH'/>
<const name='MC_ADMIN_FIELDEDIT'/>
<const name='MC_ADMIN_CLOSEBATCH'/>
<const name='MCVE_UNUSED'/>
<const name='MCVE_NEW'/>
<const name='MCVE_PENDING'/>
<const name='MCVE_DONE'/>
<const name='MCVE_GOOD'/>
<const name='MCVE_BAD'/>
<const name='MCVE_STREET'/>
<const name='MCVE_ZIP'/>
<const name='MCVE_UNKNOWN'/>
<const name='MCVE_ERROR'/>
<const name='MCVE_FAIL'/>
<const name='MCVE_SUCCESS'/>
<const name='MCVE_AUTH'/>
<const name='MCVE_DENY'/>
<const name='MCVE_CALL'/>
<const name='MCVE_DUPL'/>
<const name='MCVE_PKUP'/>
<const name='MCVE_RETRY'/>
<const name='MCVE_SETUP'/>
<const name='MCVE_TIMEOUT'/>
<const name='MCVE_SALE'/>
<const name='MCVE_PREAUTH'/>
<const name='MCVE_FORCE'/>
<const name='MCVE_OVERRIDE'/>
<const name='MCVE_RETURN'/>
<const name='MCVE_SETTLE'/>
<const name='MCVE_PROC'/>
<const name='MCVE_USER'/>
<const name='MCVE_PWD'/>
<const name='MCVE_INDCODE'/>
<const name='MCVE_MERCHID'/>
<const name='MCVE_BANKID'/>
<const name='MCVE_TERMID'/>
<const name='MCVE_CLIENTNUM'/>
<const name='MCVE_STOREID'/>
<const name='MCVE_AGENTID'/>
<const name='MCVE_CHAINID'/>
<const name='MCVE_ZIPCODE'/>
<const name='MCVE_TIMEZONE'/>
<const name='MCVE_MERCHCAT'/>
<const name='MCVE_MERNAME'/>
<const name='MCVE_MERCHLOC'/>
<const name='MCVE_STATECODE'/>
<const name='MCVE_SERVICEPHONE'/>
</package>
<package name='Mhash' number='LVII' desc='Mhash Functions'>
<function name='mhash_count' decs='Get the highest available hash id'/>
<function name='mhash_get_block_size' decs='Get the block size of the specified hash'/>
<function name='mhash_get_hash_name' decs='Get the name of the specified hash'/>
<function name='mhash_keygen_s2k' decs='Generates a key'/>
<function name='mhash' decs='Compute hash'/>
<const name='MHASH_MD5'/>
<const name='MHASH_SHA1'/>
<const name='MHASH_HAVAL256'/>
<const name='MHASH_HAVAL192'/>
<const name='MHASH_HAVAL160'/>
<const name='MHASH_HAVAL128'/>
<const name='MHASH_RIPEMD160'/>
<const name='MHASH_GOST'/>
<const name='MHASH_TIGER'/>
<const name='MHASH_CRC32'/>
<const name='MHASH_CRC32B'/>
</package>
<package name='Mimetype' number='LVIII' desc='Mimetype Functions'>
<function name='mime_content_type' decs='Detect MIME Content-type for a file'/>
</package>
<package name='Microsoft-SQL-Server' number='LIX' desc='Microsoft SQL Server Functions'>
<function name='mssql_bind' decs='Adds a parameter to a stored procedure or a remote stored procedure '/>
<function name='mssql_close' decs='Close MS SQL Server connection'/>
<function name='mssql_connect' decs='Open MS SQL server connection'/>
<function name='mssql_data_seek' decs='Moves internal row pointer'/>
<function name='mssql_execute' decs='Executes a stored procedure on a MS SQL server database '/>
<function name='mssql_fetch_array' decs='Fetch a result row as an associative array, a numeric array, or both '/>
<function name='mssql_fetch_assoc' decs='Returns an associative array of the current row in the result set specified by result_id '/>
<function name='mssql_fetch_batch' decs='Returns the next batch of records '/>
<function name='mssql_fetch_field' decs='Get field information'/>
<function name='mssql_fetch_object' decs='Fetch row as object'/>
<function name='mssql_fetch_row' decs='Get row as enumerated array'/>
<function name='mssql_field_length' decs='Get the length of a field'/>
<function name='mssql_field_name' decs='Get the name of a field'/>
<function name='mssql_field_seek' decs='Seeks to the specified field offset'/>
<function name='mssql_field_type' decs='Gets the type of a field'/>
<function name='mssql_free_result' decs='Free result memory'/>
<function name='mssql_free_statement' decs='Free statement memory'/>
<function name='mssql_get_last_message' decs='Returns the last message from the server '/>
<function name='mssql_guid_string' decs='Converts a 16 byte binary GUID to a string '/>
<function name='mssql_init' decs='Initializes a stored procedure or a remote stored procedure '/>
<function name='mssql_min_error_severity' decs='Sets the lower error severity'/>
<function name='mssql_min_message_severity' decs='Sets the lower message severity'/>
<function name='mssql_next_result' decs='Move the internal result pointer to the next result'/>
<function name='mssql_num_fields' decs='Gets the number of fields in result'/>
<function name='mssql_num_rows' decs='Gets the number of rows in result'/>
<function name='mssql_pconnect' decs='Open persistent MS SQL connection'/>
<function name='mssql_query' decs='Send MS SQL query'/>
<function name='mssql_result' decs='Get result data'/>
<function name='mssql_rows_affected' decs='Returns the number of records affected by the query '/>
<function name='mssql_select_db' decs='Select MS SQL database'/>
<const name='MSSQL_ASSOC'/>
<const name='MSSQL_NUM'/>
<const name='MSSQL_BOTH'/>
<const name='SQLTEXT'/>
<const name='SQLVARCHAR'/>
<const name='SQLCHAR'/>
<const name='SQLINT1'/>
<const name='SQLINT2'/>
<const name='SQLINT4'/>
<const name='SQLBIT'/>
<const name='SQLFLT8'/>
</package>
<package name='Mingfor-Flash' number='LX' desc='Ming functions for Flash'>
<function name='ming_setcubicthreshold' decs='Set cubic threshold (?) '/>
<function name='ming_setscale' decs='Set scale (?) '/>
<function name='ming_useswfversion' decs='Use SWF version (?) '/>
<function name='SWFAction' decs='Creates a new Action.'/>
<method class='SWFBitmap' call='dynamic' name='getHeight' decs='Returns the bitmap&apos;s height.'/>
<method class='SWFBitmap' call='dynamic' name='getWidth' decs='Returns the bitmap&apos;s width.'/>
<function name='SWFBitmap' decs='Loads Bitmap object'/>
<function name='swfbutton_keypress' decs='Returns the action flag for keyPress(char) '/>
<method class='SWFbutton' call='dynamic' name='addAction' decs='Adds an action'/>
<method class='SWFbutton' call='dynamic' name='addShape' decs='Adds a shape to a button'/>
<method class='SWFbutton' call='dynamic' name='setAction' decs='Sets the action'/>
<method class='SWFbutton' call='dynamic' name='setdown' decs='Alias for addShape(shape, SWFBUTTON_DOWN)'/>
<method class='SWFbutton' call='dynamic' name='setHit' decs='Alias for addShape(shape, SWFBUTTON_HIT)'/>
<method class='SWFbutton' call='dynamic' name='setOver' decs='Alias for addShape(shape, SWFBUTTON_OVER)'/>
<method class='SWFbutton' call='dynamic' name='setUp' decs='Alias for addShape(shape, SWFBUTTON_UP)'/>
<function name='SWFbutton' decs='Creates a new Button.'/>
<method class='SWFDisplayItem' call='dynamic' name='addColor' decs='Adds the given color to this item&apos;s color transform.'/>
<method class='SWFDisplayItem' call='dynamic' name='move' decs='Moves object in relative coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='moveTo' decs='Moves object in global coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='multColor' decs='Multiplies the item&apos;s color transform.'/>
<method class='SWFDisplayItem' call='dynamic' name='remove' decs='Removes the object from the movie'/>
<method class='SWFDisplayItem' call='dynamic' name='Rotate' decs='Rotates in relative coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='rotateTo' decs='Rotates the object in global coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='scale' decs='Scales the object in relative coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='scaleTo' decs='Scales the object in global coordinates.'/>
<method class='SWFDisplayItem' call='dynamic' name='setDepth' decs='Sets z-order'/>
<method class='SWFDisplayItem' call='dynamic' name='setName' decs='Sets the object&apos;s name'/>
<method class='SWFDisplayItem' call='dynamic' name='setRatio' decs='Sets the object&apos;s ratio.'/>
<method class='SWFDisplayItem' call='dynamic' name='skewX' decs='Sets the X-skew.'/>
<method class='SWFDisplayItem' call='dynamic' name='skewXTo' decs='Sets the X-skew.'/>
<method class='SWFDisplayItem' call='dynamic' name='skewY' decs='Sets the Y-skew.'/>
<method class='SWFDisplayItem' call='dynamic' name='skewYTo' decs='Sets the Y-skew.'/>
<function name='SWFDisplayItem' decs='Creates a new displayitem object.'/>
<method class='SWFFill' call='dynamic' name='moveTo' decs='Moves fill origin'/>
<method class='SWFFill' call='dynamic' name='rotateTo' decs='Sets fill&apos;s rotation'/>
<method class='SWFFill' call='dynamic' name='scaleTo' decs='Sets fill&apos;s scale'/>
<method class='SWFFill' call='dynamic' name='skewXTo' decs='Sets fill x-skew'/>
<method class='SWFFill' call='dynamic' name='skewYTo' decs='Sets fill y-skew'/>
<function name='SWFFill' decs='Loads SWFFill object'/>
<method class='swffont' call='dynamic' name='getwidth' decs='Returns the string&apos;s width'/>
<function name='SWFFont' decs='Loads a font definition'/>
<method class='SWFGradient' call='dynamic' name='addEntry' decs='Adds an entry to the gradient list.'/>
<function name='SWFGradient' decs='Creates a gradient object'/>
<method class='SWFMorph' call='dynamic' name='getshape1' decs='Gets a handle to the starting shape'/>
<method class='SWFMorph' call='dynamic' name='getshape2' decs='Gets a handle to the ending shape'/>
<function name='SWFMorph' decs='Creates a new SWFMorph object.'/>
<method class='SWFMovie' call='dynamic' name='add' decs='Adds any type of data to a movie.'/>
<method class='SWFMovie' call='dynamic' name='nextframe' decs='Moves to the next frame of the animation.'/>
<method class='SWFMovie' call='dynamic' name='output' decs='Dumps your lovingly prepared movie out.'/>
<method class='swfmovie' call='dynamic' name='remove' decs='Removes the object instance from the display list.'/>
<method class='SWFMovie' call='dynamic' name='save' decs='Saves your movie in a file.'/>
<method class='SWFMovie' call='dynamic' name='setbackground' decs='Sets the background color.'/>
<method class='SWFMovie' call='dynamic' name='setdimension' decs='Sets the movie&apos;s width and height.'/>
<method class='SWFMovie' call='dynamic' name='setframes' decs='Sets the total number of frames in the animation.'/>
<method class='SWFMovie' call='dynamic' name='setrate' decs='Sets the animation&apos;s frame rate.'/>
<method class='SWFMovie' call='dynamic' name='streammp3' decs='Streams a MP3 file.'/>
<function name='SWFMovie' decs='Creates a new movie object, representing an SWF version 4 movie.'/>
<method class='SWFShape' call='dynamic' name='addFill' decs='Adds a solid fill to the shape.'/>
<method class='SWFShape' call='dynamic' name='drawCurve' decs='Draws a curve (relative).'/>
<method class='SWFShape' call='dynamic' name='drawCurveTo' decs='Draws a curve.'/>
<method class='SWFShape' call='dynamic' name='drawLine' decs='Draws a line (relative).'/>
<method class='SWFShape' call='dynamic' name='drawLineTo' decs='Draws a line.'/>
<method class='SWFShape' call='dynamic' name='movePen' decs='Moves the shape&apos;s pen (relative).'/>
<method class='SWFShape' call='dynamic' name='movePenTo' decs='Moves the shape&apos;s pen.'/>
<method class='SWFShape' call='dynamic' name='setLeftFill' decs='Sets left rasterizing color.'/>
<method class='SWFShape' call='dynamic' name='setLine' decs='Sets the shape&apos;s line style.'/>
<method class='SWFShape' call='dynamic' name='setRightFill' decs='Sets right rasterizing color.'/>
<function name='SWFShape' decs='Creates a new shape object.'/>
<method class='swfsprite' call='dynamic' name='add' decs='Adds an object to a sprite'/>
<method class='SWFSprite' call='dynamic' name='nextframe' decs='Moves to the next frame of the animation.'/>
<method class='SWFSprite' call='dynamic' name='remove' decs='Removes an object to a sprite'/>
<method class='SWFSprite' call='dynamic' name='setframes' decs='Sets the total number of frames in the animation.'/>
<function name='SWFSprite' decs='Creates a movie clip (a sprite)'/>
<method class='SWFText' call='dynamic' name='addString' decs='Draws a string'/>
<method class='SWFText' call='dynamic' name='getWidth' decs='Computes string&apos;s width'/>
<method class='SWFText' call='dynamic' name='moveTo' decs='Moves the pen'/>
<method class='SWFText' call='dynamic' name='setColor' decs='Sets the current font color'/>
<method class='SWFText' call='dynamic' name='setFont' decs='Sets the current font'/>
<method class='SWFText' call='dynamic' name='setHeight' decs='Sets the current font height'/>
<method class='SWFText' call='dynamic' name='setSpacing' decs='Sets the current font spacing'/>
<function name='SWFText' decs='Creates a new SWFText object.'/>
<method class='SWFTextField' call='dynamic' name='addstring' decs='Concatenates the given string to the text field'/>
<method class='SWFTextField' call='dynamic' name='align' decs='Sets the text field alignment'/>
<method class='SWFTextField' call='dynamic' name='setbounds' decs='Sets the text field width and height'/>
<method class='SWFTextField' call='dynamic' name='setcolor' decs='Sets the color of the text field. '/>
<method class='SWFTextField' call='dynamic' name='setFont' decs='Sets the text field font'/>
<method class='SWFTextField' call='dynamic' name='setHeight' decs='Sets the font height of this text field font.'/>
<method class='SWFTextField' call='dynamic' name='setindentation' decs='Sets the indentation of the first line.'/>
<method class='SWFTextField' call='dynamic' name='setLeftMargin' decs='Sets the left margin width of the text field.'/>
<method class='SWFTextField' call='dynamic' name='setLineSpacing' decs='Sets the line spacing of the text field.'/>
<method class='SWFTextField' call='dynamic' name='setMargins' decs='Sets the margins width of the text field.'/>
<method class='SWFTextField' call='dynamic' name='setname' decs='Sets the variable name'/>
<method class='SWFTextField' call='dynamic' name='setrightMargin' decs='Sets the right margin width of the text field.'/>
<function name='SWFTextField' decs='Creates a text field object'/>
<const name='SWFBUTTON_HIT'/>
<const name='SWFBUTTON_DOWN'/>
<const name='SWFBUTTON_OVER'/>
<const name='SWFBUTTON_UP'/>
<const name='SWFBUTTON_MOUSEUPOUTSIDE'/>
<const name='SWFBUTTON_DRAGOVER'/>
<const name='SWFBUTTON_DRAGOUT'/>
<const name='SWFBUTTON_MOUSEUP'/>
<const name='SWFBUTTON_MOUSEDOWN'/>
<const name='SWFBUTTON_MOUSEOUT'/>
<const name='SWFBUTTON_MOUSEOVER'/>
<const name='SWFFILL_RADIAL_GRADIENT'/>
<const name='SWFFILL_LINEAR_GRADIENT'/>
<const name='SWFFILL_TILED_BITMAP'/>
<const name='SWFFILL_CLIPPED_BITMAP'/>
<const name='SWFTEXTFIELD_HASLENGTH'/>
<const name='SWFTEXTFIELD_NOEDIT'/>
<const name='SWFTEXTFIELD_PASSWORD'/>
<const name='SWFTEXTFIELD_MULTILINE'/>
<const name='SWFTEXTFIELD_WORDWRAP'/>
<const name='SWFTEXTFIELD_DRAWBOX'/>
<const name='SWFTEXTFIELD_NOSELECT'/>
<const name='SWFTEXTFIELD_HTML'/>
<const name='SWFTEXTFIELD_ALIGN_LEFT'/>
<const name='SWFTEXTFIELD_ALIGN_RIGHT'/>
<const name='SWFTEXTFIELD_ALIGN_CENTER'/>
<const name='SWFTEXTFIELD_ALIGN_JUSTIFY'/>
<const name='SWFACTION_ONLOAD'/>
<const name='SWFACTION_ENTERFRAME'/>
<const name='SWFACTION_UNLOAD'/>
<const name='SWFACTION_MOUSEMOVE'/>
<const name='SWFACTION_MOUSEDOWN'/>
<const name='SWFACTION_MOUSEUP'/>
<const name='SWFACTION_KEYDOWN'/>
<const name='SWFACTION_KEYUP'/>
<const name='SWFACTION_DATA'/>
</package>
<package name='Miscellaneous' number='LXI' desc='Miscellaneous Functions'>
<function name='connection_aborted' decs='Returns TRUE if client disconnected'/>
<function name='connection_status' decs='Returns connection status bitfield'/>
<function name='connection_timeout' decs='Return TRUE if script timed out' depr='on'/>
<function name='constant' decs='Returns the value of a constant'/>
<function name='define' decs='Defines a named constant.'/>
<function name='defined' decs='Checks whether a given named constant exists '/>
<function name='get_browser' decs='Tells what the user&apos;s browser is capable of '/>
<function name='highlight_file' decs='Syntax highlighting of a file'/>
<function name='highlight_string' decs='Syntax highlighting of a string'/>
<function name='ignore_user_abort' decs='Set whether a client disconnect should abort script execution '/>
<function name='pack' decs='Pack data into binary string.'/>
<function name='show_source' decs='Alias of highlight_file()'/>
<function name='sleep' decs='Delay execution'/>
<function name='uniqid' decs='Generate a unique ID'/>
<function name='unpack' decs='Unpack data from binary string'/>
<function name='usleep' decs='Delay execution in microseconds'/>
<const name='CONNECTION_ABORTED'/>
<const name='CONNECTION_NORMAL'/>
<const name='CONNECTION_TIMEOUT'/>
</package>
<package name='mnoGoSearch' number='LXII' desc='mnoGoSearch Functions'>
<function name='udm_add_search_limit' decs='Add various search limits'/>
<function name='udm_alloc_agent_array' decs='Allocate mnoGoSearch session'/>
<function name='udm_alloc_agent' decs='Allocate mnoGoSearch session'/>
<function name='udm_api_version' decs='Get mnoGoSearch API version.'/>
<function name='udm_cat_list' decs='Get all the categories on the same level with the current one.'/>
<function name='udm_cat_path' decs='Get the path to the current category.'/>
<function name='udm_check_charset' decs='Check if the given charset is known to mnogosearch '/>
<function name='udm_check_stored' decs='Check connection to stored '/>
<function name='udm_clear_search_limits' decs='Clear all mnoGoSearch search restrictions'/>
<function name='udm_close_stored' decs='Close connection to stored '/>
<function name='udm_crc32' decs='Return CRC32 checksum of given string '/>
<function name='udm_errno' decs='Get mnoGoSearch error number'/>
<function name='udm_error' decs='Get mnoGoSearch error message'/>
<function name='udm_find' decs='Perform search'/>
<function name='udm_free_agent' decs='Free mnoGoSearch session'/>
<function name='udm_free_ispell_data' decs='Free memory allocated for ispell data'/>
<function name='udm_free_res' decs='Free mnoGoSearch result'/>
<function name='udm_get_doc_count' decs='Get total number of documents in database.'/>
<function name='udm_get_res_field' decs='Fetch mnoGoSearch result field'/>
<function name='udm_get_res_param' decs='Get mnoGoSearch result parameters'/>
<function name='udm_hash32' decs='Return Hash32 checksum of gived string'/>
<function name='udm_load_ispell_data' decs='Load ispell data'/>
<function name='udm_open_stored' decs='Open connection to stored '/>
<function name='udm_set_agent_param' decs='Set mnoGoSearch agent session parameters'/>
<const name='UDM_FIELD_URLID'/>
<const name='UDM_FIELD_URL'/>
<const name='UDM_FIELD_CONTENT'/>
<const name='UDM_FIELD_TITLE'/>
<const name='UDM_FIELD_KEYWORDS'/>
<const name='UDM_FIELD_DESC'/>
<const name='UDM_FIELD_DESCRIPTION'/>
<const name='UDM_FIELD_TEXT'/>
<const name='UDM_FIELD_SIZE'/>
<const name='UDM_FIELD_RATING'/>
<const name='UDM_FIELD_SCORE'/>
<const name='UDM_FIELD_MODIFIED'/>
<const name='UDM_FIELD_ORDER'/>
<const name='UDM_FIELD_CRC'/>
<const name='UDM_FIELD_CATEGORY'/>
<const name='UDM_FIELD_LANG'/>
<const name='UDM_FIELD_CHARSET'/>
<const name='UDM_PARAM_PAGE_SIZE'/>
<const name='UDM_PARAM_PAGE_NUM'/>
<const name='UDM_PARAM_SEARCH_MODE'/>
<const name='UDM_PARAM_CACHE_MODE'/>
<const name='UDM_PARAM_TRACK_MODE'/>
<const name='UDM_PARAM_PHRASE_MODE'/>
<const name='UDM_PARAM_CHARSET'/>
<const name='UDM_PARAM_LOCAL_CHARSET'/>
<const name='UDM_PARAM_BROWSER_CHARSET'/>
<const name='UDM_PARAM_STOPTABLE'/>
<const name='UDM_PARAM_STOP_TABLE'/>
<const name='UDM_PARAM_STOPFILE'/>
<const name='UDM_PARAM_STOP_FILE'/>
<const name='UDM_PARAM_WEIGHT_FACTOR'/>
<const name='UDM_PARAM_WORD_MATCH'/>
<const name='UDM_PARAM_MAX_WORD_LEN'/>
<const name='UDM_PARAM_MAX_WORDLEN'/>
<const name='UDM_PARAM_MIN_WORD_LEN'/>
<const name='UDM_PARAM_MIN_WORDLEN'/>
<const name='UDM_PARAM_ISPELL_PREFIXES'/>
<const name='UDM_PARAM_ISPELL_PREFIX'/>
<const name='UDM_PARAM_PREFIXES'/>
<const name='UDM_PARAM_PREFIX'/>
<const name='UDM_PARAM_CROSS_WORDS'/>
<const name='UDM_PARAM_CROSSWORDS'/>
<const name='UDM_PARAM_VARDIR'/>
<const name='UDM_PARAM_DATADIR'/>
<const name='UDM_PARAM_HLBEG'/>
<const name='UDM_PARAM_HLEND'/>
<const name='UDM_PARAM_SYNONYM'/>
<const name='UDM_PARAM_SEARCHD'/>
<const name='UDM_PARAM_QSTRING'/>
<const name='UDM_PARAM_REMOTE_ADDR'/>
<const name='UDM_LIMIT_CAT'/>
<const name='UDM_LIMIT_URL'/>
<const name='UDM_LIMIT_TAG'/>
<const name='UDM_LIMIT_LANG'/>
<const name='UDM_LIMIT_DATE'/>
<const name='UDM_PARAM_FOUND'/>
<const name='UDM_PARAM_NUM_ROWS'/>
<const name='UDM_PARAM_WORDINFO'/>
<const name='UDM_PARAM_WORD_INFO'/>
<const name='UDM_PARAM_SEARCHTIME'/>
<const name='UDM_PARAM_SEARCH_TIME'/>
<const name='UDM_PARAM_FIRST_DOC'/>
<const name='UDM_PARAM_LAST_DOC'/>
<const name='UDM_MODE_ALL'/>
<const name='UDM_MODE_ANY'/>
<const name='UDM_MODE_BOOL'/>
<const name='UDM_MODE_PHRASE'/>
<const name='UDM_CACHE_ENABLED'/>
<const name='UDM_CACHE_DISABLED'/>
<const name='UDM_TRACK_ENABLED'/>
<const name='UDM_TRACK_DISABLED'/>
<const name='UDM_PHRASE_ENABLED'/>
<const name='UDM_PHRASE_DISABLED'/>
<const name='UDM_CROSS_WORDS_ENABLED'/>
<const name='UDM_CROSSWORDS_ENABLED'/>
<const name='UDM_CROSS_WORDS_DISABLED'/>
<const name='UDM_CROSSWORDS_DISABLED'/>
<const name='UDM_PREFIXES_ENABLED'/>
<const name='UDM_PREFIX_ENABLED'/>
<const name='UDM_ISPELL_PREFIXES_ENABLED'/>
<const name='UDM_ISPELL_PREFIX_ENABLED'/>
<const name='UDM_PREFIXES_DISABLED'/>
<const name='UDM_PREFIX_DISABLED'/>
<const name='UDM_ISPELL_PREFIXES_DISABLED'/>
<const name='UDM_ISPELL_PREFIX_DISABLED'/>
<const name='UDM_ISPELL_TYPE_AFFIX'/>
<const name='UDM_ISPELL_TYPE_SPELL'/>
<const name='UDM_ISPELL_TYPE_DB'/>
<const name='UDM_ISPELL_TYPE_SERVER'/>
<const name='UDM_MATCH_WORD'/>
<const name='UDM_MATCH_BEGIN'/>
<const name='UDM_MATCH_SUBSTR'/>
<const name='UDM_MATCH_END'/>
</package>
<package name='mSQL' number='LXIII' desc='mSQL Functions'>
<function name='msql_affected_rows' decs='Returns number of affected rows'/>
<function name='msql_close' decs='Close mSQL connection'/>
<function name='msql_connect' decs='Open mSQL connection'/>
<function name='msql_create_db' decs='Create mSQL database'/>
<function name='msql_createdb' decs='Alias of msql_create_db()'/>
<function name='msql_data_seek' decs='Move internal row pointer'/>
<function name='msql_dbname' decs='Alias of msql_result()' depr='on'/>
<function name='msql_drop_db' decs='Drop (delete) mSQL database'/>
<function name='msql_error' decs='Returns error message of last msql call'/>
<function name='msql_fetch_array' decs='Fetch row as array'/>
<function name='msql_fetch_field' decs='Get field information'/>
<function name='msql_fetch_object' decs='Fetch row as object'/>
<function name='msql_fetch_row' decs='Get row as enumerated array'/>
<function name='msql_field_flags' decs='Get field flags'/>
<function name='msql_field_len' decs='Get field length'/>
<function name='msql_field_name' decs='Get field name'/>
<function name='msql_field_seek' decs='Set field offset'/>
<function name='msql_field_table' decs='Get table name for field'/>
<function name='msql_field_type' decs='Get field type'/>
<function name='msql_fieldflags' decs='Alias of msql_field_flags()'/>
<function name='msql_fieldlen' decs='Alias of msql_field_len()' depr='on'/>
<function name='msql_fieldname' decs='Alias of msql_field_name()' depr='on'/>
<function name='msql_fieldtable' decs='Alias of msql_field_table()' depr='on'/>
<function name='msql_fieldtype' decs='Alias of msql_field_type()' depr='on'/>
<function name='msql_free_result' decs='Free result memory'/>
<function name='msql_freeresult' decs='Free result memory' depr='on'/>
<function name='msql_list_dbs' decs='List mSQL databases on server'/>
<function name='msql_list_fields' decs='List result fields'/>
<function name='msql_listfields' decs='List result fields' depr='on'/>
<function name='msql_list_tables' decs='List tables in an mSQL database'/>
<function name='msql_listtables' decs='List tables in an mSQL database' depr='on'/>
<function name='msql_num_fields' decs='Get number of fields in result'/>
<function name='msql_num_rows' decs='Get number of rows in result'/>
<function name='msql_numfields' decs='Alias of msql_num_fields()' depr='on'/>
<function name='msql_numrows' decs='Alias of msql_num_rows()' depr='on'/>
<function name='msql_pconnect' decs='Open persistent mSQL connection'/>
<function name='msql_query' decs='Send mSQL query'/>
<function name='msql_regcase' decs='Alias of sql_regcase()'/>
<function name='msql_result' decs='Get result data'/>
<function name='msql_select_db' decs='Select mSQL database'/>
<function name='msql_selectdb' decs='Select mSQL database' depr='on'/>
<function name='msql_tablename' decs='Alias of msql_result()' depr='on'/>
<function name='msql' decs='Alias of msql_db_query()'/>
<const name='MSQL_ASSOC'/>
<const name='MSQL_NUM'/>
<const name='MSQL_BOTH'/>
</package>
<package name='MySQL' number='LXIV' desc='MySQL Functions'>
<function name='mysql_affected_rows' decs='Get number of affected rows in previous MySQL operation'/>
<function name='mysql_change_user' decs='Change logged in user of the active connection '/>
<function name='mysql_client_encoding' decs='Returns the name of the character set'/>
<function name='mysql_close' decs='Close MySQL connection'/>
<function name='mysql_connect' decs='Open a connection to a MySQL Server'/>
<function name='mysql_create_db' decs='Create a MySQL database' depr='on'/>
<function name='mysql_createdb' decs='Create a MySQL database' depr='on'/>
<function name='mysql_data_seek' decs='Move internal result pointer'/>
<function name='mysql_db_name' decs='Get result data'/>
<function name='mysql_dbname' decs='Get result data' depr='on'/>
<function name='mysql_db_query' decs='Send a MySQL query' depr='on'/>
<function name='mysql_drop_db' decs='Drop (delete) a MySQL database' depr='on'/>
<function name='mysql_dropdb' decs='Drop (delete) a MySQL database' depr='on'/>
<function name='mysql_errno' decs='Returns the numerical value of the error message from previous MySQL operation '/>
<function name='mysql_error' decs='Returns the text of the error message from previous MySQL operation '/>
<function name='mysql_escape_string' decs='Escapes a string for use in a mysql_query. '/>
<function name='mysql_fetch_array' decs='Fetch a result row as an associative array, a numeric array, or both. '/>
<function name='mysql_fetch_assoc' decs='Fetch a result row as an associative array '/>
<function name='mysql_fetch_field' decs='Get column information from a result and return as an object '/>
<function name='mysql_fetch_lengths' decs='Get the length of each output in a result '/>
<function name='mysql_fetch_object' decs='Fetch a result row as an object'/>
<function name='mysql_fetch_row' decs='Get a result row as an enumerated array'/>
<function name='mysql_field_flags' decs='Get the flags associated with the specified field in a result '/>
<function name='mysql_fieldflags' decs='Get the flags associated with the specified field in a result' depr='on'/>
<function name='mysql_field_len' decs='Returns the length of the specified field '/>
<function name='mysql_fieldlen' decs='Returns the length of the specified field' depr='on'/>
<function name='mysql_field_name' decs='Get the name of the specified field in a result '/>
<function name='mysql_fieldname' decs='Get the name of the specified field in a result' depr='on'/>
<function name='mysql_field_seek' decs='Set result pointer to a specified field offset '/>
<function name='mysql_field_table' decs='Get name of the table the specified field is in '/>
<function name='mysql_fieldtable' decs='Get name of the table the specified field is in' depr='on'/>
<function name='mysql_field_type' decs='Get the type of the specified field in a result '/>
<function name='mysql_fieldtype' decs='' depr='on'/>
<function name='mysql_free_result' decs='Free result memory'/>
<function name='mysql_freeresult' decs='Free result memory' depr='on'/>
<function name='mysql_get_client_info' decs='Get MySQL client info'/>
<function name='mysql_get_host_info' decs='Get MySQL host info'/>
<function name='mysql_get_proto_info' decs='Get MySQL protocol info'/>
<function name='mysql_get_server_info' decs='Get MySQL server info'/>
<function name='mysql_info' decs='Get information about the most recent query '/>
<function name='mysql_insert_id' decs='Get the ID generated from the previous INSERT operation '/>
<function name='mysql_list_dbs' decs='List databases available on a MySQL server '/>
<function name='mysql_listdbs' decs='List databases available on a MySQL server' depr='on'/>
<function name='mysql_list_fields' decs='List MySQL table fields' depr='on'/>
<function name='mysql_listfields' decs='List MySQL table fields' depr='on'/>
<function name='mysql_list_processes' decs='List MySQL processes'/>
<function name='mysql_list_tables' decs='List tables in a MySQL database' depr='on'/>
<function name='mysql_listtables' decs='List tables in a MySQL database' depr='on'/>
<function name='mysql_num_fields' decs='Get number of fields in result'/>
<function name='mysql_numfields' decs='Get number of fields in result' depr='on'/>
<function name='mysql_num_rows' decs='Get number of rows in result'/>
<function name='mysql_numrows' decs='Get number of rows in result' depr='on'/>
<function name='mysql_pconnect' decs='Open a persistent connection to a MySQL server '/>
<function name='mysql_ping' decs='Ping a server connection or reconnect if there is no connection'/>
<function name='mysql_query' decs='Send a MySQL query'/>
<function name='mysql_real_escape_string' decs='Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection. '/>
<function name='mysql_result' decs='Get result data'/>
<function name='mysql_select_db' decs='Select a MySQL database'/>
<function name='mysql_selectdb' decs='' depr='on'/>
<function name='mysql_stat' decs='Get current system status'/>
<function name='mysql_tablename' decs='Get table name of field'/>
<function name='mysql_thread_id' decs='Return the current thread ID'/>
<function name='mysql_unbuffered_query' decs='Send an SQL query to MySQL, without fetching and buffering the result rows '/>
<const name='MYSQL_CLIENT_COMPRESS'/>
<const name='MYSQL_CLIENT_IGNORE_SPACE'/>
<const name='MYSQL_CLIENT_INTERACTIVE'/>
<const name='MYSQL_ASSOC'/>
<const name='MYSQL_BOTH'/>
<const name='MYSQL_NUM'/>
</package>
<package name='Improved-MySQL-Extension' number='LXV' desc='Improved MySQL Extension'>
<function name='mysqli_affected_rows' decs='Gets the number of affected rows in a previous MySQL operation'/>
<function name='mysqli_autocommit' decs='Turns on or off auto-commiting database modifications'/>
<function name='mysqli_bind_param' decs='Alias for mysqli_stmt_bind_param()' depr='on'/>
<function name='mysqli_bind_result' decs='Alias for mysqli_stmt_bind_result()' depr='on'/>
<function name='mysqli_change_user' decs='Changes the user of the specified database connection'/>
<function name='mysqli_character_set_name' decs='Returns the default character set for the database connection'/>
<function name='mysqli_client_encoding' decs='Alias of mysqli_character_set_name()'/>
<function name='mysqli_close' decs='Closes a previously opened database connection'/>
<function name='mysqli_commit' decs='Commits the current transaction'/>
<function name='mysqli_connect_errno' decs='Returns the error code from last connect call'/>
<function name='mysqli_connect_error' decs='Returns a string description of the last connect error'/>
<function name='mysqli_connect' decs='Open a new connection to the MySQL server'/>
<function name='mysqli_data_seek' decs='Adjusts the result pointer to an arbitary row in the result'/>
<function name='mysqli_debug' decs='Performs debugging operations'/>
<function name='mysqli_disable_reads_from_master' decs=''/>
<function name='mysqli_disable_rpl_parse' decs=''/>
<function name='mysqli_dump_debug_info' decs='Dump debugging information into the log'/>
<function name='mysqli_embedded_connect' decs='Open a connection to an embedded mysql server.'/>
<function name='mysqli_enable_reads_from_master' decs=''/>
<function name='mysqli_enable_rpl_parse' decs=''/>
<function name='mysqli_errno' decs='Returns the error code for the most recent function call'/>
<function name='mysqli_error' decs='Returns a string description of the last error'/>
<function name='mysqli_escape_string' decs='Alias of mysqli_real_escape_string()'/>
<function name='mysqli_execute' decs='Alias for mysqli_stmt_execute()' depr='on'/>
<function name='mysqli_fetch_array' decs='Fetch a result row as an associative, a numeric array, or both.'/>
<function name='mysqli_fetch_assoc' decs='Fetch a result row as an associative array'/>
<function name='mysqli_fetch_field_direct' decs='Fetch meta-data for a single field '/>
<function name='mysqli_fetch_field' decs='Returns the next field in the result set'/>
<function name='mysqli_fetch_fields' decs='Returns an array of objects representing the fields in a result set'/>
<function name='mysqli_fetch_lengths' decs='Returns the lengths of the columns of the current row in the result set'/>
<function name='mysqli_fetch_object' decs='Returns the current row of a result set as an object'/>
<function name='mysqli_fetch_row' decs='Get a result row as an enumerated array'/>
<function name='mysqli_fetch' decs='Alias for mysqli_stmt_fetch()' depr='on'/>
<function name='mysqli_field_count' decs='Returns the number of columns for the most recent query'/>
<function name='mysqli_field_seek' decs='Set result pointer to a specified field offset '/>
<function name='mysqli_field_tell' decs='Get current field offset of a result pointer '/>
<function name='mysqli_free_result' decs='Frees the memory associated with a result'/>
<function name='mysqli_get_client_info' decs='Returns the MySQL client version as a string'/>
<function name='mysqli_get_client_version' decs='Get MySQL client info.'/>
<function name='mysqli_get_host_info' decs='Returns a string representing the type of connection used'/>
<function name='mysqli_get_metadata' decs='Alias for mysqli_stmt_result_metadata()' depr='on'/>
<function name='mysqli_get_proto_info' decs='Returns the version of the MySQL protocol used'/>
<function name='mysqli_get_server_info' decs='Returns the version of the MySQL server'/>
<function name='mysqli_get_server_version' decs='Returns the version of the MySQL server as an integer'/>
<function name='mysqli_info' decs='Retrieves information about the most recently executed query'/>
<function name='mysqli_init' decs='Initializes MySQLi and returns an object for use with mysqli_real_connect '/>
<function name='mysqli_insert_id' decs='Returns the auto generated id used in the last query'/>
<function name='mysqli_kill' decs='Asks the server to kill a MySQL thread'/>
<function name='mysqli_master_query' decs='Enforce execution of a query on the master in a master/slave setup.'/>
<function name='mysqli_more_results' decs='Check if there any more query results from a multi query.'/>
<function name='mysqli_multi_query' decs='Performs a query on the database'/>
<function name='mysqli_next_result' decs='prepare next result from multi_query.'/>
<function name='mysqli_num_fields' decs='Get the number of fields in a result '/>
<function name='mysqli_num_rows' decs='Gets the number of rows in a result '/>
<function name='mysqli_options' decs='set options'/>
<function name='mysqli_param_count' decs='Alias for mysqli_stmt_param_count()' depr='on'/>
<function name='mysqli_ping' decs='Pings a server connection, or tries to reconnect if the connection has gone down. '/>
<function name='mysqli_prepare' decs='Prepare a SQL statement for execution '/>
<function name='mysqli_query' decs='Performs a query on the database'/>
<function name='mysqli_real_connect' decs='Opens a connection to a mysql server'/>
<function name='mysqli_real_escape_string' decs='Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection '/>
<function name='mysqli_real_query' decs='Execute an SQL query'/>
<function name='mysqli_report' decs='enables or disables internal report functions'/>
<function name='mysqli_rollback' decs='Rolls back current transaction'/>
<function name='mysqli_rpl_parse_enabled' decs=''/>
<function name='mysqli_rpl_probe' decs=''/>
<function name='mysqli_rpl_query_type' decs=''/>
<function name='mysqli_select_db' decs='Selects the default database for database queries'/>
<function name='mysqli_send_long_data' decs='Alias for mysqli_stmt_send_long_data()' depr='on'/>
<function name='mysqli_send_query' decs=''/>
<function name='mysqli_server_end' decs=''/>
<function name='mysqli_server_init' decs='Initialize embedded server.'/>
<function name='mysqli_set_opt' decs='Alias of mysqli_options()'/>
<function name='mysqli_sqlstate' decs='Returns the SQLSTATE error from previous MySQL operation.'/>
<function name='mysqli_ssl_set' decs='Used for establishing secure connections using SSL.'/>
<function name='mysqli_stat' decs='Gets the current system status'/>
<function name='mysqli_stmt_affected_rows' decs='Returns the total number of rows changed, deleted, or inserted by the last executed statement '/>
<function name='mysqli_stmt_bind_param' decs='Binds variables to a prepared statement as parameters'/>
<function name='mysqli_stmt_bind_result' decs='Binds variables to a prepared statement for result storage'/>
<function name='mysqli_stmt_close' decs='Closes a prepared statement'/>
<function name='mysqli_stmt_data_seek' decs='Seeks to an arbitray row in statement result set'/>
<function name='mysqli_stmt_errno' decs='Returns the error code for the most recent statement call'/>
<function name='mysqli_stmt_error' decs='Returns a string description for last statement error'/>
<function name='mysqli_stmt_execute' decs='Executes a prepared Query'/>
<function name='mysqli_stmt_fetch' decs='Fetch results from a prepared statement into the bound variables '/>
<function name='mysqli_stmt_init' decs='Initializes a statement and returns an object for use with mysqli_stmt_prepare '/>
<function name='mysqli_stmt_num_rows' decs='Return the number of rows in statements result set.'/>
<function name='mysqli_stmt_param_count' decs='Returns the number of parameter for the given statement'/>
<function name='mysqli_stmt_prepare' decs='Prepare a SQL statement for execution '/>
<function name='mysqli_stmt_result_metadata' decs='returns result set metadata from a prepared statement'/>
<function name='mysqli_stmt_send_long_data' decs='Send data in blocks'/>
<function name='mysqli_stmt_sqlstate' decs='returns SQLSTATE error from previous statement operation'/>
<function name='mysqli_stmt_store_result' decs='Transfers a result set from a prepared statement'/>
<function name='mysqli_store_result' decs='Transfers a result set from the last query'/>
<function name='mysqli_thread_id' decs='Returns the thread ID for the current connection'/>
<function name='mysqli_thread_safe' decs='Returns whether thread safety is given or not'/>
<function name='mysqli_use_result' decs='Initiate a result set retrieval'/>
<function name='mysqli_warning_count' decs='Returns the number of warnings from the last query for the given link'/>
<const name='MYSQLI_READ_DEFAULT_GROUP'/>
<const name='MYSQLI_READ_DEFAULT_FILE'/>
<const name='MYSQLI_OPT_CONNECT_TIMEOUT'/>
<const name='MYSQLI_OPT_LOCAL_INFILE'/>
<const name='MYSQLI_INIT_COMMAND'/>
<const name='MYSQLI_CLIENT_SSL'/>
<const name='MYSQLI_CLIENT_COMPRESS'/>
<const name='MYSQLI_CLIENT_INTERACTIVE'/>
<const name='MYSQLI_CLIENT_IGNORE_SPACE'/>
<const name='MYSQLI_CLIENT_NO_SCHEMA'/>
<const name='MYSQLI_CLIENT_MULTI_QUERIES'/>
<const name='MYSQLI_STORE_RESULT'/>
<const name='MYSQLI_USE_RESULT'/>
<const name='MYSQLI_ASSOC'/>
<const name='MYSQLI_NUM'/>
<const name='MYSQLI_BOTH'/>
<const name='MYSQLI_NOT_NULL_FLAG'/>
<const name='MYSQLI_PRI_KEY_FLAG'/>
<const name='MYSQLI_UNIQUE_KEY_FLAG'/>
<const name='MYSQLI_MULTIPLE_KEY_FLAG'/>
<const name='MYSQLI_BLOB_FLAG'/>
<const name='MYSQLI_UNSIGNED_FLAG'/>
<const name='MYSQLI_ZEROFILL_FLAG'/>
<const name='MYSQLI_AUTO_INCREMENT_FLAG'/>
<const name='MYSQLI_TIMESTAMP_FLAG'/>
<const name='MYSQLI_SET_FLAG'/>
<const name='MYSQLI_NUM_FLAG'/>
<const name='MYSQLI_PART_KEY_FLAG'/>
<const name='MYSQLI_GROUP_FLAG'/>
<const name='MYSQLI_TYPE_DECIMAL'/>
<const name='MYSQLI_TYPE_TINY'/>
<const name='MYSQLI_TYPE_SHORT'/>
<const name='MYSQLI_TYPE_LONG'/>
<const name='MYSQLI_TYPE_FLOAT'/>
<const name='MYSQLI_TYPE_DOUBLE'/>
<const name='MYSQLI_TYPE_NULL'/>
<const name='MYSQLI_TYPE_TIMESTAMP'/>
<const name='MYSQLI_TYPE_LONGLONG'/>
<const name='MYSQLI_TYPE_INT24'/>
<const name='MYSQLI_TYPE_DATE'/>
<const name='MYSQLI_TYPE_TIME'/>
<const name='MYSQLI_TYPE_DATETIME'/>
<const name='MYSQLI_TYPE_YEAR'/>
<const name='MYSQLI_TYPE_NEWDATE'/>
<const name='MYSQLI_TYPE_ENUM'/>
<const name='MYSQLI_TYPE_SET'/>
<const name='MYSQLI_TYPE_TINY_BLOB'/>
<const name='MYSQLI_TYPE_MEDIUM_BLOB'/>
<const name='MYSQLI_TYPE_LONG_BLOB'/>
<const name='MYSQLI_TYPE_BLOB'/>
<const name='MYSQLI_TYPE_STRING'/>
<const name='MYSQLI_TYPE_CHAR'/>
<const name='MYSQLI_TYPE_GEOMETRY'/>
<const name='MYSQLI_NEED_DATA'/>
<const name='MYSQLI_NO_DATA'/>
</package>
<package name='Mohawk-Software-Session-Handler' number='LXVI' desc='Mohawk Software Session Handler Functions'>
<function name='msession_connect' decs='Connect to msession server '/>
<function name='msession_count' decs='Get session count '/>
<function name='msession_create' decs='Create a session '/>
<function name='msession_destroy' decs='Destroy a session '/>
<function name='msession_disconnect' decs='Close connection to msession server '/>
<function name='msession_find' decs='Find value '/>
<function name='msession_get_array' decs='Get array of ... ? '/>
<function name='msession_get' decs='Get value from session '/>
<function name='msession_getdata' decs='Get data ... ? '/>
<function name='msession_inc' decs='Increment value in session '/>
<function name='msession_list' decs='List ... ? '/>
<function name='msession_listvar' decs='List sessions with variable'/>
<function name='msession_lock' decs='Lock a session '/>
<function name='msession_plugin' decs='Call an escape function within the msession personality plugin'/>
<function name='msession_randstr' decs='Get random string '/>
<function name='msession_set_array' decs='Set array of ... '/>
<function name='msession_set' decs='Set value in session '/>
<function name='msession_setdata' decs='Set data ... ?'/>
<function name='msession_timeout' decs='Set/get session timeout '/>
<function name='msession_uniq' decs='Get uniq id '/>
<function name='msession_unlock' decs='Unlock a session '/>
</package>
<package name='muscat' number='LXVII' desc='muscat Functions'>
<function name='muscat_close' decs='Shuts down the muscat session and releases any memory back to PHP.'/>
<function name='muscat_get' decs='Gets a line back from the core muscat API. '/>
<function name='muscat_give' decs='Sends string to the core muscat API'/>
<function name='muscat_setup_net' decs='Creates a new muscat session and returns the handle.'/>
<function name='muscat_setup' decs='Creates a new muscat session and returns the handle.'/>
</package>
<package name='Network' number='LXVIII' desc='Network Functions'>
<function name='checkdnsrr' decs='Check DNS records corresponding to a given Internet host name or IP address '/>
<function name='closelog' decs='Close connection to system logger'/>
<function name='debugger_off' decs='Disable internal PHP debugger (PHP 3)'/>
<function name='debugger_on' decs='Enable internal PHP debugger (PHP 3)'/>
<function name='define_syslog_variables' decs='Initializes all syslog related constants'/>
<function name='dns_check_record' decs='Synonym for checkdnsrr()'/>
<function name='dns_get_mx' decs='Synonym for getmxrr()'/>
<function name='dns_get_record' decs='Fetch DNS Resource Records associated with a hostname '/>
<function name='fsockopen' decs='Open Internet or Unix domain socket connection '/>
<function name='gethostbyaddr' decs='Get the Internet host name corresponding to a given IP address '/>
<function name='gethostbyname' decs='Get the IP address corresponding to a given Internet host name '/>
<function name='gethostbynamel' decs='Get a list of IP addresses corresponding to a given Internet host name '/>
<function name='getmxrr' decs='Get MX records corresponding to a given Internet host name '/>
<function name='getprotobyname' decs='Get protocol number associated with protocol name '/>
<function name='getprotobynumber' decs='Get protocol name associated with protocol number '/>
<function name='getservbyname' decs='Get port number associated with an Internet service and protocol '/>
<function name='getservbyport' decs='Get Internet service which corresponds to port and protocol '/>
<function name='ip2long' decs='Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address. '/>
<function name='long2ip' decs='Converts an (IPv4) Internet network address into a string in Internet standard dotted format '/>
<function name='openlog' decs='Open connection to system logger'/>
<function name='pfsockopen' decs='Open persistent Internet or Unix domain socket connection '/>
<function name='socket_get_status' decs='Alias of stream_get_meta_data() '/>
<function name='socket_set_blocking' decs='Alias of stream_set_blocking()' depr='on'/>
<function name='set_socket_blocking' decs='' depr='on'/>
<function name='socket_set_timeout' decs='Alias of stream_set_timeout()'/>
<function name='set_socket_timeout' decs='' depr='on'/>
<function name='syslog' decs='Generate a system log message'/>
<const name='LOG_CONS'/>
<const name='LOG_NDELAY'/>
<const name='LOG_ODELAY'/>
<const name='LOG_NOWAIT'/>
<const name='LOG_PERROR'/>
<const name='LOG_PID'/>
<const name='LOG_AUTH'/>
<const name='LOG_AUTHPRIV'/>
<const name='LOG_CRON'/>
<const name='LOG_DAEMON'/>
<const name='LOG_KERN'/>
<const name='LOG_LOCAL0'/>
<const name='LOG_LOCAL1'/>
<const name='LOG_LOCAL2'/>
<const name='LOG_LOCAL3'/>
<const name='LOG_LOCAL4'/>
<const name='LOG_LOCAL5'/>
<const name='LOG_LOCAL6'/>
<const name='LOG_LOCAL7'/>
<const name='LOG_LPR'/>
<const name='LOG_MAIL'/>
<const name='LOG_NEWS'/>
<const name='LOG_SYSLOG'/>
<const name='LOG_USER'/>
<const name='LOG_UUCP'/>
<const name='LOG_EMERG'/>
<const name='LOG_ALERT'/>
<const name='LOG_CRIT'/>
<const name='LOG_ERR'/>
<const name='LOG_WARNING'/>
<const name='LOG_NOTICE'/>
<const name='LOG_INFO'/>
<const name='LOG_DEBUG'/>
<const name='DNS_A'/>
<const name='DNS_MX'/>
<const name='DNS_CNAME'/>
<const name='DNS_NS'/>
<const name='DNS_PTR'/>
<const name='DNS_HINFO'/>
<const name='DNS_SOA'/>
<const name='DNS_TXT'/>
<const name='DNS_ANY'/>
<const name='DNS_AAAA'/>
<const name='DNS_ALL'/>
</package>
<package name='Ncurses-Terminal-Screen-Control' number='LXIX' desc='Ncurses Terminal Screen Control Functions'>
<function name='ncurses_addch' decs='Add character at current position and advance cursor '/>
<function name='ncurses_addchnstr' decs='Add attributed string with specified length at current position '/>
<function name='ncurses_addchstr' decs='Add attributed string at current position '/>
<function name='ncurses_addnstr' decs='Add string with specified length at current position '/>
<function name='ncurses_addstr' decs='Output text at current position '/>
<function name='ncurses_assume_default_colors' decs='Define default colors for color 0 '/>
<function name='ncurses_attroff' decs='Turn off the given attributes '/>
<function name='ncurses_attron' decs='Turn on the given attributes '/>
<function name='ncurses_attrset' decs='Set given attributes '/>
<function name='ncurses_baudrate' decs='Returns baudrate of terminal '/>
<function name='ncurses_beep' decs='Let the terminal beep '/>
<function name='ncurses_bkgd' decs='Set background property for terminal screen '/>
<function name='ncurses_bkgdset' decs='Control screen background '/>
<function name='ncurses_border' decs='Draw a border around the screen using attributed characters'/>
<function name='ncurses_bottom_panel' decs='Moves a visible panel to the bottom of the stack '/>
<function name='ncurses_can_change_color' decs='Check if we can change terminals colors '/>
<function name='ncurses_cbreak' decs='Switch of input buffering '/>
<function name='ncurses_clear' decs='Clear screen '/>
<function name='ncurses_clrtobot' decs='Clear screen from current position to bottom '/>
<function name='ncurses_clrtoeol' decs='Clear screen from current position to end of line '/>
<function name='ncurses_color_content' decs='Gets the RGB value for color '/>
<function name='ncurses_color_set' decs='Set fore- and background color '/>
<function name='ncurses_curs_set' decs='Set cursor state '/>
<function name='ncurses_def_prog_mode' decs='Saves terminals (program) mode'/>
<function name='ncurses_def_shell_mode' decs='Saves terminals (shell) mode'/>
<function name='ncurses_define_key' decs='Define a keycode '/>
<function name='ncurses_del_panel' decs='Remove panel from the stack and delete it (but not the associated window) '/>
<function name='ncurses_delay_output' decs='Delay output on terminal using padding characters '/>
<function name='ncurses_delch' decs='Delete character at current position, move rest of line left '/>
<function name='ncurses_deleteln' decs='Delete line at current position, move rest of screen up '/>
<function name='ncurses_delwin' decs='Delete a ncurses window '/>
<function name='ncurses_doupdate' decs='Write all prepared refreshes to terminal '/>
<function name='ncurses_echo' decs='Activate keyboard input echo '/>
<function name='ncurses_echochar' decs='Single character output including refresh '/>
<function name='ncurses_end' decs='Stop using ncurses, clean up the screen '/>
<function name='ncurses_erase' decs='Erase terminal screen '/>
<function name='ncurses_erasechar' decs='Returns current erase character '/>
<function name='ncurses_filter' decs=''/>
<function name='ncurses_flash' decs='Flash terminal screen (visual bell) '/>
<function name='ncurses_flushinp' decs='Flush keyboard input buffer '/>
<function name='ncurses_getch' decs='Read a character from keyboard '/>
<function name='ncurses_getmaxyx' decs='Returns the size of a window'/>
<function name='ncurses_getmouse' decs='Reads mouse event'/>
<function name='ncurses_getyx' decs='Returns the current cursor position for a window '/>
<function name='ncurses_halfdelay' decs='Put terminal into halfdelay mode '/>
<function name='ncurses_has_colors' decs='Check if terminal has colors '/>
<function name='ncurses_has_ic' decs='Check for insert- and delete-capabilities '/>
<function name='ncurses_has_il' decs='Check for line insert- and delete-capabilities '/>
<function name='ncurses_has_key' decs='Check for presence of a function key on terminal keyboard '/>
<function name='ncurses_hide_panel' decs='Remove panel from the stack, making it invisible '/>
<function name='ncurses_hline' decs='Draw a horizontal line at current position using an attributed character and max. n characters long '/>
<function name='ncurses_inch' decs='Get character and attribute at current position '/>
<function name='ncurses_init_color' decs='Set new RGB value for color '/>
<function name='ncurses_init_pair' decs='Allocate a color pair '/>
<function name='ncurses_init' decs='Initialize ncurses'/>
<function name='ncurses_insch' decs='Insert character moving rest of line including character at current position '/>
<function name='ncurses_insdelln' decs='Insert lines before current line scrolling down (negative numbers delete and scroll up) '/>
<function name='ncurses_insertln' decs='Insert a line, move rest of screen down '/>
<function name='ncurses_insstr' decs='Insert string at current position, moving rest of line right '/>
<function name='ncurses_instr' decs='Reads string from terminal screen '/>
<function name='ncurses_isendwin' decs='Ncurses is in endwin mode, normal screen output may be performed '/>
<function name='ncurses_keyok' decs='Enable or disable a keycode '/>
<function name='ncurses_keypad' decs='Turns keypad on or off '/>
<function name='ncurses_killchar' decs='Returns current line kill character '/>
<function name='ncurses_longname' decs='Returns terminals description'/>
<function name='ncurses_meta' decs='Enables/Disable 8-bit meta key information '/>
<function name='ncurses_mouse_trafo' decs='Transforms coordinates '/>
<function name='ncurses_mouseinterval' decs='Set timeout for mouse button clicks '/>
<function name='ncurses_mousemask' decs='Sets mouse options'/>
<function name='ncurses_move_panel' decs='Moves a panel so that its upper-left corner is at [startx, starty] '/>
<function name='ncurses_move' decs='Move output position '/>
<function name='ncurses_mvaddch' decs='Move current position and add character '/>
<function name='ncurses_mvaddchnstr' decs='Move position and add attributed string with specified length '/>
<function name='ncurses_mvaddchstr' decs='Move position and add attributed string '/>
<function name='ncurses_mvaddnstr' decs='Move position and add string with specified length '/>
<function name='ncurses_mvaddstr' decs='Move position and add string '/>
<function name='ncurses_mvcur' decs='Move cursor immediately '/>
<function name='ncurses_mvdelch' decs='Move position and delete character, shift rest of line left '/>
<function name='ncurses_mvgetch' decs='Move position and get character at new position '/>
<function name='ncurses_mvhline' decs='Set new position and draw a horizontal line using an attributed character and max. n characters long '/>
<function name='ncurses_mvinch' decs='Move position and get attributed character at new position '/>
<function name='ncurses_mvvline' decs='Set new position and draw a vertical line using an attributed character and max. n characters long '/>
<function name='ncurses_mvwaddstr' decs='Add string at new position in window '/>
<function name='ncurses_napms' decs='Sleep '/>
<function name='ncurses_new_panel' decs='Create a new panel and associate it with window '/>
<function name='ncurses_newpad' decs='Creates a new pad (window) '/>
<function name='ncurses_newwin' decs='Create a new window'/>
<function name='ncurses_nl' decs='Translate newline and carriage return / line feed '/>
<function name='ncurses_nocbreak' decs='Switch terminal to cooked mode '/>
<function name='ncurses_noecho' decs='Switch off keyboard input echo '/>
<function name='ncurses_nonl' decs='Do not translate newline and carriage return / line feed '/>
<function name='ncurses_noqiflush' decs='Do not flush on signal characters'/>
<function name='ncurses_noraw' decs='Switch terminal out of raw mode '/>
<function name='ncurses_pair_content' decs='Gets the RGB value for color '/>
<function name='ncurses_panel_above' decs='Returns the panel above panel. If panel is null, returns the bottom panel in the stack '/>
<function name='ncurses_panel_below' decs='Returns the panel below panel. If panel is null, returns the top panel in the stack '/>
<function name='ncurses_panel_window' decs='Returns the window associated with panel '/>
<function name='ncurses_pnoutrefresh' decs='Copies a region from a pad into the virtual screen '/>
<function name='ncurses_prefresh' decs='Copies a region from a pad into the virtual screen '/>
<function name='ncurses_putp' decs=''/>
<function name='ncurses_qiflush' decs='Flush on signal characters '/>
<function name='ncurses_raw' decs='Switch terminal into raw mode '/>
<function name='ncurses_refresh' decs='Refresh screen '/>
<function name='ncurses_replace_panel' decs='Replaces the window associated with panel '/>
<function name='ncurses_reset_prog_mode' decs='Resets the prog mode saved by def_prog_mode '/>
<function name='ncurses_reset_shell_mode' decs='Resets the shell mode saved by def_shell_mode '/>
<function name='ncurses_resetty' decs='Restores saved terminal state '/>
<function name='ncurses_savetty' decs='Saves terminal state '/>
<function name='ncurses_scr_dump' decs='Dump screen content to file '/>
<function name='ncurses_scr_init' decs='Initialize screen from file dump '/>
<function name='ncurses_scr_restore' decs='Restore screen from file dump '/>
<function name='ncurses_scr_set' decs='Inherit screen from file dump '/>
<function name='ncurses_scrl' decs='Scroll window content up or down without changing current position '/>
<function name='ncurses_show_panel' decs='Places an invisible panel on top of the stack, making it visible '/>
<function name='ncurses_slk_attr' decs='Returns current soft label key attribute'/>
<function name='ncurses_slk_attroff' decs=''/>
<function name='ncurses_slk_attron' decs=''/>
<function name='ncurses_slk_attrset' decs=''/>
<function name='ncurses_slk_clear' decs='Clears soft labels from screen'/>
<function name='ncurses_slk_color' decs='Sets color for soft label keys'/>
<function name='ncurses_slk_init' decs='Initializes soft label key functions'/>
<function name='ncurses_slk_noutrefresh' decs='Copies soft label keys to virtual screen'/>
<function name='ncurses_slk_refresh' decs='Copies soft label keys to screen'/>
<function name='ncurses_slk_restore' decs='Restores soft label keys'/>
<function name='ncurses_slk_set' decs='Sets function key labels '/>
<function name='ncurses_slk_touch' decs='Forces output when ncurses_slk_noutrefresh is performed'/>
<function name='ncurses_standend' decs='Stop using &apos;standout&apos; attribute '/>
<function name='ncurses_standout' decs='Start using &apos;standout&apos; attribute '/>
<function name='ncurses_start_color' decs='Start using colors '/>
<function name='ncurses_termattrs' decs='Returns a logical OR of all attribute flags supported by terminal '/>
<function name='ncurses_termname' decs='Returns terminals (short)-name'/>
<function name='ncurses_timeout' decs='Set timeout for special key sequences '/>
<function name='ncurses_top_panel' decs='Moves a visible panel to the top of the stack '/>
<function name='ncurses_typeahead' decs='Specify different filedescriptor for typeahead checking '/>
<function name='ncurses_ungetch' decs='Put a character back into the input stream '/>
<function name='ncurses_ungetmouse' decs='Pushes mouse event to queue'/>
<function name='ncurses_update_panels' decs='Refreshes the virtual screen to reflect the relations between panels in the stack. '/>
<function name='ncurses_use_default_colors' decs='Assign terminal default colors to color id -1 '/>
<function name='ncurses_use_env' decs='Control use of environment information about terminal size '/>
<function name='ncurses_use_extended_names' decs='Control use of extended names in terminfo descriptions '/>
<function name='ncurses_vidattr' decs=''/>
<function name='ncurses_vline' decs='Draw a vertical line at current position using an attributed character and max. n characters long '/>
<function name='ncurses_waddch' decs='Adds character at current position in a window and advance cursor '/>
<function name='ncurses_waddstr' decs='Outputs text at current postion in window '/>
<function name='ncurses_wattroff' decs='Turns off attributes for a window '/>
<function name='ncurses_wattron' decs='Turns on attributes for a window '/>
<function name='ncurses_wattrset' decs='Set the attributes for a window '/>
<function name='ncurses_wborder' decs='Draws a border around the window using attributed characters'/>
<function name='ncurses_wclear' decs='Clears window '/>
<function name='ncurses_wcolor_set' decs='Sets windows color pairings '/>
<function name='ncurses_werase' decs='Erase window contents '/>
<function name='ncurses_wgetch' decs='Reads a character from keyboard (window) '/>
<function name='ncurses_whline' decs='Draws a horizontal line in a window at current position using an attributed character and max. n characters long '/>
<function name='ncurses_wmouse_trafo' decs='Transforms window/stdscr coordinates '/>
<function name='ncurses_wmove' decs='Moves windows output position '/>
<function name='ncurses_wnoutrefresh' decs='Copies window to virtual screen '/>
<function name='ncurses_wrefresh' decs='Refresh window on terminal screen '/>
<function name='ncurses_wstandend' decs='End standout mode for a window '/>
<function name='ncurses_wstandout' decs='Enter standout mode for a window '/>
<function name='ncurses_wvline' decs='Draws a vertical line in a window at current position using an attributed character and max. n characters long '/>
<const name='NCURSES_COLOR_BLACK'/>
<const name='NCURSES_COLOR_WHITE'/>
<const name='NCURSES_COLOR_RED'/>
<const name='NCURSES_COLOR_GREEN'/>
<const name='NCURSES_COLOR_YELLOW'/>
<const name='NCURSES_COLOR_BLUE'/>
<const name='NCURSES_COLOR_CYAN'/>
<const name='NCURSES_COLOR_MAGENTA'/>
<const name='NCURSES_KEY_F0'/>
<const name='NCURSES_KEY_F1'/>
<const name='NCURSES_KEY_F2'/>
<const name='NCURSES_KEY_F3'/>
<const name='NCURSES_KEY_F4'/>
<const name='NCURSES_KEY_F5'/>
<const name='NCURSES_KEY_F6'/>
<const name='NCURSES_KEY_F7'/>
<const name='NCURSES_KEY_F8'/>
<const name='NCURSES_KEY_F9'/>
<const name='NCURSES_KEY_F10'/>
<const name='NCURSES_KEY_F11'/>
<const name='NCURSES_KEY_F12'/>
<const name='NCURSES_KEY_F13'/>
<const name='NCURSES_KEY_F14'/>
<const name='NCURSES_KEY_F15'/>
<const name='NCURSES_KEY_F16'/>
<const name='NCURSES_KEY_F17'/>
<const name='NCURSES_KEY_F18'/>
<const name='NCURSES_KEY_F19'/>
<const name='NCURSES_KEY_F20'/>
<const name='NCURSES_KEY_F21'/>
<const name='NCURSES_KEY_F22'/>
<const name='NCURSES_KEY_F23'/>
<const name='NCURSES_KEY_F24'/>
<const name='NCURSES_KEY_F25'/>
<const name='NCURSES_KEY_F26'/>
<const name='NCURSES_KEY_F27'/>
<const name='NCURSES_KEY_F28'/>
<const name='NCURSES_KEY_F29'/>
<const name='NCURSES_KEY_F30'/>
<const name='NCURSES_KEY_F31'/>
<const name='NCURSES_KEY_F32'/>
<const name='NCURSES_KEY_F33'/>
<const name='NCURSES_KEY_F34'/>
<const name='NCURSES_KEY_F35'/>
<const name='NCURSES_KEY_F36'/>
<const name='NCURSES_KEY_F37'/>
<const name='NCURSES_KEY_F38'/>
<const name='NCURSES_KEY_F39'/>
<const name='NCURSES_KEY_F40'/>
<const name='NCURSES_KEY_F41'/>
<const name='NCURSES_KEY_F42'/>
<const name='NCURSES_KEY_F43'/>
<const name='NCURSES_KEY_F44'/>
<const name='NCURSES_KEY_F45'/>
<const name='NCURSES_KEY_F46'/>
<const name='NCURSES_KEY_F47'/>
<const name='NCURSES_KEY_F48'/>
<const name='NCURSES_KEY_F49'/>
<const name='NCURSES_KEY_F50'/>
<const name='NCURSES_KEY_F51'/>
<const name='NCURSES_KEY_F52'/>
<const name='NCURSES_KEY_F53'/>
<const name='NCURSES_KEY_F54'/>
<const name='NCURSES_KEY_F55'/>
<const name='NCURSES_KEY_F56'/>
<const name='NCURSES_KEY_F57'/>
<const name='NCURSES_KEY_F58'/>
<const name='NCURSES_KEY_F59'/>
<const name='NCURSES_KEY_F60'/>
<const name='NCURSES_KEY_F61'/>
<const name='NCURSES_KEY_F62'/>
<const name='NCURSES_KEY_F63'/>
<const name='NCURSES_KEY_F64'/>
<const name='NCURSES_KEY_DOWN'/>
<const name='NCURSES_KEY_UP'/>
<const name='NCURSES_KEY_LEFT'/>
<const name='NCURSES_KEY_RIGHT'/>
<const name='NCURSES_KEY_HOME'/>
<const name='NCURSES_KEY_BACKSPACE'/>
<const name='NCURSES_KEY_DL'/>
<const name='NCURSES_KEY_IL'/>
<const name='NCURSES_KEY_DC'/>
<const name='NCURSES_KEY_IC'/>
<const name='NCURSES_KEY_EIC'/>
<const name='NCURSES_KEY_CLEAR'/>
<const name='NCURSES_KEY_EOS'/>
<const name='NCURSES_KEY_EOL'/>
<const name='NCURSES_KEY_SF'/>
<const name='NCURSES_KEY_SR'/>
<const name='NCURSES_KEY_NPAGE'/>
<const name='NCURSES_KEY_PPAGE'/>
<const name='NCURSES_KEY_STAB'/>
<const name='NCURSES_KEY_CTAB'/>
<const name='NCURSES_KEY_CATAB'/>
<const name='NCURSES_KEY_SRESET'/>
<const name='NCURSES_KEY_RESET'/>
<const name='NCURSES_KEY_PRINT'/>
<const name='NCURSES_KEY_LL'/>
<const name='NCURSES_KEY_A1'/>
<const name='NCURSES_KEY_A3'/>
<const name='NCURSES_KEY_B2'/>
<const name='NCURSES_KEY_C1'/>
<const name='NCURSES_KEY_C3'/>
<const name='NCURSES_KEY_BTAB'/>
<const name='NCURSES_KEY_BEG'/>
<const name='NCURSES_KEY_CANCEL'/>
<const name='NCURSES_KEY_CLOSE'/>
<const name='NCURSES_KEY_COMMAND'/>
<const name='NCURSES_KEY_COPY'/>
<const name='NCURSES_KEY_CREATE'/>
<const name='NCURSES_KEY_END'/>
<const name='NCURSES_KEY_EXIT'/>
<const name='NCURSES_KEY_FIND'/>
<const name='NCURSES_KEY_HELP'/>
<const name='NCURSES_KEY_MARK'/>
<const name='NCURSES_KEY_MESSAGE'/>
<const name='NCURSES_KEY_MOVE'/>
<const name='NCURSES_KEY_NEXT'/>
<const name='NCURSES_KEY_OPEN'/>
<const name='NCURSES_KEY_OPTIONS'/>
<const name='NCURSES_KEY_PREVIOUS'/>
<const name='NCURSES_KEY_REDO'/>
<const name='NCURSES_KEY_REFERENCE'/>
<const name='NCURSES_KEY_REFRESH'/>
<const name='NCURSES_KEY_REPLACE'/>
<const name='NCURSES_KEY_RESTART'/>
<const name='NCURSES_KEY_RESUME'/>
<const name='NCURSES_KEY_SAVE'/>
<const name='NCURSES_KEY_SBEG'/>
<const name='NCURSES_KEY_SCANCEL'/>
<const name='NCURSES_KEY_SCOMMAND'/>
<const name='NCURSES_KEY_SCOPY'/>
<const name='NCURSES_KEY_SCREATE'/>
<const name='NCURSES_KEY_SDC'/>
<const name='NCURSES_KEY_SDL'/>
<const name='NCURSES_KEY_SELECT'/>
<const name='NCURSES_KEY_SEND'/>
<const name='NCURSES_KEY_SEOL'/>
<const name='NCURSES_KEY_SEXIT'/>
<const name='NCURSES_KEY_SFIND'/>
<const name='NCURSES_KEY_SHELP'/>
<const name='NCURSES_KEY_SHOME'/>
<const name='NCURSES_KEY_SIC'/>
<const name='NCURSES_KEY_SLEFT'/>
<const name='NCURSES_KEY_SMESSAGE'/>
<const name='NCURSES_KEY_SMOVE'/>
<const name='NCURSES_KEY_SNEXT'/>
<const name='NCURSES_KEY_SOPTIONS'/>
<const name='NCURSES_KEY_SPREVIOUS'/>
<const name='NCURSES_KEY_SPRINT'/>
<const name='NCURSES_KEY_SREDO'/>
<const name='NCURSES_KEY_SREPLACE'/>
<const name='NCURSES_KEY_SRIGHT'/>
<const name='NCURSES_KEY_SRSUME'/>
<const name='NCURSES_KEY_SSAVE'/>
<const name='NCURSES_KEY_SSUSPEND'/>
<const name='NCURSES_KEY_UNDO'/>
<const name='NCURSES_KEY_MOUSE'/>
<const name='NCURSES_KEY_MAX'/>
<const name='NCURSES_BUTTON1_RELEASED'/>
<const name='NCURSES_BUTTON2_RELEASED'/>
<const name='NCURSES_BUTTON3_RELEASED'/>
<const name='NCURSES_BUTTON4_RELEASED'/>
<const name='NCURSES_BUTTON1_PRESSED'/>
<const name='NCURSES_BUTTON2_PRESSED'/>
<const name='NCURSES_BUTTON3_PRESSED'/>
<const name='NCURSES_BUTTON4_PRESSED'/>
<const name='NCURSES_BUTTON1_CLICKED'/>
<const name='NCURSES_BUTTON2_CLICKED'/>
<const name='NCURSES_BUTTON3_CLICKED'/>
<const name='NCURSES_BUTTON4_CLICKED'/>
<const name='NCURSES_BUTTON1_DOUBLE_CLICKED'/>
<const name='NCURSES_BUTTON2_DOUBLE_CLICKED'/>
<const name='NCURSES_BUTTON3_DOUBLE_CLICKED'/>
<const name='NCURSES_BUTTON4_DOUBLE_CLICKED'/>
<const name='NCURSES_BUTTON1_TRIPLE_CLICKED'/>
<const name='NCURSES_BUTTON2_TRIPLE_CLICKED'/>
<const name='NCURSES_BUTTON3_TRIPLE_CLICKED'/>
<const name='NCURSES_BUTTON4_TRIPLE_CLICKED'/>
<const name='NCURSES_BUTTON_CTRL'/>
<const name='NCURSES_BUTTON_SHIFT'/>
<const name='NCURSES_BUTTON_ALT'/>
<const name='NCURSES_ALL_MOUSE_EVENTS'/>
<const name='NCURSES_REPORT_MOUSE_POSITION'/>
</package>
<package name='Lotus-Notes' number='LXX' desc='Lotus Notes Functions'>
<function name='notes_body' decs='Open the message msg_number in the specified mailbox on the specified server (leave serv'/>
<function name='notes_copy_db' decs='Create a note using form form_name '/>
<function name='notes_create_db' decs='Create a Lotus Notes database '/>
<function name='notes_create_note' decs='Create a note using form form_name '/>
<function name='notes_drop_db' decs='Drop a Lotus Notes database '/>
<function name='notes_find_note' decs='Returns a note id found in database_name. Specify the name of the note. Leaving type bla'/>
<function name='notes_header_info' decs='Open the message msg_number in the specified mailbox on the specified server (leave serv'/>
<function name='notes_list_msgs' decs='Returns the notes from a selected database_name'/>
<function name='notes_mark_read' decs='Mark a note_id as read for the User user_name'/>
<function name='notes_mark_unread' decs='Mark a note_id as unread for the User user_name'/>
<function name='notes_nav_create' decs='Create a navigator name, in database_name '/>
<function name='notes_search' decs='Find notes that match keywords in database_name'/>
<function name='notes_unread' decs='Returns the unread note id&apos;s for the current User user_name'/>
<function name='notes_version' decs='Get the version Lotus Notes '/>
</package>
<package name='NSAPI-specific' number='LXXI' desc='NSAPI-specific Functions'>
<function name='nsapi_request_headers' decs='Fetch all HTTP request headers'/>
<function name='nsapi_response_headers' decs='Fetch all HTTP response headers '/>
<function name='nsapi_virtual' decs='Perform an NSAPI sub-request'/>
</package>
<package name='Unified-ODBC' number='LXXII' desc='Unified ODBC Functions'>
<function name='odbc_autocommit' decs='Toggle autocommit behaviour'/>
<function name='odbc_binmode' decs='Handling of binary column data'/>
<function name='odbc_close_all' decs='Close all ODBC connections'/>
<function name='odbc_close' decs='Close an ODBC connection'/>
<function name='odbc_columnprivileges' decs='Returns a result identifier that can be used to fetch a list of columns and associated privileges '/>
<function name='odbc_columns' decs='Lists the column names in specified tables. Returns a result identifier containing the information. '/>
<function name='odbc_commit' decs='Commit an ODBC transaction'/>
<function name='odbc_connect' decs='Connect to a datasource'/>
<function name='odbc_cursor' decs='Get cursorname'/>
<function name='odbc_data_source' decs='Returns information about a current connection'/>
<function name='odbc_do' decs='Synonym for odbc_exec()'/>
<function name='odbc_error' decs='Get the last error code'/>
<function name='odbc_errormsg' decs='Get the last error message'/>
<function name='odbc_exec' decs='Prepare and execute a SQL statement'/>
<function name='odbc_execute' decs='Execute a prepared statement'/>
<function name='odbc_fetch_array' decs='Fetch a result row as an associative array '/>
<function name='odbc_fetch_into' decs='Fetch one result row into array'/>
<function name='odbc_fetch_object' decs='Fetch a result row as an object '/>
<function name='odbc_fetch_row' decs='Fetch a row'/>
<function name='odbc_field_len' decs='Get the length (precision) of a field'/>
<function name='odbc_field_name' decs='Get the columnname'/>
<function name='odbc_field_num' decs='Return column number'/>
<function name='odbc_field_precision' decs='Synonym for odbc_field_len()'/>
<function name='odbc_field_scale' decs='Get the scale of a field'/>
<function name='odbc_field_type' decs='Datatype of a field'/>
<function name='odbc_foreignkeys' decs='Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table '/>
<function name='odbc_free_result' decs='Free resources associated with a result'/>
<function name='odbc_gettypeinfo' decs='Returns a result identifier containing information about data types supported by the data source. '/>
<function name='odbc_longreadlen' decs='Handling of LONG columns'/>
<function name='odbc_next_result' decs='Checks if multiple results are available '/>
<function name='odbc_num_fields' decs='Number of columns in a result'/>
<function name='odbc_num_rows' decs='Number of rows in a result'/>
<function name='odbc_pconnect' decs='Open a persistent database connection'/>
<function name='odbc_prepare' decs='Prepares a statement for execution'/>
<function name='odbc_primarykeys' decs='Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table '/>
<function name='odbc_procedurecolumns' decs='Retrieve information about parameters to procedures '/>
<function name='odbc_procedures' decs='Get the list of procedures stored in a specific data source. Returns a result identifier containing the information. '/>
<function name='odbc_result_all' decs='Print result as HTML table'/>
<function name='odbc_result' decs='Get result data'/>
<function name='odbc_rollback' decs='Rollback a transaction'/>
<function name='odbc_setoption' decs='Adjust ODBC settings. Returns FALSE if an error occurs, otherwise TRUE. '/>
<function name='odbc_specialcolumns' decs='Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction '/>
<function name='odbc_statistics' decs='Retrieve statistics about a table'/>
<function name='odbc_tableprivileges' decs='Lists tables and the privileges associated with each table '/>
<function name='odbc_tables' decs='Get the list of table names stored in a specific data source. Returns a result identifier containing the information. '/>
<const name='ODBC_TYPE'/>
<const name='ODBC_BINMODE_PASSTHRU'/>
<const name='ODBC_BINMODE_RETURN'/>
<const name='ODBC_BINMODE_CONVERT'/>
<const name='SQL_ODBC_CURSORS'/>
<const name='SQL_CUR_USE_DRIVER'/>
<const name='SQL_CUR_USE_IF_NEEDED'/>
<const name='SQL_CUR_USE_ODBC'/>
<const name='SQL_CONCURRENCY'/>
<const name='SQL_CONCUR_READ_ONLY'/>
<const name='SQL_CONCUR_LOCK'/>
<const name='SQL_CONCUR_ROWVER'/>
<const name='SQL_CONCUR_VALUES'/>
<const name='SQL_CURSOR_TYPE'/>
<const name='SQL_CURSOR_FORWARD_ONLY'/>
<const name='SQL_CURSOR_KEYSET_DRIVEN'/>
<const name='SQL_CURSOR_DYNAMIC'/>
<const name='SQL_CURSOR_STATIC'/>
<const name='SQL_KEYSET_SIZE'/>
<const name='SQL_CHAR'/>
<const name='SQL_VARCHAR'/>
<const name='SQL_LONGVARCHAR'/>
<const name='SQL_DECIMAL'/>
<const name='SQL_NUMERIC'/>
<const name='SQL_BIT'/>
<const name='SQL_TINYINT'/>
<const name='SQL_SMALLINT'/>
<const name='SQL_INTEGER'/>
<const name='SQL_BIGINT'/>
<const name='SQL_REAL'/>
<const name='SQL_FLOAT'/>
<const name='SQL_DOUBLE'/>
<const name='SQL_BINARY'/>
<const name='SQL_VARBINARY'/>
<const name='SQL_LONGVARBINARY'/>
<const name='SQL_DATE'/>
<const name='SQL_TIME'/>
<const name='SQL_TIMESTAMP'/>
<const name='SQL_TYPE_DATE'/>
<const name='SQL_TYPE_TIME'/>
<const name='SQL_TYPE_TIMESTAMP'/>
<const name='SQL_BEST_ROWID'/>
<const name='SQL_ROWVER'/>
<const name='SQL_SCOPE_CURROW'/>
<const name='SQL_SCOPE_TRANSACTION'/>
<const name='SQL_SCOPE_SESSION'/>
<const name='SQL_NO_NULLS'/>
<const name='SQL_NULLABLE'/>
<const name='SQL_INDEX_UNIQUE'/>
<const name='SQL_INDEX_ALL'/>
<const name='SQL_ENSURE'/>
<const name='SQL_QUICK'/>
</package>
<package name='Object-Aggregation-Composition' number='LXXIII' desc='Object Aggregation/Composition Functions'>
<function name='aggregate_info' decs='Returns an associative array of the methods and properties from each class that has been aggregated to the object. '/>
<function name='aggregate_methods_by_list' decs='Selective dynamic class methods aggregation to an object '/>
<function name='aggregate_methods_by_regexp' decs='Selective class methods aggregation to an object using a regular expression '/>
<function name='aggregate_methods' decs='Dynamic class and object aggregation of methods '/>
<function name='aggregate_properties_by_list' decs='Selective dynamic class properties aggregation to an object '/>
<function name='aggregate_properties_by_regexp' decs='Selective class properties aggregation to an object using a regular expression '/>
<function name='aggregate_properties' decs='Dynamic aggregation of class properties to an object '/>
<function name='aggregate' decs='Dynamic class and object aggregation of methods and properties '/>
<function name='aggregation_info' decs='Alias of aggregate_info()'/>
<function name='deaggregate' decs='Removes the aggregated methods and properties from an object '/>
</package>
<package name='Oracle-8-new' number='LXXIV' desc='Oracle 8 new Functions'>
<function name='oci_bind_by_name' decs='Binds the PHP variable to the Oracle placeholder '/>
<function name='oci_cancel' decs='Cancels reading from cursor'/>
<function name='oci_close' decs='Closes Oracle connection'/>
<method class='collection' call='dynamic' name='append' decs='Appends an object to the collection'/>
<method class='collection' call='dynamic' name='assign' decs='Assigns a value to the collection from another existing collection'/>
<method class='collection' call='dynamic' name='assignElem' decs='Assigns a value to the element of the collection'/>
<method class='collection' call='dynamic' name='getElem' decs='Returns value of the element'/>
<method class='collection' call='dynamic' name='max' decs='Gets the maximum number of elements in the collection'/>
<method class='collection' call='dynamic' name='size' decs='Returns size of the collection'/>
<method class='collection' call='dynamic' name='trim' decs='Trims elements from the end of the collection'/>
<function name='oci_commit' decs='Commits outstanding statements'/>
<function name='oci_connect' decs='Establishes a connection to Oracle server'/>
<function name='oci_define_by_name' decs='Uses a PHP variable for the define-step during a SELECT '/>
<function name='oci_error' decs='Returns the last error found'/>
<function name='oci_execute' decs='Executes a statement'/>
<function name='oci_fetch_all' decs='Fetches all rows of result data into an array'/>
<function name='oci_fetch_array' decs='Returns the next row from the result data as an associative or numeric array, or both '/>
<function name='oci_fetch_assoc' decs='Returns the next row from the result data as an associative array'/>
<function name='oci_fetch_object' decs='Returns the next row from the result data as an object'/>
<function name='oci_fetch_row' decs='Returns the next row from the result data as a numeric array'/>
<function name='oci_fetch' decs='Fetches the next row into result-buffer'/>
<function name='oci_field_is_null' decs='Checks if the field is NULL'/>
<function name='oci_field_name' decs='Returns the name of a field from the statement'/>
<function name='oci_field_precision' decs='Tell the precision of a field'/>
<function name='oci_field_scale' decs='Tell the scale of the field'/>
<function name='oci_field_size' decs='Returns field&apos;s size'/>
<function name='oci_field_type_raw' decs='Tell the raw Oracle data type of the field'/>
<function name='oci_field_type' decs='Returns field&apos;s data type'/>
<method class='collection' call='dynamic' name='free' decs='Frees resources associated with collection object'/>
<method class='descriptor' call='dynamic' name='free' decs='Frees resources associated with descriptor'/>
<function name='oci_free_statement' decs='Frees all resources associated with statement or cursor '/>
<function name='oci_internal_debug' decs='Enables or disables internal debug output'/>
<method class='lob' call='dynamic' name='append' decs='Appends data from the large object to another large object'/>
<method class='lob' call='dynamic' name='close' decs='Closes LOB descriptor'/>
<function name='oci_lob_copy' decs='Copies large object'/>
<method class='lob' call='dynamic' name='eof' decs='Tests for end-of-file on a large object&apos;s descriptor'/>
<method class='lob' call='dynamic' name='erase' decs='Erases a specified portion of the internal LOB data'/>
<method class='lob' call='dynamic' name='export' decs='Exports LOB&apos;s contents to a file'/>
<method class='lob' call='dynamic' name='flush' decs='Flushes/writes buffer of the LOB to the server'/>
<method class='lob' call='dynamic' name='import' decs='Imports file data to the LOB'/>
<function name='oci_lob_is_equal' decs='Compares two LOB/FILE locators for equality'/>
<method class='lob' call='dynamic' name='load' decs='Returns large object&apos;s contents'/>
<method class='lob' call='dynamic' name='read' decs='Reads part of large object'/>
<method class='lob' call='dynamic' name='rewind' decs='Moves the internal pointer to the beginning of the large object'/>
<method class='lob' call='dynamic' name='save' decs='Saves data to the large object'/>
<method class='lob' call='dynamic' name='seek' decs='Sets the internal pointer of the large object'/>
<method class='lob' call='dynamic' name='size' decs='Returns size of large object'/>
<method class='lob' call='dynamic' name='tell' decs='Returns current position of internal pointer of large object'/>
<method class='lob' call='dynamic' name='truncate' decs='Truncates large object'/>
<method class='lob' call='dynamic' name='writeTemporary' decs='Writes temporary large object'/>
<method class='lob' call='dynamic' name='write' decs='Writes data to the large object'/>
<function name='oci_new_collection' decs='Allocates new collection object'/>
<function name='oci_new_connect' decs='Establishes a new connection to the Oracle server'/>
<function name='oci_new_cursor' decs='Allocates and returns a new cursor (statement handle)'/>
<function name='oci_new_descriptor' decs='Initializes a new empty LOB or FILE descriptor'/>
<function name='oci_num_fields' decs='Returns the number of result columns in a statement '/>
<function name='oci_num_rows' decs='Returns number of rows affected during statement execution'/>
<function name='oci_parse' decs='Parses a query and returns an Oracle statement identifier'/>
<function name='oci_password_change' decs='Changes password of Oracle&apos;s user'/>
<function name='oci_pconnect' decs='Connect to an Oracle database using a persistent connection'/>
<function name='oci_result' decs='Returns field&apos;s value from the fetched row'/>
<function name='oci_rollback' decs='Rolls back outstanding transaction'/>
<function name='oci_server_version' decs='Returns server version'/>
<function name='oci_set_prefetch' decs='Sets number of rows to be prefetched'/>
<function name='oci_statement_type' decs='Returns the type of an OCI statement'/>
<function name='ocifetchinto' decs='Fetches the next row into an array' depr='on'/>
<function name='ocifetchstatement' decs='Fetch all rows of result data into an array'/>
<method class='lob' call='dynamic' name='getBuffering' decs='Returns current state of buffering for large object'/>
<method class='lob' call='dynamic' name='setBuffering' decs='Changes current state of buffering for large object'/>
<const name='OCI_DEFAULT'/>
<const name='OCI_DESCRIBE_ONLY'/>
<const name='OCI_COMMIT_ON_SUCCESS'/>
<const name='OCI_EXACT_FETCH'/>
<const name='OCI_SYSDATE'/>
<const name='OCI_B_BFILE'/>
<const name='OCI_B_CFILEE'/>
<const name='OCI_B_CLOB'/>
<const name='OCI_B_BLOB'/>
<const name='OCI_B_ROWID'/>
<const name='OCI_B_CURSOR'/>
<const name='OCI_B_NTY'/>
<const name='OCI_B_BIN'/>
<const name='SQLT_BFILEE'/>
<const name='SQLT_CFILEE'/>
<const name='SQLT_CLOB'/>
<const name='SQLT_BLOB'/>
<const name='SQLT_RDD'/>
<const name='SQLT_NTY'/>
<const name='OCI_FETCHSTATEMENT_BY_COLUMN'/>
<const name='OCI_FETCHSTATEMENT_BY_ROW'/>
<const name='OCI_ASSOC'/>
<const name='OCI_NUM'/>
<const name='OCI_BOTH'/>
<const name='OCI_RETURN_NULLS'/>
<const name='OCI_RETURN_LOBS'/>
<const name='OCI_DTYPE_FILE'/>
<const name='OCI_DTYPE_LOB'/>
<const name='OCI_DTYPE_ROWID'/>
<const name='OCI_D_FILE'/>
<const name='OCI_D_LOB'/>
<const name='OCI_D_ROWID'/>
</package>
<package name='OpenSSL' number='LXXV' desc='OpenSSL Functions'>
<function name='openssl_csr_export_to_file' decs='Exports a CSR to a file'/>
<function name='openssl_csr_export' decs='Exports a CSR as a string'/>
<function name='openssl_csr_new' decs='Generates a CSR'/>
<function name='openssl_csr_sign' decs='Sign a CSR with another certificate (or itself) and generate a certificate'/>
<function name='openssl_error_string' decs='Return openSSL error message'/>
<function name='openssl_free_key' decs='Free key resource'/>
<function name='openssl_get_privatekey' decs='Get a private key'/>
<function name='openssl_get_publickey' decs='Extract public key from certificate and prepare it for use'/>
<function name='openssl_open' decs='Open sealed data'/>
<function name='openssl_pkcs7_decrypt' decs='Decrypts an S/MIME encrypted message'/>
<function name='openssl_pkcs7_encrypt' decs='Encrypt an S/MIME message'/>
<function name='openssl_pkcs7_sign' decs='sign an S/MIME message'/>
<function name='openssl_pkcs7_verify' decs='Verifies the signature of an S/MIME signed message'/>
<function name='openssl_pkey_export_to_file' decs='Gets an exportable representation of a key into a file '/>
<function name='openssl_pkey_export' decs='Gets an exportable representation of a key into a string'/>
<function name='openssl_pkey_get_private' decs='Get a private key'/>
<function name='openssl_pkey_get_public' decs='Extract public key from certificate and prepare it for use'/>
<function name='openssl_pkey_new' decs='Generates a new private key '/>
<function name='openssl_private_decrypt' decs='Decrypts data with private key '/>
<function name='openssl_private_encrypt' decs='Encrypts data with private key '/>
<function name='openssl_public_decrypt' decs='Decrypts data with public key '/>
<function name='openssl_public_encrypt' decs='Encrypts data with public key '/>
<function name='openssl_seal' decs='Seal (encrypt) data'/>
<function name='openssl_sign' decs='Generate signature'/>
<function name='openssl_verify' decs='Verify signature'/>
<function name='openssl_x509_check_private_key' decs='Checks if a private key corresponds to a certificate'/>
<function name='openssl_x509_checkpurpose' decs='Verifies if a certificate can be used for a particular purpose'/>
<function name='openssl_x509_export_to_file' decs='Exports a certificate to file'/>
<function name='openssl_x509_export' decs='Exports a certificate as a string'/>
<function name='openssl_x509_free' decs='Free certificate resource'/>
<function name='openssl_x509_parse' decs='Parse an X509 certificate and return the information as an array'/>
<function name='openssl_x509_read' decs='Parse an X.509 certificate and return a resource identifier for it'/>
<const name='X509_PURPOSE_SSL_CLIENT'/>
<const name='X509_PURPOSE_SSL_SERVER'/>
<const name='X509_PURPOSE_NS_SSL_SERVER'/>
<const name='X509_PURPOSE_SMIME_SIGN'/>
<const name='X509_PURPOSE_SMIME_ENCRYPT'/>
<const name='X509_PURPOSE_CRL_SIGN'/>
<const name='X509_PURPOSE_ANY'/>
<const name='OPENSSL_PKCS1_PADDING'/>
<const name='OPENSSL_SSLV23_PADDING'/>
<const name='OPENSSL_NO_PADDING'/>
<const name='OPENSSL_PKCS1_OAEP_PADDING'/>
<const name='OPENSSL_KEYTYPE_RSA'/>
<const name='OPENSSL_KEYTYPE_DSA'/>
<const name='OPENSSL_KEYTYPE_DH'/>
<const name='PKCS7_TEXT'/>
<const name='PKCS7_BINARY'/>
<const name='PKCS7_NOINTERN'/>
<const name='PKCS7_NOVERIFY'/>
<const name='PKCS7_NOCHAIN'/>
<const name='PKCS7_NOCERTS'/>
<const name='PKCS7_NOATTR'/>
<const name='PKCS7_DETACHED'/>
<const name='PKCS7_NOSIGS'/>
</package>
<package name='Oracle' number='LXXVI' desc='Oracle Functions'>
<function name='ora_bind' decs='Binds a PHP variable to an Oracle parameter'/>
<function name='ora_close' decs='Closes an Oracle cursor'/>
<function name='ora_columnname' decs='Gets the name of an Oracle result column'/>
<function name='ora_columnsize' decs='Returns the size of an Oracle result column'/>
<function name='ora_columntype' decs='Gets the type of an Oracle result column'/>
<function name='ora_commit' decs='Commit an Oracle transaction'/>
<function name='ora_commitoff' decs='Disable automatic commit'/>
<function name='ora_commiton' decs='Enable automatic commit'/>
<function name='ora_do' decs='Parse, Exec, Fetch'/>
<function name='ora_error' decs='Gets an Oracle error message'/>
<function name='ora_errorcode' decs='Gets an Oracle error code'/>
<function name='ora_exec' decs='Execute a parsed statement on an Oracle cursor'/>
<function name='ora_fetch_into' decs='Fetch a row into the specified result array'/>
<function name='ora_fetch' decs='Fetch a row of data from a cursor'/>
<function name='ora_getcolumn' decs='Get data from a fetched column'/>
<function name='ora_logoff' decs='Close an Oracle connection'/>
<function name='ora_logon' decs='Open an Oracle connection'/>
<function name='ora_numcols' decs='Returns the number of columns'/>
<function name='ora_numrows' decs='Returns the number of rows'/>
<function name='ora_open' decs='Opens an Oracle cursor'/>
<function name='ora_parse' decs='Parse an SQL statement with Oracle'/>
<function name='ora_plogon' decs='Open a persistent Oracle connection '/>
<function name='ora_rollback' decs='Rolls back a transaction'/>
<const name='ORA_BIND_INOUT'/>
<const name='ORA_BIND_IN'/>
<const name='ORA_BIND_OUT'/>
<const name='ORA_FETCHINTO_ASSOC'/>
<const name='ORA_FETCHINTO_NULLS'/>
</package>
<package name='Ovrimos-SQL' number='LXXVII' desc='Ovrimos SQL Functions'>
<function name='ovrimos_close' decs='Closes the connection to ovrimos'/>
<function name='ovrimos_commit' decs='Commits the transaction'/>
<function name='ovrimos_connect' decs='Connect to the specified database'/>
<function name='ovrimos_cursor' decs='Returns the name of the cursor'/>
<function name='ovrimos_exec' decs='Executes an SQL statement'/>
<function name='ovrimos_execute' decs='Executes a prepared SQL statement'/>
<function name='ovrimos_fetch_into' decs='Fetches a row from the result set'/>
<function name='ovrimos_fetch_row' decs='Fetches a row from the result set'/>
<function name='ovrimos_field_len' decs='Returns the length of the output column'/>
<function name='ovrimos_field_name' decs='Returns the output column name'/>
<function name='ovrimos_field_num' decs='Returns the (1-based) index of the output column '/>
<function name='ovrimos_field_type' decs='Returns the (numeric) type of the output column '/>
<function name='ovrimos_free_result' decs='Frees the specified result_id'/>
<function name='ovrimos_longreadlen' decs='Specifies how many bytes are to be retrieved from long datatypes '/>
<function name='ovrimos_num_fields' decs='Returns the number of columns'/>
<function name='ovrimos_num_rows' decs='Returns the number of rows affected by update operations '/>
<function name='ovrimos_prepare' decs='Prepares an SQL statement'/>
<function name='ovrimos_result_all' decs='Prints the whole result set as an HTML table '/>
<function name='ovrimos_result' decs='Retrieves the output column'/>
<function name='ovrimos_rollback' decs='Rolls back the transaction'/>
</package>
<package name='Output-Control' number='LXXVIII' desc='Output Control Functions'>
<function name='flush' decs='Flush the output buffer'/>
<function name='ob_clean' decs='Clean (erase) the output buffer '/>
<function name='ob_end_clean' decs='Clean (erase) the output buffer and turn off output buffering '/>
<function name='ob_end_flush' decs='Flush (send) the output buffer and turn off output buffering '/>
<function name='ob_flush' decs='Flush (send) the output buffer '/>
<function name='ob_get_clean' decs='Get current buffer contents and delete current output buffer '/>
<function name='ob_get_contents' decs='Return the contents of the output buffer '/>
<function name='ob_get_flush' decs='Flush the output buffer, return it as a string and turn off output buffering '/>
<function name='ob_get_length' decs='Return the length of the output buffer '/>
<function name='ob_get_level' decs='Return the nesting level of the output buffering mechanism '/>
<function name='ob_get_status' decs='Get status of output buffers '/>
<function name='ob_gzhandler' decs='ob_start callback function to gzip output buffer '/>
<function name='ob_implicit_flush' decs='Turn implicit flush on/off '/>
<function name='ob_list_handlers' decs='List all output handlers in use '/>
<function name='ob_start' decs='Turn on output buffering'/>
<function name='output_add_rewrite_var' decs='Add URL rewriter values '/>
<function name='output_reset_rewrite_vars' decs='Reset URL rewriter values '/>
</package>
<package name='Object-property-and-method-call-overloading' number='LXXIX' desc='Object property and method call overloading'>
<function name='overload' decs='Enable property and method call overloading for a class'/>
</package>
<package name='PDF' number='LXXX' desc='PDF Functions'>
<function name='pdf_add_annotation' decs='Deprecated: Adds annotation'/>
<function name='pdf_add_bookmark' decs='Adds bookmark for current page'/>
<function name='pdf_add_launchlink' decs='Add a launch annotation for current page'/>
<function name='pdf_add_locallink' decs='Add a link annotation for current page'/>
<function name='pdf_add_note' decs='Sets annotation for current page'/>
<function name='pdf_add_outline' decs='Deprecated: Adds bookmark for current page'/>
<function name='pdf_add_pdflink' decs='Adds file link annotation for current page'/>
<function name='pdf_add_thumbnail' decs='Adds thumbnail for current page'/>
<function name='pdf_add_weblink' decs='Adds weblink for current page'/>
<function name='pdf_arc' decs='Draws an arc (counterclockwise)'/>
<function name='pdf_arcn' decs='Draws an arc (clockwise)'/>
<function name='pdf_attach_file' decs='Adds a file attachment for current page'/>
<function name='pdf_begin_page' decs='Starts new page'/>
<function name='pdf_begin_pattern' decs='Starts new pattern'/>
<function name='pdf_begin_template' decs='Starts new template'/>
<function name='pdf_circle' decs='Draws a circle'/>
<function name='pdf_clip' decs='Clips to current path'/>
<function name='pdf_close_image' decs='Closes an image'/>
<function name='pdf_close_pdi_page' decs='Close the page handle '/>
<function name='pdf_close_pdi' decs='Close the input PDF document '/>
<function name='pdf_close' decs='Closes a pdf resource'/>
<function name='pdf_closepath_fill_stroke' decs='Closes, fills and strokes current path'/>
<function name='pdf_closepath_stroke' decs='Closes path and draws line along path'/>
<function name='pdf_closepath' decs='Closes path'/>
<function name='pdf_concat' decs='Concatenate a matrix to the CTM'/>
<function name='pdf_continue_text' decs='Outputs text in next line'/>
<function name='pdf_curveto' decs='Draws a curve'/>
<function name='pdf_delete' decs='Deletes a PDF object'/>
<function name='pdf_end_page' decs='Ends a page'/>
<function name='pdf_end_pattern' decs='Finish pattern'/>
<function name='pdf_end_template' decs='Finish template'/>
<function name='pdf_endpath' decs='Deprecated: Ends current path'/>
<function name='pdf_fill_stroke' decs='Fills and strokes current path'/>
<function name='pdf_fill' decs='Fills current path'/>
<function name='pdf_findfont' decs='Prepare font for later use with pdf_setfont().'/>
<function name='pdf_get_buffer' decs='Fetch the buffer containing the generated PDF data.'/>
<function name='pdf_get_font' decs='Deprecated: font handling'/>
<function name='pdf_get_fontname' decs='Deprecated: font handling'/>
<function name='pdf_get_fontsize' decs='Deprecated: font handling'/>
<function name='pdf_get_image_height' decs='Deprecated: returns height of an image'/>
<function name='pdf_get_image_width' decs='Deprecated: Returns width of an image'/>
<function name='pdf_get_majorversion' decs='Returns the major version number of the PDFlib '/>
<function name='pdf_get_minorversion' decs='Returns the minor version number of the PDFlib '/>
<function name='pdf_get_parameter' decs='Gets certain parameters'/>
<function name='pdf_get_pdi_parameter' decs='Get some PDI string parameters'/>
<function name='pdf_get_pdi_value' decs='Gets some PDI numerical parameters'/>
<function name='pdf_get_value' decs='Gets certain numerical value'/>
<function name='pdf_initgraphics' decs='Resets graphic state'/>
<function name='pdf_lineto' decs='Draws a line'/>
<function name='pdf_makespotcolor' decs='Makes a spotcolor'/>
<function name='pdf_moveto' decs='Sets current point'/>
<function name='pdf_new' decs='Creates a new pdf resource'/>
<function name='pdf_open_CCITT' decs='Opens a new image file with raw CCITT data'/>
<function name='pdf_open_file' decs='Opens a new pdf object'/>
<function name='pdf_open_gif' decs='Deprecated: Opens a GIF image'/>
<function name='pdf_open_image_file' decs='Reads an image from a file'/>
<function name='pdf_open_image' decs='Versatile function for images'/>
<function name='pdf_open_jpeg' decs='Deprecated: Opens a JPEG image'/>
<function name='pdf_open_memory_image' decs='Opens an image created with PHP&apos;s image functions'/>
<function name='pdf_open_pdi_page' decs='Prepare a page '/>
<function name='pdf_open_pdi' decs='Opens a PDF file '/>
<function name='pdf_open_png' decs='Deprecated: Opens a PNG image '/>
<function name='pdf_open_tiff' decs='Deprecated: Opens a TIFF image'/>
<function name='pdf_open' decs='Deprecated: Open a new pdf object'/>
<function name='pdf_place_image' decs='Places an image on the page'/>
<function name='pdf_place_pdi_page' decs='Places an image on the page'/>
<function name='pdf_rect' decs='Draws a rectangle'/>
<function name='pdf_restore' decs='Restores formerly saved environment'/>
<function name='pdf_rotate' decs='Sets rotation'/>
<function name='pdf_save' decs='Saves the current environment'/>
<function name='pdf_scale' decs='Sets scaling'/>
<function name='pdf_set_border_color' decs='Sets color of border around links and annotations'/>
<function name='pdf_set_border_dash' decs='Sets dash style of border around links and annotations'/>
<function name='pdf_set_border_style' decs='Sets style of border around links and annotations'/>
<function name='pdf_set_char_spacing' decs='Deprecated: Sets character spacing'/>
<function name='pdf_set_duration' decs='Deprecated: Sets duration between pages'/>
<function name='pdf_set_font' decs='Deprecated: Selects a font face and size'/>
<function name='pdf_set_horiz_scaling' decs='Sets horizontal scaling of text' depr='on'/>
<function name='pdf_set_info_author' decs='Deprecated: Fills the author field of the document '/>
<function name='pdf_set_info_creator' decs='Deprecated: Fills the creator field of the document '/>
<function name='pdf_set_info_keywords' decs='Deprecated: Fills the keywords field of the document '/>
<function name='pdf_set_info_subject' decs='Deprecated: Fills the subject field of the document '/>
<function name='pdf_set_info_title' decs='Deprecated: Fills the title field of the document '/>
<function name='pdf_set_info' decs='Fills a field of the document information'/>
<function name='pdf_set_leading' decs='Deprecated: Sets distance between text lines'/>
<function name='pdf_set_parameter' decs='Sets certain parameters'/>
<function name='pdf_set_text_matrix' decs='Deprecated: Sets the text matrix'/>
<function name='pdf_set_text_pos' decs='Sets text position'/>
<function name='pdf_set_text_rendering' decs='Deprecated: Determines how text is rendered'/>
<function name='pdf_set_text_rise' decs='Deprecated: Sets the text rise'/>
<function name='pdf_set_value' decs='Sets certain numerical value'/>
<function name='pdf_set_word_spacing' decs='Deprecated: Sets spacing between words'/>
<function name='pdf_setcolor' decs='Sets fill and stroke color'/>
<function name='pdf_setdash' decs='Sets dash pattern'/>
<function name='pdf_setflat' decs='Sets flatness'/>
<function name='pdf_setfont' decs='Set the current font'/>
<function name='pdf_setgray_fill' decs='Sets filling color to gray value' depr='on'/>
<function name='pdf_setgray_stroke' decs='Sets drawing color to gray value' depr='on'/>
<function name='pdf_setgray' decs='Sets drawing and filling color to gray value' depr='on'/>
<function name='pdf_setlinecap' decs='Sets linecap parameter'/>
<function name='pdf_setlinejoin' decs='Sets linejoin parameter'/>
<function name='pdf_setlinewidth' decs='Sets line width'/>
<function name='pdf_setmatrix' decs='Sets current transformation matrix'/>
<function name='pdf_setmiterlimit' decs='Sets miter limit'/>
<function name='pdf_setpolydash' decs='Deprecated: Sets complicated dash pattern'/>
<function name='pdf_setrgbcolor_fill' decs='Sets filling color to rgb color value' depr='on'/>
<function name='pdf_setrgbcolor_stroke' decs='Sets drawing color to rgb color value' depr='on'/>
<function name='pdf_setrgbcolor' decs='Sets drawing and filling color to rgb color value' depr='on'/>
<function name='pdf_show_boxed' decs='Output text in a box'/>
<function name='pdf_show_xy' decs='Output text at given position'/>
<function name='pdf_show' decs='Output text at current position'/>
<function name='pdf_skew' decs='Skews the coordinate system'/>
<function name='pdf_stringwidth' decs='Returns width of text using current font'/>
<function name='pdf_stroke' decs='Draws line along path'/>
<function name='pdf_translate' decs='Sets origin of coordinate system'/>
<const name='pdf_put_image'/>
<const name='pdf_execute_image'/>
<const name='pdf_get_annotation'/>
<const name='pdf_get_font'/>
<const name='pdf_get_fontsize'/>
<const name='pdf_get_fontname'/>
<const name='pdf_set_info_creator'/>
<const name='pdf_set_info_title'/>
<const name='pdf_set_info_subject'/>
<const name='pdf_set_info_author'/>
<const name='pdf_set_info_keywords'/>
<const name='pdf_set_leading'/>
<const name='pdf_set_text_rendering'/>
<const name='pdf_set_text_rise'/>
<const name='pdf_set_horiz_scaling'/>
<const name='pdf_set_text_matrix'/>
<const name='pdf_set_char_spacing'/>
<const name='pdf_set_word_spacing'/>
<const name='pdf_set_transition'/>
<const name='pdf_open'/>
<const name='pdf_set_font'/>
<const name='pdf_set_duration'/>
<const name='pdf_open_gif'/>
<const name='pdf_open_jpeg'/>
<const name='pdf_open_tiff'/>
<const name='pdf_open_png'/>
<const name='pdf_get_image_width'/>
<const name='pdf_get_image_height'/>
</package>
<package name='Verisign-Payflow-Pro' number='LXXXI' desc='Verisign Payflow Pro Functions'>
<function name='pfpro_cleanup' decs='Shuts down the Payflow Pro library'/>
<function name='pfpro_init' decs='Initialises the Payflow Pro library'/>
<function name='pfpro_process_raw' decs='Process a raw transaction with Payflow Pro'/>
<function name='pfpro_process' decs='Process a transaction with Payflow Pro'/>
<function name='pfpro_version' decs='Returns the version of the Payflow Pro software'/>
</package>
<package name='PHP-Options-Information' number='LXXXII' desc='PHP Options&amp;Information'>
<function name='assert_options' decs='Set/get the various assert flags'/>
<function name='assert' decs='Checks if assertion is FALSE'/>
<function name='dl' decs='Loads a PHP extension at runtime'/>
<function name='extension_loaded' decs='Find out whether an extension is loaded'/>
<function name='get_cfg_var' decs='Gets the value of a PHP configuration option '/>
<function name='get_current_user' decs='Gets the name of the owner of the current PHP script '/>
<function name='get_defined_constants' decs='Returns an associative array with the names of all the constants and their values '/>
<function name='get_extension_funcs' decs='Returns an array with the names of the functions of a module '/>
<function name='get_include_path' decs='Gets the current include_path configuration option '/>
<function name='get_included_files' decs='Returns an array with the names of included or required files '/>
<function name='get_loaded_extensions' decs='Returns an array with the names of all modules compiled and loaded '/>
<function name='get_magic_quotes_gpc' decs='Gets the current active configuration setting of magic quotes gpc '/>
<function name='get_magic_quotes_runtime' decs='Gets the current active configuration setting of magic_quotes_runtime '/>
<function name='get_required_files' decs='Alias of get_included_files()'/>
<function name='getenv' decs='Gets the value of an environment variable'/>
<function name='getlastmod' decs='Gets time of last page modification'/>
<function name='getmygid' decs='Get PHP script owner&apos;s GID'/>
<function name='getmyinode' decs='Gets the inode of the current script'/>
<function name='getmypid' decs='Gets PHP&apos;s process ID'/>
<function name='getmyuid' decs='Gets PHP script owner&apos;s UID'/>
<function name='getopt' decs='Gets options from the command line argument list'/>
<function name='getrusage' decs='Gets the current resource usages'/>
<function name='ini_alter' decs='Alias of ini_set()'/>
<function name='ini_get_all' decs='Gets all configuration options'/>
<function name='ini_get' decs='Gets the value of a configuration option'/>
<function name='ini_restore' decs='Restores the value of a configuration option'/>
<function name='ini_set' decs='Sets the value of a configuration option'/>
<function name='main' decs='Dummy for main()'/>
<function name='memory_get_usage' decs='Returns the amount of memory allocated to PHP'/>
<function name='php_ini_scanned_files' decs='Return a list of .ini files parsed from the additional ini dir'/>
<function name='php_logo_guid' decs='Gets the logo guid'/>
<function name='php_sapi_name' decs='Returns the type of interface between web server and PHP '/>
<function name='php_uname' decs='Returns information about the operating system PHP was built on '/>
<function name='phpcredits' decs='Prints out the credits for PHP'/>
<function name='phpinfo' decs='Outputs lots of PHP information'/>
<function name='phpversion' decs='Gets the current PHP version'/>
<function name='putenv' decs='Sets the value of an environment variable'/>
<function name='restore_include_path' decs='Restores the value of the include_path configuration option '/>
<function name='set_include_path' decs='Sets the include_path configuration option '/>
<function name='set_magic_quotes_runtime' decs='Sets the current active configuration setting of magic_quotes_runtime '/>
<function name='set_time_limit' decs='Limits the maximum execution time'/>
<function name='version_compare' decs='Compares two &quot;PHP-standardized&quot; version number strings '/>
<function name='zend_logo_guid' decs='Gets the Zend guid'/>
<function name='zend_version' decs='Gets the version of the current Zend engine'/>
<const name='CREDITS_GROUP'/>
<const name='CREDITS_GENERAL'/>
<const name='CREDITS_SAPI'/>
<const name='CREDITS_MODULES'/>
<const name='CREDITS_DOCS'/>
<const name='CREDITS_FULLPAGE'/>
<const name='CREDITS_QA'/>
<const name='CREDITS_ALL'/>
<const name='INFO_GENERAL'/>
<const name='INFO_CREDITS'/>
<const name='INFO_CONFIGURATION'/>
<const name='INFO_MODULES'/>
<const name='INFO_ENVIRONMENT'/>
<const name='INFO_VARIABLES'/>
<const name='INFO_LICENSE'/>
<const name='INFO_ALL'/>
<const name='ASSERT_ACTIVE'/>
<const name='ASSERT_CALLBACK'/>
<const name='ASSERT_BAIL'/>
<const name='ASSERT_WARNING'/>
<const name='ASSERT_QUIET_EVAL'/>
</package>
<package name='POSIX' number='LXXXIII' desc='POSIX Functions'>
<function name='posix_ctermid' decs='Get path name of controlling terminal'/>
<function name='posix_get_last_error' decs='Retrieve the error number set by the last posix function that failed. '/>
<function name='posix_getcwd' decs='Pathname of current directory'/>
<function name='posix_getegid' decs='Return the effective group ID of the current process '/>
<function name='posix_geteuid' decs='Return the effective user ID of the current process '/>
<function name='posix_getgid' decs='Return the real group ID of the current process '/>
<function name='posix_getgrgid' decs='Return info about a group by group id'/>
<function name='posix_getgrnam' decs='Return info about a group by name'/>
<function name='posix_getgroups' decs='Return the group set of the current process '/>
<function name='posix_getlogin' decs='Return login name'/>
<function name='posix_getpgid' decs='Get process group id for job control'/>
<function name='posix_getpgrp' decs='Return the current process group identifier '/>
<function name='posix_getpid' decs='Return the current process identifier'/>
<function name='posix_getppid' decs='Return the parent process identifier'/>
<function name='posix_getpwnam' decs='Return info about a user by username'/>
<function name='posix_getpwuid' decs='Return info about a user by user id'/>
<function name='posix_getrlimit' decs='Return info about system resource limits'/>
<function name='posix_getsid' decs='Get the current sid of the process'/>
<function name='posix_getuid' decs='Return the real user ID of the current process '/>
<function name='posix_isatty' decs='Determine if a file descriptor is an interactive terminal '/>
<function name='posix_kill' decs='Send a signal to a process'/>
<function name='posix_mkfifo' decs='Create a fifo special file (a named pipe) '/>
<function name='posix_setegid' decs='Set the effective GID of the current process '/>
<function name='posix_seteuid' decs='Set the effective UID of the current process '/>
<function name='posix_setgid' decs='Set the GID of the current process '/>
<function name='posix_setpgid' decs='set process group id for job control'/>
<function name='posix_setsid' decs='Make the current process a session leader'/>
<function name='posix_setuid' decs='Set the UID of the current process '/>
<function name='posix_strerror' decs='Retrieve the system error message associated with the given errno. '/>
<function name='posix_times' decs='Get process times'/>
<function name='posix_ttyname' decs='Determine terminal device name'/>
<function name='posix_uname' decs='Get system name'/>
</package>
<package name='PostgreSQL' number='LXXXIV' desc='PostgreSQL Functions'>
<function name='pg_affected_rows' decs='Returns number of affected records (tuples)'/>
<function name='pg_cancel_query' decs='Cancel asynchronous query '/>
<function name='pg_client_encoding' decs='Gets the client encoding '/>
<function name='pg_close' decs='Closes a PostgreSQL connection'/>
<function name='pg_connect' decs='Open a PostgreSQL connection'/>
<function name='pg_connection_busy' decs='Get connection is busy or not '/>
<function name='pg_connection_reset' decs='Reset connection (reconnect) '/>
<function name='pg_connection_status' decs='Get connection status '/>
<function name='pg_convert' decs='Convert associative array value into suitable for SQL statement. '/>
<function name='pg_copy_from' decs='Insert records into a table from an array '/>
<function name='pg_copy_to' decs='Copy a table to an array '/>
<function name='pg_dbname' decs='Get the database name'/>
<function name='pg_delete' decs='Deletes records. '/>
<function name='pg_end_copy' decs='Sync with PostgreSQL backend'/>
<function name='pg_escape_bytea' decs='Escape binary for bytea type '/>
<function name='pg_escape_string' decs='Escape string for text/char type '/>
<function name='pg_fetch_all' decs='Fetches all rows from a result as an array'/>
<function name='pg_fetch_array' decs='Fetch a row as an array'/>
<function name='pg_fetch_assoc' decs='Fetch a row as an associative array'/>
<function name='pg_fetch_object' decs='Fetch a row as an object'/>
<function name='pg_fetch_result' decs='Returns values from a result resource'/>
<function name='pg_fetch_row' decs='Get a row as an enumerated array'/>
<function name='pg_field_is_null' decs='Test if a field is NULL'/>
<function name='pg_field_name' decs='Returns the name of a field'/>
<function name='pg_field_num' decs='Returns the field number of the named field'/>
<function name='pg_field_prtlen' decs='Returns the printed length'/>
<function name='pg_field_size' decs='Returns the internal storage size of the named field '/>
<function name='pg_field_type' decs='Returns the type name for the corresponding field number '/>
<function name='pg_free_result' decs='Free result memory'/>
<function name='pg_get_notify' decs='Ping database connection'/>
<function name='pg_get_pid' decs='Ping database connection'/>
<function name='pg_get_result' decs='Get asynchronous query result '/>
<function name='pg_host' decs='Returns the host name associated with the connection '/>
<function name='pg_insert' decs='Insert array into table. '/>
<function name='pg_last_error' decs='Get the last error message string of a connection'/>
<function name='pg_last_notice' decs='Returns the last notice message from PostgreSQL server '/>
<function name='pg_last_oid' decs='Returns the last object&apos;s oid'/>
<function name='pg_lo_close' decs='Close a large object'/>
<function name='pg_lo_create' decs='Create a large object'/>
<function name='pg_lo_export' decs='Export a large object to file'/>
<function name='pg_lo_import' decs='Import a large object from file'/>
<function name='pg_lo_open' decs='Open a large object'/>
<function name='pg_lo_read_all' decs='Reads an entire large object and send straight to browser '/>
<function name='pg_lo_read' decs='Read a large object'/>
<function name='pg_lo_seek' decs='Seeks position of large object '/>
<function name='pg_lo_tell' decs='Returns current position of large object '/>
<function name='pg_lo_unlink' decs='Delete a large object'/>
<function name='pg_lo_write' decs='Write a large object'/>
<function name='pg_meta_data' decs='Get meta data for table. '/>
<function name='pg_num_fields' decs='Returns the number of fields'/>
<function name='pg_num_rows' decs='Returns the number of rows'/>
<function name='pg_options' decs='Get the options associated with the connection'/>
<function name='pg_pconnect' decs='Open a persistent PostgreSQL connection'/>
<function name='pg_ping' decs='Ping database connection'/>
<function name='pg_port' decs='Return the port number associated with the connection '/>
<function name='pg_put_line' decs='Send a NULL-terminated string to PostgreSQL backend'/>
<function name='pg_query' decs='Execute a query'/>
<function name='pg_result_error' decs='Get error message associated with result '/>
<function name='pg_result_seek' decs='Set internal row offset in result resource'/>
<function name='pg_result_status' decs='Get status of query result '/>
<function name='pg_select' decs='Select records. '/>
<function name='pg_send_query' decs='Sends asynchronous query '/>
<function name='pg_set_client_encoding' decs='Set the client encoding '/>
<function name='pg_trace' decs='Enable tracing a PostgreSQL connection'/>
<function name='pg_tty' decs='Return the tty name associated with the connection '/>
<function name='pg_unescape_bytea' decs='Unescape binary for bytea type '/>
<function name='pg_untrace' decs='Disable tracing of a PostgreSQL connection'/>
<function name='pg_update' decs='Update table. '/>
<const name='PGSQL_ASSOC'/>
<const name='PGSQL_NUM'/>
<const name='PGSQL_BOTH'/>
<const name='PGSQL_CONNECTION_BAD'/>
<const name='PGSQL_CONNECTION_OK'/>
<const name='PGSQL_SEEK_SET'/>
<const name='PGSQL_SEEK_CUR'/>
<const name='PGSQL_SEEK_END'/>
<const name='PGSQL_ESCAPE_STRING'/>
<const name='PGSQL_ESCAPE_BYTEA'/>
<const name='PGSQL_EMPTY_QUERY'/>
<const name='PGSQL_COMMAND_OK'/>
<const name='PGSQL_TUPLES_OK'/>
<const name='PGSQL_COPY_OUT'/>
<const name='PGSQL_COPY_IN'/>
<const name='PGSQL_BAD_RESPONSE'/>
<const name='PGSQL_NONFATAL_ERROR'/>
<const name='PGSQL_FATAL_ERROR'/>
</package>
<package name='Process-Control' number='LXXXV' desc='Process Control Functions'>
<function name='pcntl_alarm' decs='Set an alarm clock for delivery of a signal '/>
<function name='pcntl_exec' decs='Executes specified program in current process space '/>
<function name='pcntl_fork' decs='Forks the currently running process'/>
<function name='pcntl_getpriority' decs='Get the priority of any process '/>
<function name='pcntl_setpriority' decs='Change the priority of any process '/>
<function name='pcntl_signal' decs='Installs a signal handler'/>
<function name='pcntl_wait' decs='Waits on or returns the status of a forked child '/>
<function name='pcntl_waitpid' decs='Waits on or returns the status of a forked child'/>
<function name='pcntl_wexitstatus' decs='Returns the return code of a terminated child '/>
<function name='pcntl_wifexited' decs='Returns TRUE if status code represents a successful exit '/>
<function name='pcntl_wifsignaled' decs='Returns TRUE if status code represents a termination due to a signal '/>
<function name='pcntl_wifstopped' decs='Returns TRUE if child process is currently stopped '/>
<function name='pcntl_wstopsig' decs='Returns the signal which caused the child to stop '/>
<function name='pcntl_wtermsig' decs='Returns the signal which caused the child to terminate '/>
<const name='WNOHANG'/>
<const name='WUNTRACED'/>
<const name='SIG_IGN'/>
<const name='SIG_DFL'/>
<const name='SIG_ERR'/>
<const name='SIGHUP'/>
<const name='SIGINT'/>
<const name='SIGQUIT'/>
<const name='SIGILL'/>
<const name='SIGTRAP'/>
<const name='SIGABRT'/>
<const name='SIGIOT'/>
<const name='SIGBUS'/>
<const name='SIGFPE'/>
<const name='SIGKILL'/>
<const name='SIGUSR1'/>
<const name='SIGSEGV'/>
<const name='SIGUSR2'/>
<const name='SIGPIPE'/>
<const name='SIGALRM'/>
<const name='SIGTERM'/>
<const name='SIGSTKFLT'/>
<const name='SIGCLD'/>
<const name='SIGCHLD'/>
<const name='SIGCONT'/>
<const name='SIGSTOP'/>
<const name='SIGTSTP'/>
<const name='SIGTTIN'/>
<const name='SIGTTOU'/>
<const name='SIGURG'/>
<const name='SIGXCPU'/>
<const name='SIGXFSZ'/>
<const name='SIGVTALRM'/>
<const name='SIGPROF'/>
<const name='SIGWINCH'/>
<const name='SIGPOLL'/>
<const name='SIGIO'/>
<const name='SIGPWR'/>
<const name='SIGSYS'/>
<const name='SIGBABY'/>
</package>
<package name='Program-Execution' number='LXXXVI' desc='Program Execution Functions'>
<function name='escapeshellarg' decs='escape a string to be used as a shell argument'/>
<function name='escapeshellcmd' decs='escape shell metacharacters'/>
<function name='exec' decs='Execute an external program'/>
<function name='passthru' decs='Execute an external program and display raw output '/>
<function name='proc_close' decs='Close a process opened by proc_open() and return the exit code of that process. '/>
<function name='proc_get_status' decs='Get information about a process opened by proc_open() '/>
<function name='proc_nice' decs='Change the priority of the current process '/>
<function name='proc_open' decs='Execute a command and open file pointers for input/output '/>
<function name='proc_terminate' decs='kills a process opened by proc_open '/>
<function name='shell_exec' decs='Execute command via shell and return the complete output as a string '/>
<function name='system' decs='Execute an external program and display the output'/>
</package>
<package name='Printer' number='LXXXVII' desc='Printer Functions'>
<function name='printer_abort' decs='Deletes the printer&apos;s spool file'/>
<function name='printer_close' decs='Close an open printer connection'/>
<function name='printer_create_brush' decs='Create a new brush'/>
<function name='printer_create_dc' decs='Create a new device context'/>
<function name='printer_create_font' decs='Create a new font'/>
<function name='printer_create_pen' decs='Create a new pen'/>
<function name='printer_delete_brush' decs='Delete a brush'/>
<function name='printer_delete_dc' decs='Delete a device context'/>
<function name='printer_delete_font' decs='Delete a font'/>
<function name='printer_delete_pen' decs='Delete a pen'/>
<function name='printer_draw_bmp' decs='Draw a bmp'/>
<function name='printer_draw_chord' decs='Draw a chord'/>
<function name='printer_draw_elipse' decs='Draw an ellipse'/>
<function name='printer_draw_line' decs='Draw a line'/>
<function name='printer_draw_pie' decs='Draw a pie'/>
<function name='printer_draw_rectangle' decs='Draw a rectangle'/>
<function name='printer_draw_roundrect' decs='Draw a rectangle with rounded corners'/>
<function name='printer_draw_text' decs='Draw text'/>
<function name='printer_end_doc' decs='Close document'/>
<function name='printer_end_page' decs='Close active page'/>
<function name='printer_get_option' decs='Retrieve printer configuration data'/>
<function name='printer_list' decs='Return an array of printers attached to the server '/>
<function name='printer_logical_fontheight' decs='Get logical font height'/>
<function name='printer_open' decs='Open connection to a printer'/>
<function name='printer_select_brush' decs='Select a brush'/>
<function name='printer_select_font' decs='Select a font'/>
<function name='printer_select_pen' decs='Select a pen'/>
<function name='printer_set_option' decs='Configure the printer connection'/>
<function name='printer_start_doc' decs='Start a new document'/>
<function name='printer_start_page' decs='Start a new page'/>
<function name='printer_write' decs='Write data to the printer'/>
</package>
<package name='Pspell' number='LXXXVIII' desc='Pspell Functions'>
<function name='pspell_add_to_personal' decs='Add the word to a personal wordlist'/>
<function name='pspell_add_to_session' decs='Add the word to the wordlist in the current session '/>
<function name='pspell_check' decs='Check a word'/>
<function name='pspell_clear_session' decs='Clear the current session'/>
<function name='pspell_config_create' decs='Create a config used to open a dictionary'/>
<function name='pspell_config_ignore' decs='Ignore words less than N characters long'/>
<function name='pspell_config_mode' decs='Change the mode number of suggestions returned'/>
<function name='pspell_config_personal' decs='Set a file that contains personal wordlist'/>
<function name='pspell_config_repl' decs='Set a file that contains replacement pairs'/>
<function name='pspell_config_runtogether' decs='Consider run-together words as valid compounds'/>
<function name='pspell_config_save_repl' decs='Determine whether to save a replacement pairs list along with the wordlist'/>
<function name='pspell_new_config' decs='Load a new dictionary with settings based on a given config '/>
<function name='pspell_new_personal' decs='Load a new dictionary with personal wordlist'/>
<function name='pspell_new' decs='Load a new dictionary'/>
<function name='pspell_save_wordlist' decs='Save the personal wordlist to a file'/>
<function name='pspell_store_replacement' decs='Store a replacement pair for a word'/>
<function name='pspell_suggest' decs='Suggest spellings of a word'/>
<const name='PSPELL_FAST'/>
<const name='PSPELL_NORMAL'/>
<const name='PSPELL_BAD_SPELLERS'/>
<const name='PSPELL_RUN_TOGETHER'/>
</package>
<package name='GNU-Readline' number='LXXXIX' desc='GNU Readline'>
<function name='readline_add_history' decs='Adds a line to the history'/>
<function name='readline_clear_history' decs='Clears the history'/>
<function name='readline_completion_function' decs='Registers a completion function'/>
<function name='readline_info' decs='Gets/sets various internal readline variables'/>
<function name='readline_list_history' decs='Lists the history'/>
<function name='readline_read_history' decs='Reads the history'/>
<function name='readline_write_history' decs='Writes the history'/>
<function name='readline' decs='Reads a line'/>
</package>
<package name='GNU-Recode' number='XC' desc='GNU Recode Functions'>
<function name='recode_file' decs='Recode from file to file according to recode request '/>
<function name='recode_string' decs='Recode a string according to a recode request'/>
<function name='recode' decs='Alias of recode_string()'/>
</package>
<package name='Regular-Expression-Perl-Compatible' number='XCI' desc='Regular Expression Functions (Perl-Compatible)'>
<function name='preg_grep' decs='Return array entries that match the pattern '/>
<function name='preg_match_all' decs='Perform a global regular expression match'/>
<function name='preg_match' decs='Perform a regular expression match'/>
<function name='preg_quote' decs='Quote regular expression characters'/>
<function name='preg_replace_callback' decs='Perform a regular expression search and replace using a callback'/>
<function name='preg_replace' decs='Perform a regular expression search and replace'/>
<function name='preg_split' decs='Split string by a regular expression'/>
<const name='PREG_PATTERN_ORDER'/>
<const name='PREG_SET_ORDER'/>
<const name='PREG_OFFSET_CAPTURE'/>
<const name='PREG_SPLIT_NO_EMPTY'/>
<const name='PREG_SPLIT_DELIM_CAPTURE'/>
<const name='PREG_SPLIT_OFFSET_CAPTURE'/>
</package>
<package name='qtdom' number='XCII' desc='qtdom Functions'>
<function name='qdom_error' decs='Returns the error string from the last QDOM operation or FALSE if no errors occurred'/>
<function name='qdom_tree' decs='Creates a tree of an XML string'/>
</package>
<package name='Regular-Expression-POSIX-Extended' number='XCIII' desc='Regular Expression Functions (POSIX Extended)'>
<function name='ereg_replace' decs='Replace regular expression'/>
<function name='ereg' decs='Regular expression match'/>
<function name='eregi_replace' decs='replace regular expression case insensitive'/>
<function name='eregi' decs='case insensitive regular expression match'/>
<function name='split' decs='split string into array by regular expression'/>
<function name='spliti' decs='Split string into array by regular expression case insensitive '/>
<function name='sql_regcase' decs='Make regular expression for case insensitive match '/>
</package>
<package name='Semaphore-Shared-Memory-and-IPC' number='XCIV' desc='Semaphore, Shared Memory and IPC Functions'>
<function name='ftok' decs='Convert a pathname and a project identifier to a System V IPC key '/>
<function name='msg_get_queue' decs='Create or attach to a message queue '/>
<function name='msg_receive' decs='Receive a message from a message queue '/>
<function name='msg_remove_queue' decs='Destroy a message queue '/>
<function name='msg_send' decs='Send a message to a message queue '/>
<function name='msg_set_queue' decs='Set information in the message queue data structure '/>
<function name='msg_stat_queue' decs='Returns information from the message queue data structure '/>
<function name='sem_acquire' decs='Acquire a semaphore'/>
<function name='sem_get' decs='Get a semaphore id'/>
<function name='sem_release' decs='Release a semaphore'/>
<function name='sem_remove' decs='Remove a semaphore'/>
<function name='shm_attach' decs='Creates or open a shared memory segment'/>
<function name='shm_detach' decs='Disconnects from shared memory segment'/>
<function name='shm_get_var' decs='Returns a variable from shared memory'/>
<function name='shm_put_var' decs='Inserts or updates a variable in shared memory'/>
<function name='shm_remove_var' decs='Removes a variable from shared memory '/>
<function name='shm_remove' decs='Removes shared memory from Unix systems'/>
</package>
<package name='SESAM-Database' number='XCV' desc='SESAM Database Functions'>
<function name='sesam_affected_rows' decs='Get number of rows affected by an immediate query '/>
<function name='sesam_commit' decs='Commit pending updates to the SESAM database '/>
<function name='sesam_connect' decs='Open SESAM database connection'/>
<function name='sesam_diagnostic' decs='Return status information for last SESAM call '/>
<function name='sesam_disconnect' decs='Detach from SESAM connection'/>
<function name='sesam_errormsg' decs='Returns error message of last SESAM call'/>
<function name='sesam_execimm' decs='Execute an &quot;immediate&quot; SQL-statement'/>
<function name='sesam_fetch_array' decs='Fetch one row as an associative array'/>
<function name='sesam_fetch_result' decs='Return all or part of a query result'/>
<function name='sesam_fetch_row' decs='Fetch one row as an array'/>
<function name='sesam_field_array' decs='Return meta information about individual columns in a result '/>
<function name='sesam_field_name' decs='Return one column name of the result set '/>
<function name='sesam_free_result' decs='Releases resources for the query'/>
<function name='sesam_num_fields' decs='Return the number of fields/columns in a result set '/>
<function name='sesam_query' decs='Perform a SESAM SQL query and prepare the result'/>
<function name='sesam_rollback' decs='Discard any pending updates to the SESAM database '/>
<function name='sesam_seek_row' decs='Set scrollable cursor mode for subsequent fetches '/>
<function name='sesam_settransaction' decs='Set SESAM transaction parameters'/>
<const name='SESAM_SEEK_NEXT'/>
<const name='SESAM_SEEK_PRIOR'/>
<const name='SESAM_SEEK_FIRST'/>
<const name='SESAM_SEEK_LAST'/>
<const name='SESAM_SEEK_ABSOLUTE'/>
<const name='SESAM_SEEK_RELATIVE'/>
</package>
<package name='Session-Handling' number='XCVI' desc='Session Handling Functions'>
<function name='session_cache_expire' decs='Return current cache expire'/>
<function name='session_cache_limiter' decs='Get and/or set the current cache limiter'/>
<function name='session_commit' decs='Alias of session_write_close()'/>
<function name='session_decode' decs='Decodes session data from a string'/>
<function name='session_destroy' decs='Destroys all data registered to a session'/>
<function name='session_encode' decs='Encodes the current session data as a string '/>
<function name='session_get_cookie_params' decs='Get the session cookie parameters '/>
<function name='session_id' decs='Get and/or set the current session id'/>
<function name='session_is_registered' decs='Find out whether a global variable is registered in a session '/>
<function name='session_module_name' decs='Get and/or set the current session module'/>
<function name='session_name' decs='Get and/or set the current session name'/>
<function name='session_regenerate_id' decs='Update the current session id with a newly generated one '/>
<function name='session_register' decs='Register one or more global variables with the current session '/>
<function name='session_save_path' decs='Get and/or set the current session save path'/>
<function name='session_set_cookie_params' decs='Set the session cookie parameters '/>
<function name='session_set_save_handler' decs='Sets user-level session storage functions '/>
<function name='session_start' decs='Initialize session data'/>
<function name='session_unregister' decs='Unregister a global variable from the current session '/>
<function name='session_unset' decs='Free all session variables '/>
<function name='session_write_close' decs='Write session data and end session'/>
<const name='SID'/>
</package>
<package name='Shared-Memory' number='XCVII' desc='Shared Memory Functions'>
<function name='shmop_close' decs='Close shared memory block'/>
<function name='shmop_delete' decs='Delete shared memory block'/>
<function name='shmop_open' decs='Create or open shared memory block'/>
<function name='shmop_read' decs='Read data from shared memory block'/>
<function name='shmop_size' decs='Get size of shared memory block'/>
<function name='shmop_write' decs='Write data into shared memory block'/>
</package>
<package name='SimpleXML' number='XCVIII' desc='SimpleXML Functions'>
<method class='simplexml_element' call='dynamic' name='asXML' decs='Return a well-formed XML string based on SimpleXML element. '/>
<method class='simplexml_element' call='dynamic' name='attributes' decs='Identifies an element&apos;s attributes. '/>
<method class='simplexml_element' call='dynamic' name='children' decs='Finds children of given node. '/>
<method class='simplexml_element' call='dynamic' name='xpath' decs='Runs Xpath query on XML data. '/>
<function name='simplexml_import_dom' decs='Get a simplexml_element object from a DOM node. '/>
<function name='simplexml_load_file' decs='Interprets an XML file into an object. '/>
<function name='simplexml_load_string' decs='Interprets a string of XML into an object. '/>
</package>
<package name='SOAP' number='XCIX' desc='SOAP Functions'>
<method class='SoapClient' call='static' name='SoapClient' decs='SoapClient constructor '/>
<method class='SoapClient' call='static' name='__call' decs='Calls a SOAP function '/>
<method class='SoapClient' call='static' name='__getFunctions' decs='Returns list of SOAP functions '/>
<method class='SoapClient' call='static' name='__getLastRequest' decs='Returns last SOAP request '/>
<method class='SoapClient' call='static' name='__getLastResponse' decs='Returns last SOAP response '/>
<method class='SoapClient' call='static' name='__getTypes' decs='Returns list of SOAP types '/>
<method class='SoapFault' call='static' name='SoapFault' decs='SoapFault constructor '/>
<method class='SoapHeader' call='static' name='SoapHeader' decs='SoapHeader constructor '/>
<method class='SoapParam' call='static' name='SoapParam' decs='SoapParam constructor '/>
<method class='SoapServer' call='static' name='SoapServer' decs='SoapServer constructor '/>
<method class='SoapServer' call='static' name='addFunction' decs='Adds one or several functions those will handle SOAP requests '/>
<method class='SoapServer' call='static' name='getFunctions' decs='Returns list of defined functions '/>
<method class='SoapServer' call='static' name='handle' decs='Handles a SOAP request '/>
<method class='SoapServer' call='static' name='setClass' decs='Sets class which will handle SOAP requests '/>
<method class='SoapServer' call='static' name='setPersistence' decs='Sets persistence mode of SoapServer '/>
<method class='SoapVar' call='static' name='SoapVar' decs='SoapVar constructor '/>
<function name='is_soap_fault' decs='Checks if SOAP call was failed '/>
<const name='SOAP_1_1'/>
<const name='SOAP_1_2'/>
<const name='SOAP_PERSISTENCE_SESSION'/>
<const name='SOAP_PERSISTENCE_REQUEST'/>
<const name='SOAP_FUNCTIONS_ALL'/>
<const name='SOAP_ENCODED'/>
<const name='SOAP_LITERAL'/>
<const name='SOAP_RPC'/>
<const name='SOAP_DOCUMENT'/>
<const name='SOAP_ACTOR_NEXT'/>
<const name='SOAP_ACTOR_NONE'/>
<const name='SOAP_ACTOR_UNLIMATERECEIVER'/>
<const name='UNKNOWN_TYPE'/>
<const name='XSD_STRING'/>
<const name='XSD_BOOLEAN'/>
<const name='XSD_DECIMAL'/>
<const name='XSD_FLOAT'/>
<const name='XSD_DOUBLE'/>
<const name='XSD_DURATION'/>
<const name='XSD_DATETIME'/>
<const name='XSD_TIME'/>
<const name='XSD_DATE'/>
<const name='XSD_GYEARMONTH'/>
<const name='XSD_GYEAR'/>
<const name='XSD_GMONTHDAY'/>
<const name='XSD_GDAY'/>
<const name='XSD_GMONTH'/>
<const name='XSD_HEXBINARY'/>
<const name='XSD_BASE64BINARY'/>
<const name='XSD_ANYURI'/>
<const name='XSD_QNAME'/>
<const name='XSD_NOTATION'/>
<const name='XSD_NORMALIZEDSTRING'/>
<const name='XSD_TOKEN'/>
<const name='XSD_LANGUAGE'/>
<const name='XSD_NMTOKEN'/>
<const name='XSD_NAME'/>
<const name='XSD_NCNAME'/>
<const name='XSD_ID'/>
<const name='XSD_IDREF'/>
<const name='XSD_IDREFS'/>
<const name='XSD_ENTITY'/>
<const name='XSD_ENTITIES'/>
<const name='XSD_INTEGER'/>
<const name='XSD_NONPOSITIVEINTEGER'/>
<const name='XSD_NEGATIVEINTEGER'/>
<const name='XSD_LONG'/>
<const name='XSD_INT'/>
<const name='XSD_SHORT'/>
<const name='XSD_BYTE'/>
<const name='XSD_NONNEGATIVEINTEGER'/>
<const name='XSD_UNSIGNEDLONG'/>
<const name='XSD_UNSIGNEDINT'/>
<const name='XSD_UNSIGNEDSHORT'/>
<const name='XSD_UNSIGNEDBYTE'/>
<const name='XSD_POSITIVEINTEGER'/>
<const name='XSD_NMTOKENS'/>
<const name='XSD_ANYTYPE'/>
<const name='SOAP_ENC_OBJECT'/>
<const name='SOAP_ENC_ARRAY'/>
<const name='XSD_1999_TIMEINSTANT'/>
<const name='XSD_NAMESPACE'/>
<const name='XSD_1999_NAMESPACE'/>
</package>
<package name='SQLite' number='C' desc='SQLite'>
<function name='sqlite_array_query' decs='Execute a query against a given database and returns an array.'/>
<function name='sqlite_busy_timeout' decs='Set busy timeout duration, or disable busy handlers.'/>
<function name='sqlite_changes' decs='Returns the number of rows that were changed by the most recent SQL statement. '/>
<function name='sqlite_close' decs='Closes an open SQLite database.'/>
<function name='sqlite_column' decs='Fetches a column from the current row of a result set.'/>
<function name='sqlite_create_aggregate' decs='Register an aggregating UDF for use in SQL statements.'/>
<function name='sqlite_create_function' decs='Registers a &quot;regular&quot; User Defined Function for use in SQL statements. '/>
<function name='sqlite_current' decs='Fetches the current row from a result set as an array.'/>
<function name='sqlite_error_string' decs='Returns the textual description of an error code.'/>
<function name='sqlite_escape_string' decs='Escapes a string for use as a query parameter'/>
<function name='sqlite_fetch_array' decs='Fetches the next row from a result set as an array.'/>
<function name='sqlite_fetch_single' decs='Fetches the first column of a result set as a string.'/>
<function name='sqlite_fetch_string' decs='Alias of sqlite_fetch_single()'/>
<function name='sqlite_field_name' decs='Returns the name of a particular field.'/>
<function name='sqlite_has_more' decs='Returns whether or not more rows are available.'/>
<function name='sqlite_last_error' decs='Returns the error code of the last error for a database.'/>
<function name='sqlite_last_insert_rowid' decs='Returns the rowid of the most recently inserted row.'/>
<function name='sqlite_libencoding' decs='Returns the encoding of the linked SQLite library.'/>
<function name='sqlite_libversion' decs='Returns the version of the linked SQLite library.'/>
<function name='sqlite_next' decs='Seek to the next row number.'/>
<function name='sqlite_num_fields' decs='Returns the number of fields in a result set.'/>
<function name='sqlite_num_rows' decs='Returns the number of rows in a buffered result set.'/>
<function name='sqlite_open' decs='Opens a SQLite database. Will create the database if it does not exist'/>
<function name='sqlite_popen' decs='Opens a persistent handle to an SQLite database. Will create the database if it does not exist. '/>
<function name='sqlite_query' decs='Executes a query against a given database and returns a result handle. '/>
<function name='sqlite_rewind' decs='Seek to the first row number.'/>
<function name='sqlite_seek' decs='Seek to a particular row number of a buffered result set.'/>
<function name='sqlite_udf_decode_binary' decs='Decode binary data passed as parameters to an UDF.'/>
<function name='sqlite_udf_encode_binary' decs='Encode binary data before returning it from an UDF.'/>
<function name='sqlite_unbuffered_query' decs='Execute a query that does not prefetch and buffer all data'/>
<const name='SQLITE_ASSOC'/>
<const name='SQLITE_BOTH'/>
<const name='SQLITE_NUM'/>
</package>
<package name='Shockwave-Flash' number='CI' desc='Shockwave Flash Functions'>
<function name='swf_actiongeturl' decs='Get a URL from a Shockwave Flash movie'/>
<function name='swf_actiongotoframe' decs='Play a frame and then stop'/>
<function name='swf_actiongotolabel' decs='Display a frame with the specified label '/>
<function name='swf_actionnextframe' decs='Go forward one frame'/>
<function name='swf_actionplay' decs='Start playing the flash movie from the current frame '/>
<function name='swf_actionprevframe' decs='Go backwards one frame'/>
<function name='swf_actionsettarget' decs='Set the context for actions'/>
<function name='swf_actionstop' decs='Stop playing the flash movie at the current frame '/>
<function name='swf_actiontogglequality' decs='Toggle between low and high quality '/>
<function name='swf_actionwaitforframe' decs='Skip actions if a frame has not been loaded '/>
<function name='swf_addbuttonrecord' decs='Controls location, appearance and active area of the current button '/>
<function name='swf_addcolor' decs='Set the global add color to the rgba value specified '/>
<function name='swf_closefile' decs='Close the current Shockwave Flash file'/>
<function name='swf_definebitmap' decs='Define a bitmap'/>
<function name='swf_definefont' decs='Defines a font '/>
<function name='swf_defineline' decs='Define a line'/>
<function name='swf_definepoly' decs='Define a polygon '/>
<function name='swf_definerect' decs='Define a rectangle'/>
<function name='swf_definetext' decs='Define a text string'/>
<function name='swf_endbutton' decs='End the definition of the current button '/>
<function name='swf_enddoaction' decs='End the current action'/>
<function name='swf_endshape' decs='Completes the definition of the current shape '/>
<function name='swf_endsymbol' decs='End the definition of a symbol'/>
<function name='swf_fontsize' decs='Change the font size'/>
<function name='swf_fontslant' decs='Set the font slant'/>
<function name='swf_fonttracking' decs='Set the current font tracking'/>
<function name='swf_getbitmapinfo' decs='Get information about a bitmap'/>
<function name='swf_getfontinfo' decs='The height in pixels of a capital A and a lowercase x '/>
<function name='swf_getframe' decs='Get the frame number of the current frame'/>
<function name='swf_labelframe' decs='Label the current frame'/>
<function name='swf_lookat' decs='Define a viewing transformation'/>
<function name='swf_modifyobject' decs='Modify an object'/>
<function name='swf_mulcolor' decs='Sets the global multiply color to the rgba value specified '/>
<function name='swf_nextid' decs='Returns the next free object id'/>
<function name='swf_oncondition' decs='Describe a transition used to trigger an action list '/>
<function name='swf_openfile' decs='Open a new Shockwave Flash file'/>
<function name='swf_ortho2' decs='Defines 2D orthographic mapping of user coordinates onto the current viewport '/>
<function name='swf_ortho' decs='Defines an orthographic mapping of user coordinates onto the current viewport '/>
<function name='swf_perspective' decs='Define a perspective projection transformation '/>
<function name='swf_placeobject' decs='Place an object onto the screen'/>
<function name='swf_polarview' decs='Define the viewer&apos;s position with polar coordinates '/>
<function name='swf_popmatrix' decs='Restore a previous transformation matrix '/>
<function name='swf_posround' decs='Enables or Disables the rounding of the translation when objects are placed or moved '/>
<function name='swf_pushmatrix' decs='Push the current transformation matrix back unto the stack '/>
<function name='swf_removeobject' decs='Remove an object'/>
<function name='swf_rotate' decs='Rotate the current transformation'/>
<function name='swf_scale' decs='Scale the current transformation'/>
<function name='swf_setfont' decs='Change the current font'/>
<function name='swf_setframe' decs='Switch to a specified frame'/>
<function name='swf_shapearc' decs='Draw a circular arc'/>
<function name='swf_shapecurveto3' decs='Draw a cubic bezier curve'/>
<function name='swf_shapecurveto' decs='Draw a quadratic bezier curve between two points '/>
<function name='swf_shapefillbitmapclip' decs='Set current fill mode to clipped bitmap '/>
<function name='swf_shapefillbitmaptile' decs='Set current fill mode to tiled bitmap '/>
<function name='swf_shapefilloff' decs='Turns off filling'/>
<function name='swf_shapefillsolid' decs='Set the current fill style to the specified color '/>
<function name='swf_shapelinesolid' decs='Set the current line style'/>
<function name='swf_shapelineto' decs='Draw a line'/>
<function name='swf_shapemoveto' decs='Move the current position'/>
<function name='swf_showframe' decs='Display the current frame'/>
<function name='swf_startbutton' decs='Start the definition of a button'/>
<function name='swf_startdoaction' decs='Start a description of an action list for the current frame '/>
<function name='swf_startshape' decs='Start a complex shape'/>
<function name='swf_startsymbol' decs='Define a symbol'/>
<function name='swf_textwidth' decs='Get the width of a string'/>
<function name='swf_translate' decs='Translate the current transformations'/>
<function name='swf_viewport' decs='Select an area for future drawing'/>
<const name='MOD_COLOR'/>
<const name='MOD_MATRIX'/>
<const name='TYPE_PUSHBUTTON'/>
<const name='TYPE_MENUBUTTON'/>
<const name='BSHitTest'/>
<const name='BSDown'/>
<const name='BSOver'/>
<const name='BSUp'/>
<const name='OverDowntoIdle'/>
<const name='IdletoOverDown'/>
<const name='OutDowntoIdle'/>
<const name='OutDowntoOverDown'/>
<const name='OverDowntoOutDown'/>
<const name='OverUptoOverDown'/>
<const name='OverUptoIdle'/>
<const name='IdletoOverUp'/>
<const name='ButtonEnter'/>
<const name='ButtonExit'/>
<const name='MenuEnter'/>
<const name='MenuExit'/>
</package>
<package name='SNMP' number='CII' desc='SNMP Functions'>
<function name='snmp_get_quick_print' decs='Fetches the current value of the UCD library&apos;s quick_print setting '/>
<function name='snmp_set_quick_print' decs='Set the value of quick_print within the UCD SNMP library '/>
<function name='snmpget' decs='Fetch an SNMP object'/>
<function name='snmprealwalk' decs='Return all objects including their respective object ID within the specified one '/>
<function name='snmpset' decs='Set an SNMP object'/>
<function name='snmpwalk' decs='Fetch all the SNMP objects from an agent'/>
<function name='snmpwalkoid' decs='Query for a tree of information about a network entity '/>
</package>
<package name='Socket' number='CIII' desc='Socket Functions'>
<function name='socket_accept' decs='Accepts a connection on a socket'/>
<function name='socket_bind' decs='Binds a name to a socket'/>
<function name='socket_clear_error' decs='Clears the error on the socket or the last error code'/>
<function name='socket_close' decs='Closes a socket resource'/>
<function name='socket_connect' decs='Initiates a connection on a socket'/>
<function name='socket_create_listen' decs='Opens a socket on port to accept connections '/>
<function name='socket_create_pair' decs='Creates a pair of indistinguishable sockets and stores them in fds. '/>
<function name='socket_create' decs='Create a socket (endpoint for communication)'/>
<function name='socket_get_option' decs='Gets socket options for the socket '/>
<function name='socket_getpeername' decs='Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type. '/>
<function name='socket_getsockname' decs='Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type. '/>
<function name='socket_iovec_add' decs='Adds a new vector to the scatter/gather array '/>
<function name='socket_iovec_alloc' decs='Builds a &apos;struct iovec&apos; for use with sendmsg, recvmsg, writev, and readv '/>
<function name='socket_iovec_delete' decs='Deletes a vector from an array of vectors '/>
<function name='socket_iovec_fetch' decs='Returns the data held in the iovec specified by iovec_id[iovec_position] '/>
<function name='socket_iovec_free' decs='Frees the iovec specified by iovec_id '/>
<function name='socket_iovec_set' decs='Sets the data held in iovec_id[iovec_position] to new_val '/>
<function name='socket_last_error' decs='Returns the last error on the socket '/>
<function name='socket_listen' decs='Listens for a connection on a socket'/>
<function name='socket_read' decs='Reads a maximum of length bytes from a socket'/>
<function name='socket_readv' decs='Reads from an fd, using the scatter-gather array defined by iovec_id '/>
<function name='socket_recv' decs='Receives data from a connected socket '/>
<function name='socket_recvfrom' decs='Receives data from a socket, connected or not '/>
<function name='socket_recvmsg' decs='Used to receive messages on a socket, whether connection-oriented or not '/>
<function name='socket_select' decs='Runs the select() system call on the given arrays of sockets with a specified timeout '/>
<function name='socket_send' decs='Sends data to a connected socket '/>
<function name='socket_sendmsg' decs='Sends a message to a socket, regardless of whether it is connection-oriented or not '/>
<function name='socket_sendto' decs='Sends a message to a socket, whether it is connected or not '/>
<function name='socket_set_block' decs='Sets blocking mode on a socket resource '/>
<function name='socket_set_nonblock' decs='Sets nonblocking mode for file descriptor fd '/>
<function name='socket_set_option' decs='Sets socket options for the socket'/>
<function name='socket_shutdown' decs='Shuts down a socket for receiving, sending, or both. '/>
<function name='socket_strerror' decs='Return a string describing a socket error'/>
<function name='socket_write' decs='Write to a socket'/>
<function name='socket_writev' decs='Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id '/>
<const name='AF_UNIX'/>
<const name='AF_INET'/>
<const name='AF_INET6'/>
<const name='SOCK_STREAM'/>
<const name='SOCK_DGRAM'/>
<const name='SOCK_RAW'/>
<const name='SOCK_SEQPACKET'/>
<const name='SOCK_RDM'/>
<const name='MSG_OOB'/>
<const name='MSG_WAITALL'/>
<const name='MSG_PEEK'/>
<const name='MSG_DONTROUTE'/>
<const name='SO_DEBUG'/>
<const name='SO_REUSEADDR'/>
<const name='SO_KEEPALIVE'/>
<const name='SO_DONTROUTE'/>
<const name='SO_LINGER'/>
<const name='SO_BROADCAST'/>
<const name='SO_OOBINLINE'/>
<const name='SO_SNDBUF'/>
<const name='SO_RCVBUF'/>
<const name='SO_SNDLOWAT'/>
<const name='SO_RCVLOWAT'/>
<const name='SO_SNDTIMEO'/>
<const name='SO_RCVTIMEO'/>
<const name='SO_TYPE'/>
<const name='SO_ERROR'/>
<const name='SOL_SOCKET'/>
<const name='PHP_NORMAL_READ'/>
<const name='PHP_BINARY_READ'/>
<const name='SOL_TCP'/>
<const name='SOL_UDP'/>
</package>
<package name='Standard-PHP-Library-SPL' number='CIV' desc='Standard PHP Library (SPL) Functions'>
<method class='ArrayIterator' call='static' name='current' decs='Return current array entry '/>
<method class='ArrayIterator' call='static' name='hasMore' decs='Check whether array contains more entries '/>
<method class='ArrayIterator' call='static' name='key' decs='Return current array key '/>
<method class='ArrayIterator' call='static' name='next' decs='Move to next entry '/>
<method class='ArrayIterator' call='static' name='rewind' decs='Rewind array back to the start '/>
<method class='ArrayObject' call='static' name='__construct' decs=''/>
<method class='ArrayObject' call='static' name='getIterator' decs='Create a new iterator from a ArrayObject instance '/>
<method class='DirectoryIterator' call='static' name='__construct' decs='Constructs a new dir iterator from a path. '/>
<method class='DirectoryIterator' call='static' name='current' decs='Return this (needed for Iterator interface) '/>
<method class='DirectoryIterator' call='static' name='fileATime' decs='Get last access time of file '/>
<method class='DirectoryIterator' call='static' name='fileCTime' decs='Get inode modification time of file '/>
<method class='DirectoryIterator' call='static' name='fileGroup' decs='Get file group '/>
<method class='DirectoryIterator' call='static' name='fileInode' decs='Get file inode '/>
<method class='DirectoryIterator' call='static' name='fileMTime' decs='Get last modification time of file '/>
<method class='DirectoryIterator' call='static' name='fileOwner' decs='Get file owner '/>
<method class='DirectoryIterator' call='static' name='filePerms' decs='Get file permissions '/>
<method class='DirectoryIterator' call='static' name='fileSize' decs='Get file size '/>
<method class='DirectoryIterator' call='static' name='fileType' decs='Get file type '/>
<method class='DirectoryIterator' call='static' name='getChildren' decs='Returns an iterator for the current entry if it is a directory '/>
<method class='DirectoryIterator' call='static' name='getFilename' decs='Return filename of current dir entry '/>
<method class='DirectoryIterator' call='static' name='getPath' decs='Return directory path '/>
<method class='DirectoryIterator' call='static' name='getPathname' decs='Return path and filename of current dir entry '/>
<method class='DirectoryIterator' call='static' name='hasMore' decs='Check whether dir contains more entries '/>
<method class='DirectoryIterator' call='static' name='isDir' decs='Returns true if file is directory '/>
<method class='DirectoryIterator' call='static' name='isDot' decs='Returns true if current entry is &apos;.&apos; or &apos;..&apos; '/>
<method class='DirectoryIterator' call='static' name='isExecutable' decs='Returns true if file is executable '/>
<method class='DirectoryIterator' call='static' name='isFile' decs='Returns true if file is a regular file '/>
<method class='DirectoryIterator' call='static' name='isLink' decs='Returns true if file is symbolic link '/>
<method class='DirectoryIterator' call='static' name='isReadable' decs='Returns true if file can be read '/>
<method class='DirectoryIterator' call='static' name='isWritable' decs='Returns true if file can be written '/>
<method class='DirectoryIterator' call='static' name='key' decs='Return current dir entry '/>
<method class='DirectoryIterator' call='static' name='next' decs='Move to next entry '/>
<method class='DirectoryIterator' call='static' name='rewind' decs='Rewind dir back to the start '/>
<method class='RecursiveDirectoryIterator' call='static' name='hasChildren' decs='Returns whether current entry is a directory and not &apos;.&apos; or &apos;..&apos; '/>
<method class='RecursiveDirectoryIterator' call='static' name='key' decs='Return path and filename of current dir entry '/>
<method class='RecursiveDirectoryIterator' call='static' name='next' decs='Move to next entry '/>
<method class='RecursiveDirectoryIterator' call='static' name='rewind' decs='Rewind dir back to the start '/>
<const name='RIT_LEAVES_ONLY'/>
<const name='RIT_SELF_FIRST'/>
<const name='RIT_CHILD_FIRST'/>
<const name='CIT_CALL_TOSTRING'/>
<const name='CIT_CATCH_GET_CHILD'/>
</package>
<package name='Stream' number='CV' desc='Stream Functions'>
<function name='stream_context_create' decs='Create a streams context'/>
<function name='stream_context_get_options' decs='Retrieve options for a stream/wrapper/context'/>
<function name='stream_context_set_option' decs='Sets an option for a stream/wrapper/context'/>
<function name='stream_context_set_params' decs='Set parameters for a stream/wrapper/context'/>
<function name='stream_copy_to_stream' decs='Copies data from one stream to another'/>
<function name='stream_filter_append' decs='Attach a filter to a stream.'/>
<function name='stream_filter_prepend' decs='Attach a filter to a stream.'/>
<function name='stream_filter_register' decs='Register a stream filter implemented as a PHP class derived from php_user_filter '/>
<function name='stream_get_contents' decs='Reads remainder of a stream into a string'/>
<function name='stream_get_filters' decs='Retrieve list of registered filters'/>
<function name='stream_get_line' decs='Gets line from stream resource up to a given delimiter'/>
<function name='stream_get_meta_data' decs='Retrieves header/meta data from streams/file pointers'/>
<function name='stream_get_transports' decs='Retrieve list of registered socket transports'/>
<function name='stream_get_wrappers' decs='Retrieve list of registered streams'/>
<function name='stream_register_wrapper' decs='Alias of stream_wrapper_register()'/>
<function name='stream_select' decs='Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec '/>
<function name='stream_set_blocking' decs='Set blocking/non-blocking mode on a stream'/>
<function name='stream_set_timeout' decs='Set timeout period on a stream'/>
<function name='stream_set_write_buffer' decs='Sets file buffering on the given stream'/>
<function name='stream_socket_accept' decs='Accept a connection on a socket created by stream_socket_server() '/>
<function name='stream_socket_client' decs='Open Internet or Unix domain socket connection '/>
<function name='stream_socket_get_name' decs='Retrieve the name of the local or remote sockets'/>
<function name='stream_socket_recvfrom' decs='Receives data from a socket, connected or not '/>
<function name='stream_socket_sendto' decs='Sends a message to a socket, whether it is connected or not '/>
<function name='stream_socket_server' decs='Create an Internet or Unix domain server socket '/>
<function name='stream_wrapper_register' decs='Register a URL wrapper implemented as a PHP class'/>
<const name='STREAM_FILTER_READ'/>
<const name='STREAM_FILTER_WRITE'/>
<const name='STREAM_FILTER_ALL'/>
<const name='PSFS_PASS_ON'/>
<const name='PSFS_FEED_ME'/>
<const name='PSFS_ERR_FATAL'/>
<const name='STREAM_USE_PATH'/>
<const name='STREAM_REPORT_ERRORS'/>
<const name='STREAM_CLIENT_ASYNC_CONNECT'/>
<const name='STREAM_CLIENT_PERSISTENT'/>
<const name='STREAM_SERVER_BIND'/>
<const name='STREAM_SERVER_LISTEN'/>
<const name='STREAM_NOTIFY_RESOLVE'/>
<const name='STREAM_NOTIFY_CONNECT'/>
<const name='STREAM_NOTIFY_AUTH_REQUIRED'/>
<const name='STREAM_NOTIFY_MIME_TYPE_IS'/>
<const name='STREAM_NOTIFY_FILE_SIZE_IS'/>
<const name='STREAM_NOTIFY_REDIRECTED'/>
<const name='STREAM_NOTIFY_PROGRESS'/>
<const name='STREAM_NOTIFY_COMPLETED'/>
<const name='STREAM_NOTIFY_FAILURE'/>
<const name='STREAM_NOTIFY_AUTH_RESULT'/>
<const name='STREAM_NOTIFY_SEVERITY_INFO'/>
<const name='STREAM_NOTIFY_SEVERITY_WARN'/>
<const name='STREAM_NOTIFY_SEVERITY_ERR'/>
</package>
<package name='String' number='CVI' desc='String Functions'>
<function name='addcslashes' decs='Quote string with slashes in a C style'/>
<function name='addslashes' decs='Quote string with slashes'/>
<function name='bin2hex' decs='Convert binary data into hexadecimal representation '/>
<function name='chop' decs='Alias of rtrim()'/>
<function name='chr' decs='Return a specific character'/>
<function name='chunk_split' decs='Split a string into smaller chunks'/>
<function name='convert_cyr_string' decs='Convert from one Cyrillic character set to another '/>
<function name='count_chars' decs='Return information about characters used in a string '/>
<function name='crc32' decs='Calculates the crc32 polynomial of a string'/>
<function name='crypt' decs='One-way string encryption (hashing)'/>
<function name='explode' decs='Split a string by string'/>
<function name='fprintf' decs='Write a formatted string to a stream'/>
<function name='get_html_translation_table' decs='Returns the translation table used by htmlspecialchars() and htmlentities() '/>
<function name='hebrev' decs='Convert logical Hebrew text to visual text '/>
<function name='hebrevc' decs='Convert logical Hebrew text to visual text with newline conversion '/>
<function name='html_entity_decode' decs='Convert all HTML entities to their applicable characters '/>
<function name='htmlentities' decs='Convert all applicable characters to HTML entities '/>
<function name='htmlspecialchars' decs='Convert special characters to HTML entities '/>
<function name='implode' decs='Join array elements with a string'/>
<function name='join' decs='Alias of implode()'/>
<function name='levenshtein' decs='Calculate Levenshtein distance between two strings '/>
<function name='localeconv' decs='Get numeric formatting information'/>
<function name='ltrim' decs='Strip whitespace from the beginning of a string '/>
<function name='md5_file' decs='Calculates the md5 hash of a given filename'/>
<function name='md5' decs='Calculate the md5 hash of a string'/>
<function name='metaphone' decs='Calculate the metaphone key of a string'/>
<function name='money_format' decs='Formats a number as a currency string'/>
<function name='nl_langinfo' decs='Query language and locale information '/>
<function name='nl2br' decs='Inserts HTML line breaks before all newlines in a string '/>
<function name='number_format' decs='Format a number with grouped thousands'/>
<function name='ord' decs='Return ASCII value of character'/>
<function name='parse_str' decs='Parses the string into variables'/>
<function name='printf' decs='Output a formatted string'/>
<function name='quoted_printable_decode' decs='Convert a quoted-printable string to an 8 bit string '/>
<function name='quotemeta' decs='Quote meta characters'/>
<function name='rtrim' decs='Strip whitespace from the end of a string '/>
<function name='setlocale' decs='Set locale information'/>
<function name='sha1_file' decs='Calculate the sha1 hash of a file'/>
<function name='sha1' decs='Calculate the sha1 hash of a string'/>
<function name='similar_text' decs='Calculate the similarity between two strings '/>
<function name='soundex' decs='Calculate the soundex key of a string'/>
<function name='sprintf' decs='Return a formatted string'/>
<function name='sscanf' decs='Parses input from a string according to a format '/>
<function name='str_ireplace' decs='Case-insensitive version of str_replace(). '/>
<function name='str_pad' decs='Pad a string to a certain length with another string '/>
<function name='str_repeat' decs='Repeat a string'/>
<function name='str_replace' decs='Replace all occurrences of the search string with the replacement string '/>
<function name='str_rot13' decs='Perform the rot13 transform on a string'/>
<function name='str_shuffle' decs='Randomly shuffles a string'/>
<function name='str_split' decs='Convert a string to an array '/>
<function name='str_word_count' decs='Return information about words used in a string '/>
<function name='strcasecmp' decs='Binary safe case-insensitive string comparison '/>
<function name='strchr' decs='Alias of strstr()'/>
<function name='strcmp' decs='Binary safe string comparison'/>
<function name='strcoll' decs='Locale based string comparison'/>
<function name='strcspn' decs='Find length of initial segment not matching mask '/>
<function name='strip_tags' decs='Strip HTML and PHP tags from a string'/>
<function name='stripcslashes' decs='Un-quote string quoted with addcslashes() '/>
<function name='stripos' decs='Find position of first occurrence of a case-insensitive string '/>
<function name='stripslashes' decs='Un-quote string quoted with addslashes() '/>
<function name='stristr' decs='Case-insensitive strstr() '/>
<function name='strlen' decs='Get string length'/>
<function name='strnatcasecmp' decs='Case insensitive string comparisons using a &quot;natural order&quot; algorithm '/>
<function name='strnatcmp' decs='String comparisons using a &quot;natural order&quot; algorithm '/>
<function name='strncasecmp' decs='Binary safe case-insensitive string comparison of the first n characters '/>
<function name='strncmp' decs='Binary safe string comparison of the first n characters '/>
<function name='strpos' decs='Find position of first occurrence of a string '/>
<function name='strrchr' decs='Find the last occurrence of a character in a string '/>
<function name='strrev' decs='Reverse a string'/>
<function name='strripos' decs='Find position of last occurrence of a case-insensitive string in a string '/>
<function name='strrpos' decs='Find position of last occurrence of a char in a string '/>
<function name='strspn' decs='Find length of initial segment matching mask '/>
<function name='strstr' decs='Find first occurrence of a string'/>
<function name='strtok' decs='Tokenize string'/>
<function name='strtolower' decs='Make a string lowercase'/>
<function name='strtoupper' decs='Make a string uppercase'/>
<function name='strtr' decs='Translate certain characters'/>
<function name='substr_compare' decs='Binary safe optionally case insensitive comparison of 2 strings from an offset, up to length characters '/>
<function name='substr_count' decs='Count the number of substring occurrences'/>
<function name='substr_replace' decs='Replace text within a portion of a string'/>
<function name='substr' decs='Return part of a string'/>
<function name='trim' decs='Strip whitespace from the beginning and end of a string '/>
<function name='ucfirst' decs='Make a string&apos;s first character uppercase'/>
<function name='ucwords' decs='Uppercase the first character of each word in a string '/>
<function name='vprintf' decs='Output a formatted string'/>
<function name='vsprintf' decs='Return a formatted string'/>
<function name='wordwrap' decs='Wraps a string to a given number of characters using a string break character. '/>
<const name='CRYPT_SALT_LENGTH'/>
<const name='CRYPT_STD_DES'/>
<const name='CRYPT_EXT_DES'/>
<const name='CRYPT_MD5'/>
<const name='CRYPT_BLOWFISH'/>
<const name='HTML_SPECIALCHARS'/>
<const name='HTML_ENTITIES'/>
<const name='ENT_COMPAT'/>
<const name='ENT_QUOTES'/>
<const name='ENT_NOQUOTES'/>
<const name='CHAR_MAX'/>
<const name='LC_CTYPE'/>
<const name='LC_NUMERIC'/>
<const name='LC_TIME'/>
<const name='LC_COLLATE'/>
<const name='LC_MONETARY'/>
<const name='LC_ALL'/>
<const name='LC_MESSAGES'/>
<const name='STR_PAD_LEFT'/>
<const name='STR_PAD_RIGHT'/>
<const name='STR_PAD_BOTH'/>
</package>
<package name='Sybase' number='CVII' desc='Sybase Functions'>
<function name='sybase_affected_rows' decs='Gets number of affected rows in last query'/>
<function name='sybase_close' decs='Closes a Sybase connection'/>
<function name='sybase_connect' decs='Opens a Sybase server connection'/>
<function name='sybase_data_seek' decs='Moves internal row pointer'/>
<function name='sybase_deadlock_retry_count' decs='Sets the deadlock retry count'/>
<function name='sybase_fetch_array' decs='Fetch row as array'/>
<function name='sybase_fetch_assoc' decs='Fetch a result row as an associative array'/>
<function name='sybase_fetch_field' decs='Get field information from a result'/>
<function name='sybase_fetch_object' decs='Fetch a row as an object'/>
<function name='sybase_fetch_row' decs='Get a result row as an enumerated array'/>
<function name='sybase_field_seek' decs='Sets field offset'/>
<function name='sybase_free_result' decs='Frees result memory'/>
<function name='sybase_get_last_message' decs='Returns the last message from the server'/>
<function name='sybase_min_client_severity' decs='Sets minimum client severity'/>
<function name='sybase_min_error_severity' decs='Sets minimum error severity'/>
<function name='sybase_min_message_severity' decs='Sets minimum message severity'/>
<function name='sybase_min_server_severity' decs='Sets minimum server severity'/>
<function name='sybase_num_fields' decs='Gets the number of fields in a result set'/>
<function name='sybase_num_rows' decs='Get number of rows in a result set'/>
<function name='sybase_pconnect' decs='Open persistent Sybase connection'/>
<function name='sybase_query' decs='Sends a Sybase query'/>
<function name='sybase_result' decs='Get result data'/>
<function name='sybase_select_db' decs='Selects a Sybase database'/>
<function name='sybase_set_message_handler' decs='Sets the handler called when a server message is raised'/>
<function name='sybase_unbuffered_query' decs='Send a Sybase query and do not block'/>
</package>
<package name='TCP-Wrappers' number='CVIII' desc='TCP Wrappers Functions'>
<function name='tcpwrap_check' decs='tcpwrap check '/>
</package>
<package name='Tidy' number='CIX' desc='Tidy Functions'>
<function name='ob_tidyhandler' decs='ob_start callback function to repair the buffer '/>
<function name='tidy_access_count' decs='Returns the Number of Tidy accessibility warnings encountered for specified document. '/>
<function name='tidy_clean_repair' decs='Execute configured cleanup and repair operations on parsed markup '/>
<function name='tidy_config_count' decs='Returns the Number of Tidy configuration errors encountered for specified document. '/>
<function name='tidy_diagnose' decs='Run configured diagnostics on parsed and repaired markup. '/>
<function name='tidy_error_count' decs='Returns the Number of Tidy errors encountered for specified document. '/>
<function name='tidy_get_body' decs='Returns a TidyNode Object starting from the &lt;body&gt; tag of the tidy parse tree '/>
<function name='tidy_get_config' decs='Get current Tidy configuration '/>
<function name='tidy_get_error_buffer' decs='Return warnings and errors which occurred parsing the specified document '/>
<function name='tidy_get_head' decs='Returns a TidyNode Object starting from the &lt;head&gt; tag of the tidy parse tree '/>
<function name='tidy_get_html_ver' decs='Get the Detected HTML version for the specified document. '/>
<function name='tidy_get_html' decs='Returns a TidyNode Object starting from the &lt;html&gt; tag of the tidy parse tree '/>
<function name='tidy_get_output' decs='Return a string representing the parsed tidy markup '/>
<function name='tidy_get_release' decs='Get release date (version) for Tidy library '/>
<function name='tidy_get_root' decs='Returns a TidyNode Object representing the root of the tidy parse tree '/>
<function name='tidy_get_status' decs='Get status of specified document. '/>
<function name='tidy_getopt' decs='Returns the value of the specified configuration option for the tidy document. '/>
<function name='tidy_is_xhtml' decs='Indicates if the document is a XHTML document. '/>
<function name='tidy_is_xml' decs='Indicates if the document is a generic (non HTML/XHTML) XML document. '/>
<function name='tidy_load_config' decs='Load an ASCII Tidy configuration file with the specified encoding '/>
<method class='tidy_node' call='dynamic' name='attributes' decs='Returns an array of attribute objects for node '/>
<method class='tidy_node' call='dynamic' name='children' decs='Returns an array of child nodes '/>
<method class='tidy_node' call='dynamic' name='get_attr' decs='Return the attribute with the provided attribute id '/>
<method class='tidy_node' call='dynamic' name='get_nodes' decs='Return an array of nodes under this node with the specified id '/>
<method class='tidy_node' call='dynamic' name='has_children' decs='Returns true if this node has children '/>
<method class='tidy_node' call='dynamic' name='has_siblings' decs='Returns true if this node has siblings '/>
<method class='tidy_node' call='dynamic' name='is_asp' decs='Returns true if this node is ASP '/>
<method class='tidy_node' call='dynamic' name='is_comment' decs='Returns true if this node represents a comment '/>
<method class='tidy_node' call='dynamic' name='is_html' decs='Returns true if this node is part of a HTML document '/>
<method class='tidy_node' call='dynamic' name='is_jsp' decs='Returns true if this node is JSP '/>
<method class='tidy_node' call='dynamic' name='is_jste' decs='Returns true if this node is JSTE '/>
<method class='tidy_node' call='dynamic' name='is_text' decs='Returns true if this node represents text (no markup) '/>
<method class='tidy_node' call='dynamic' name='is_xhtml' decs='Returns true if this node is part of a XHTML document '/>
<method class='tidy_node' call='dynamic' name='is_xml' decs='Returns true if this node is part of a XML document '/>
<method class='tidy_node' call='dynamic' name='next' decs='Returns the next sibling to this node '/>
<method class='tidy_node' call='dynamic' name='prev' decs='Returns the previous sibling to this node '/>
<method class='tidy_node' call='dynamic' name='tidy_node' decs='Constructor. '/>
<function name='tidy_parse_file' decs='Parse markup in file or URI '/>
<function name='tidy_parse_string' decs='Parse a document stored in a string '/>
<function name='tidy_repair_file' decs='Repair a file and return it as a string '/>
<function name='tidy_repair_string' decs='Repair a string using an optionally provided configuration file '/>
<function name='tidy_reset_config' decs='Restore Tidy configuration to default values '/>
<function name='tidy_save_config' decs='Save current settings to named file. Only non-default values are written. '/>
<function name='tidy_set_encoding' decs='Set the input/output character encoding for parsing markup. '/>
<function name='tidy_setopt' decs='Updates the configuration settings for the specified tidy document. '/>
<function name='tidy_warning_count' decs='Returns the Number of Tidy warnings encountered for specified document. '/>
<const name='TIDY_TAG_UNKNOWN'/>
<const name='TIDY_TAG_A'/>
<const name='TIDY_TAG_ABBR'/>
<const name='TIDY_TAG_ACRONYM'/>
<const name='TIDY_TAG_ALIGN'/>
<const name='TIDY_TAG_APPLET'/>
<const name='TIDY_TAG_AREA'/>
<const name='TIDY_TAG_B'/>
<const name='TIDY_TAG_BASE'/>
<const name='TIDY_TAG_BASEFONT'/>
<const name='TIDY_TAG_BDO'/>
<const name='TIDY_TAG_BGSOUND'/>
<const name='TIDY_TAG_BIG'/>
<const name='TIDY_TAG_BLINK'/>
<const name='TIDY_TAG_BLOCKQUOTE'/>
<const name='TIDY_TAG_BODY'/>
<const name='TIDY_TAG_BR'/>
<const name='TIDY_TAG_BUTTON'/>
<const name='TIDY_TAG_CAPTION'/>
<const name='TIDY_TAG_CENTER'/>
<const name='TIDY_TAG_CITE'/>
<const name='TIDY_TAG_CODE'/>
<const name='TIDY_TAG_COL'/>
<const name='TIDY_TAG_COLGROUP'/>
<const name='TIDY_TAG_COMMENT'/>
<const name='TIDY_TAG_DD'/>
<const name='TIDY_TAG_DEL'/>
<const name='TIDY_TAG_DFN'/>
<const name='TIDY_TAG_DIR'/>
<const name='TIDY_TAG_DIV'/>
<const name='TIDY_TAG_DL'/>
<const name='TIDY_TAG_DT'/>
<const name='TIDY_TAG_EM'/>
<const name='TIDY_TAG_EMBED'/>
<const name='TIDY_TAG_FIELDSET'/>
<const name='TIDY_TAG_FONT'/>
<const name='TIDY_TAG_FORM'/>
<const name='TIDY_TAG_FRAME'/>
<const name='TIDY_TAG_FRAMESET'/>
<const name='TIDY_TAG_H1'/>
<const name='TIDY_TAG_H2'/>
<const name='TIDY_TAG_H3'/>
<const name='TIDY_TAG_H4'/>
<const name='TIDY_TAG_H5'/>
<const name='TIDY_TAG_6'/>
<const name='TIDY_TAG_HEAD'/>
<const name='TIDY_TAG_HR'/>
<const name='TIDY_TAG_HTML'/>
<const name='TIDY_TAG_I'/>
<const name='TIDY_TAG_IFRAME'/>
<const name='TIDY_TAG_ILAYER'/>
<const name='TIDY_TAG_IMG'/>
<const name='TIDY_TAG_INPUT'/>
<const name='TIDY_TAG_INS'/>
<const name='TIDY_TAG_ISINDEX'/>
<const name='TIDY_TAG_KBD'/>
<const name='TIDY_TAG_KEYGEN'/>
<const name='TIDY_TAG_LABEL'/>
<const name='TIDY_TAG_LAYER'/>
<const name='TIDY_TAG_LEGEND'/>
<const name='TIDY_TAG_LI'/>
<const name='TIDY_TAG_LINK'/>
<const name='TIDY_TAG_LISTING'/>
<const name='TIDY_TAG_MAP'/>
<const name='TIDY_TAG_MARQUEE'/>
<const name='TIDY_TAG_MENU'/>
<const name='TIDY_TAG_META'/>
<const name='TIDY_TAG_MULTICOL'/>
<const name='TIDY_TAG_NOBR'/>
<const name='TIDY_TAG_NOEMBED'/>
<const name='TIDY_TAG_NOFRAMES'/>
<const name='TIDY_TAG_NOLAYER'/>
<const name='TIDY_TAG_NOSAFE'/>
<const name='TIDY_TAG_NOSCRIPT'/>
<const name='TIDY_TAG_OBJECT'/>
<const name='TIDY_TAG_OL'/>
<const name='TIDY_TAG_OPTGROUP'/>
<const name='TIDY_TAG_OPTION'/>
<const name='TIDY_TAG_P'/>
<const name='TIDY_TAG_PARAM'/>
<const name='TIDY_TAG_PLAINTEXT'/>
<const name='TIDY_TAG_PRE'/>
<const name='TIDY_TAG_Q'/>
<const name='TIDY_TAG_RP'/>
<const name='TIDY_TAG_RT'/>
<const name='TIDY_TAG_RTC'/>
<const name='TIDY_TAG_RUBY'/>
<const name='TIDY_TAG_S'/>
<const name='TIDY_TAG_SAMP'/>
<const name='TIDY_TAG_SCRIPT'/>
<const name='TIDY_TAG_SELECT'/>
<const name='TIDY_TAG_SERVER'/>
<const name='TIDY_TAG_SERVLET'/>
<const name='TIDY_TAG_SMALL'/>
<const name='TIDY_TAG_SPACER'/>
<const name='TIDY_TAG_SPAN'/>
<const name='TIDY_TAG_STRIKE'/>
<const name='TIDY_TAG_STRONG'/>
<const name='TIDY_TAG_STYLE'/>
<const name='TIDY_TAG_SUB'/>
<const name='TIDY_TAG_TABLE'/>
<const name='TIDY_TAG_TBODY'/>
<const name='TIDY_TAG_TD'/>
<const name='TIDY_TAG_TEXTAREA'/>
<const name='TIDY_TAG_TFOOT'/>
<const name='TIDY_TAG_TH'/>
<const name='TIDY_TAG_THEAD'/>
<const name='TIDY_TAG_TITLE'/>
<const name='TIDY_TAG_TR'/>
<const name='TIDY_TAG_TR'/>
<const name='TIDY_TAG_TT'/>
<const name='TIDY_TAG_U'/>
<const name='TIDY_TAG_UL'/>
<const name='TIDY_TAG_VAR'/>
<const name='TIDY_TAG_WBR'/>
<const name='TIDY_TAG_XMP'/>
<const name='TIDY_ATTR_UNKNOWN'/>
<const name='TIDY_ATTR_ABBR'/>
<const name='TIDY_ATTR_ACCEPT'/>
<const name='TIDY_ATTR_ACCEPT_CHARSET'/>
<const name='TIDY_ATTR_ACCESSKEY'/>
<const name='TIDY_ATTR_ACTION'/>
<const name='TIDY_ATTR_ADD_DATE'/>
<const name='TIDY_ATTR_ALIGN'/>
<const name='TIDY_ATTR_ALINK'/>
<const name='TIDY_ATTR_ALT'/>
<const name='TIDY_ATTR_ARCHIVE'/>
<const name='TIDY_ATTR_AXIS'/>
<const name='TIDY_ATTR_BACKGROUND'/>
<const name='TIDY_ATTR_BGCOLOR'/>
<const name='TIDY_ATTR_BGPROPERTIES'/>
<const name='TIDY_ATTR_BORDER'/>
<const name='TIDY_ATTR_BORDERCOLOR'/>
<const name='TIDY_ATTR_BOTTOMMARGIN'/>
<const name='TIDY_ATTR_CELLPADDING'/>
<const name='TIDY_ATTR_CELLSPACING'/>
<const name='TIDY_ATTR_CHAR'/>
<const name='TIDY_ATTR_CHAROFF'/>
<const name='TIDY_ATTR_CHARSET'/>
<const name='TIDY_ATTR_CHECKED'/>
<const name='TIDY_ATTR_CITE'/>
<const name='TIDY_ATTR_CLASS'/>
<const name='TIDY_ATTR_CLASSID'/>
<const name='TIDY_ATTR_CLEAR'/>
<const name='TIDY_ATTR_CODE'/>
<const name='TIDY_ATTR_CODEBASE'/>
<const name='TIDY_ATTR_CODETYPE'/>
<const name='TIDY_ATTR_COLOR'/>
<const name='TIDY_ATTR_COLS'/>
<const name='TIDY_ATTR_COLSPAN'/>
<const name='TIDY_ATTR_COMPACT'/>
<const name='TIDY_ATTR_CONTENT'/>
<const name='TIDY_ATTR_COORDS'/>
<const name='TIDY_ATTR_DATA'/>
<const name='TIDY_ATTR_DATAFLD'/>
<const name='TIDY_ATTR_DATAPAGESIZE'/>
<const name='TIDY_ATTR_DATASRC'/>
<const name='TIDY_ATTR_DATETIME'/>
<const name='TIDY_ATTR_DECLARE'/>
<const name='TIDY_ATTR_DEFER'/>
<const name='TIDY_ATTR_DIR'/>
<const name='TIDY_ATTR_DISABLED'/>
<const name='TIDY_ATTR_ENCODING'/>
<const name='TIDY_ATTR_ENCTYPE'/>
<const name='TIDY_ATTR_FACE'/>
<const name='TIDY_ATTR_FOR'/>
<const name='TIDY_ATTR_FRAME'/>
<const name='TIDY_ATTR_FRAMEBORDER'/>
<const name='TIDY_ATTR_FRAMESPACING'/>
<const name='TIDY_ATTR_GRIDX'/>
<const name='TIDY_ATTR_GRIDY'/>
<const name='TIDY_ATTR_HEADERS'/>
<const name='TIDY_ATTR_HEIGHT'/>
<const name='TIDY_ATTR_HREF'/>
<const name='TIDY_ATTR_HREFLANG'/>
<const name='TIDY_ATTR_HSPACE'/>
<const name='TIDY_ATTR_HTTP_EQUIV'/>
<const name='TIDY_ATTR_ID'/>
<const name='TIDY_ATTR_ISMAP'/>
<const name='TIDY_ATTR_LABEL'/>
<const name='TIDY_ATTR_LANG'/>
<const name='TIDY_ATTR_LANGUAGE'/>
<const name='TIDY_ATTR_LAST_MODIFIED'/>
<const name='TIDY_ATTR_LAST_VISIT'/>
<const name='TIDY_ATTR_LEFTMARGIN'/>
<const name='TIDY_ATTR_LINK'/>
<const name='TIDY_ATTR_LONGDESC'/>
<const name='TIDY_ATTR_LOWSRC'/>
<const name='TIDY_ATTR_MARGINHEIGHT'/>
<const name='TIDY_ATTR_MARGINWIDTH'/>
<const name='TIDY_ATTR_MAXLENGTH'/>
<const name='TIDY_ATTR_MEDIA'/>
<const name='TIDY_ATTR_METHOD'/>
<const name='TIDY_ATTR_MULTIPLE'/>
<const name='TIDY_ATTR_NAME'/>
<const name='TIDY_ATTR_NOHREF'/>
<const name='TIDY_ATTR_NORESIZE'/>
<const name='TIDY_ATTR_NOSHADE'/>
<const name='TIDY_ATTR_NOWRAP'/>
<const name='TIDY_ATTR_OBJECT'/>
<const name='TIDY_ATTR_OnAFTERUPDATE'/>
<const name='TIDY_ATTR_OnBEFOREUNLOAD'/>
<const name='TIDY_ATTR_OnBEFOREUPDATE'/>
<const name='TIDY_ATTR_OnBLUR'/>
<const name='TIDY_ATTR_OnCHANGE'/>
<const name='TIDY_ATTR_OnCLICK'/>
<const name='TIDY_ATTR_OnDATAAVAILABLE'/>
<const name='TIDY_ATTR_OnDATASETCHANGED'/>
<const name='TIDY_ATTR_OnDATASETCOMPLETE'/>
<const name='TIDY_ATTR_OnDBLCLICK'/>
<const name='TIDY_ATTR_OnERRORUPDATE'/>
<const name='TIDY_ATTR_OnFOCUS'/>
<const name='TIDY_ATTR_OnKEYDOWN'/>
<const name='TIDY_ATTR_OnKEYPRESS'/>
<const name='TIDY_ATTR_OnKEYUP'/>
<const name='TIDY_ATTR_OnLOAD'/>
<const name='TIDY_ATTR_OnMOUSEDOWN'/>
<const name='TIDY_ATTR_OnMOUSEMOVE'/>
<const name='TIDY_ATTR_OnMOUSEOUT'/>
<const name='TIDY_ATTR_OnMOUSEOVER'/>
<const name='TIDY_ATTR_OnMOUSEUP'/>
<const name='TIDY_ATTR_OnRESET'/>
<const name='TIDY_ATTR_OnROWENTER'/>
<const name='TIDY_ATTR_OnROWEXIT'/>
<const name='TIDY_ATTR_OnSELECT'/>
<const name='TIDY_ATTR_OnSUBMIT'/>
<const name='TIDY_ATTR_OnUNLOAD'/>
<const name='TIDY_ATTR_PROFILE'/>
<const name='TIDY_ATTR_PROMPT'/>
<const name='TIDY_ATTR_RBSPAN'/>
<const name='TIDY_ATTR_READONLY'/>
<const name='TIDY_ATTR_REL'/>
<const name='TIDY_ATTR_REV'/>
<const name='TIDY_ATTR_RIGHTMARGIN'/>
<const name='TIDY_ATTR_ROWS'/>
<const name='TIDY_ATTR_ROWSPAN'/>
<const name='TIDY_ATTR_RULES'/>
<const name='TIDY_ATTR_SCHEME'/>
<const name='TIDY_ATTR_SCOPE'/>
<const name='TIDY_ATTR_SCROLLING'/>
<const name='TIDY_ATTR_SELECTED'/>
<const name='TIDY_ATTR_SHAPE'/>
<const name='TIDY_ATTR_SHOWGRID'/>
<const name='TIDY_ATTR_SHOWGRIDX'/>
<const name='TIDY_ATTR_SHOWGRIDY'/>
<const name='TIDY_ATTR_SIZE'/>
<const name='TIDY_ATTR_SPAN'/>
<const name='TIDY_ATTR_SRC'/>
<const name='TIDY_ATTR_STANDBY'/>
<const name='TIDY_ATTR_START'/>
<const name='TIDY_ATTR_STYLE'/>
<const name='TIDY_ATTR_SUMMARY'/>
<const name='TIDY_ATTR_TABINDEX'/>
<const name='TIDY_ATTR_TARGET'/>
<const name='TIDY_ATTR_TEXT'/>
<const name='TIDY_ATTR_TITLE'/>
<const name='TIDY_ATTR_TOPMARGIN'/>
<const name='TIDY_ATTR_TYPE'/>
<const name='TIDY_ATTR_USEMAP'/>
<const name='TIDY_ATTR_VALIGN'/>
<const name='TIDY_ATTR_VALUE'/>
<const name='TIDY_ATTR_VALUETYPE'/>
<const name='TIDY_ATTR_VERSION'/>
<const name='TIDY_ATTR_VLINK'/>
<const name='TIDY_ATTR_VSPACE'/>
<const name='TIDY_ATTR_WIDTH'/>
<const name='TIDY_ATTR_WRAP'/>
<const name='TIDY_ATTR_XML_LANG'/>
<const name='TIDY_ATTR_XML_SPACE'/>
<const name='TIDY_ATTR_XMLNS'/>
<const name='TIDY_NODETYPE_ROOT'/>
<const name='TIDY_NODETYPE_DOCTYPE'/>
<const name='TIDY_NODETYPE_COMMENT'/>
<const name='TIDY_NODETYPE_PROCINS'/>
<const name='TIDY_NODETYPE_TEXT'/>
<const name='TIDY_NODETYPE_START'/>
<const name='TIDY_NODETYPE_END'/>
<const name='TIDY_NODETYPE_STARTEND'/>
<const name='TIDY_NODETYPE_CDATA'/>
<const name='TIDY_NODETYPE_SECTION'/>
<const name='TIDY_NODETYPE_ASP'/>
<const name='TIDY_NODETYPE_JSTE'/>
<const name='TIDY_NODETYPE_PHP'/>
<const name='TIDY_NODETYPE_XMLDECL'/>
</package>
<package name='Tokenizer' number='CX' desc='Tokenizer Functions'>
<function name='token_get_all' decs='Split given source into PHP tokens'/>
<function name='token_name' decs='Get the symbolic name of a given PHP token'/>
<const name='T_INCLUDE'/>
<const name='T_INCLUDE_ONCE'/>
<const name='T_EVAL'/>
<const name='T_REQUIRE'/>
<const name='T_REQUIRE_ONCE'/>
<const name='T_LOGICAL_OR'/>
<const name='T_LOGICAL_XOR'/>
<const name='T_LOGICAL_AND'/>
<const name='T_PRINT'/>
<const name='T_PLUS_EQUAL'/>
<const name='T_MINUS_EQUAL'/>
<const name='T_MUL_EQUAL'/>
<const name='T_DIV_EQUAL'/>
<const name='T_CONCAT_EQUAL'/>
<const name='T_MOD_EQUAL'/>
<const name='T_AND_EQUAL'/>
<const name='T_OR_EQUAL'/>
<const name='T_XOR_EQUAL'/>
<const name='T_SL_EQUAL'/>
<const name='T_SR_EQUAL'/>
<const name='T_BOOLEAN_OR'/>
<const name='T_BOOLEAN_AND'/>
<const name='T_IS_EQUAL'/>
<const name='T_IS_NOT_EQUAL'/>
<const name='T_IS_IDENTICAL'/>
<const name='T_IS_NOT_IDENTICAL'/>
<const name='T_IS_SMALLER_OR_EQUAL'/>
<const name='T_IS_GREATER_OR_EQUAL'/>
<const name='T_SL'/>
<const name='T_SR'/>
<const name='T_INC'/>
<const name='T_DEC'/>
<const name='T_INT_CAST'/>
<const name='T_DOUBLE_CAST'/>
<const name='T_STRING_CAST'/>
<const name='T_ARRAY_CAST'/>
<const name='T_OBJECT_CAST'/>
<const name='T_BOOL_CAST'/>
<const name='T_UNSET_CAST'/>
<const name='T_NEW'/>
<const name='T_EXIT'/>
<const name='T_IF'/>
<const name='T_ELSEIF'/>
<const name='T_ELSE'/>
<const name='T_ENDIF'/>
<const name='T_LNUMBER'/>
<const name='T_DNUMBER'/>
<const name='T_STRING'/>
<const name='T_STRING_VARNAME'/>
<const name='T_VARIABLE'/>
<const name='T_NUM_STRING'/>
<const name='T_INLINE_HTML'/>
<const name='T_CHARACTER'/>
<const name='T_BAD_CHARACTER'/>
<const name='T_ENCAPSED_AND_WHITESPACE'/>
<const name='T_CONSTANT_ENCAPSED_STRING'/>
<const name='T_ECHO'/>
<const name='T_DO'/>
<const name='T_WHILE'/>
<const name='T_ENDWHILE'/>
<const name='T_FOR'/>
<const name='T_ENDFOR'/>
<const name='T_FOREACH'/>
<const name='T_ENDFOREACH'/>
<const name='T_DECLARE'/>
<const name='T_ENDDECLARE'/>
<const name='T_AS'/>
<const name='T_SWITCH'/>
<const name='T_ENDSWITCH'/>
<const name='T_CASE'/>
<const name='T_DEFAULT'/>
<const name='T_BREAK'/>
<const name='T_CONTINUE'/>
<const name='T_OLD_FUNCTION'/>
<const name='T_FUNCTION'/>
<const name='T_CONST'/>
<const name='T_RETURN'/>
<const name='T_USE'/>
<const name='T_GLOBAL'/>
<const name='T_STATIC'/>
<const name='T_VAR'/>
<const name='T_UNSET'/>
<const name='T_ISSET'/>
<const name='T_EMPTY'/>
<const name='T_CLASS'/>
<const name='T_EXTENDS'/>
<const name='T_OBJECT_OPERATOR'/>
<const name='T_DOUBLE_ARROW'/>
<const name='T_LIST'/>
<const name='T_ARRAY'/>
<const name='T_LINE'/>
<const name='T_FILE'/>
<const name='T_COMMENT'/>
<const name='T_ML_COMMENT'/>
<const name='T_DOC_COMMENT'/>
<const name='T_OPEN_TAG'/>
<const name='T_OPEN_TAG_WITH_ECHO'/>
<const name='T_CLOSE_TAG'/>
<const name='T_WHITESPACE'/>
<const name='T_START_HEREDOC'/>
<const name='T_END_HEREDOC'/>
<const name='T_DOLLAR_OPEN_CURLY_BRACES'/>
<const name='T_CURLY_OPEN'/>
<const name='T_PAAMAYIM_NEKUDOTAYIM'/>
<const name='T_DOUBLE_COLON'/>
</package>
<package name='URL' number='CXI' desc='URL Functions'>
<function name='base64_decode' decs='Decodes data encoded with MIME base64'/>
<function name='base64_encode' decs='Encodes data with MIME base64'/>
<function name='get_meta_tags' decs='Extracts all meta tag content attributes from a file and returns an array '/>
<function name='http_build_query' decs='Generate URL-encoded query string'/>
<function name='parse_url' decs='Parse a URL and return its components'/>
<function name='rawurldecode' decs='Decode URL-encoded strings'/>
<function name='rawurlencode' decs='URL-encode according to RFC 1738'/>
<function name='urldecode' decs='Decodes URL-encoded string'/>
<function name='urlencode' decs='URL-encodes string'/>
</package>
<package name='Variable' number='CXII' desc='Variable Functions'>
<function name='doubleval' decs='Alias of floatval()'/>
<function name='floatval' decs='Get float value of a variable'/>
<function name='get_defined_vars' decs='Returns an array of all defined variables '/>
<function name='get_resource_type' decs='Returns the resource type '/>
<function name='gettype' decs='Get the type of a variable'/>
<function name='import_request_variables' decs='Import GET/POST/Cookie variables into the global scope'/>
<function name='intval' decs='Get integer value of a variable'/>
<function name='is_array' decs='Finds whether a variable is an array'/>
<function name='is_bool' decs='Finds out whether a variable is a boolean '/>
<function name='is_callable' decs='Verify that the contents of a variable can be called as a function '/>
<function name='is_double' decs='Alias of is_float()'/>
<function name='is_float' decs='Finds whether a variable is a float'/>
<function name='is_int' decs='Find whether a variable is an integer'/>
<function name='is_integer' decs='Alias of is_int()'/>
<function name='is_long' decs='Alias of is_int()'/>
<function name='is_null' decs='Finds whether a variable is NULL '/>
<function name='is_numeric' decs='Finds whether a variable is a number or a numeric string '/>
<function name='is_object' decs='Finds whether a variable is an object'/>
<function name='is_real' decs='Alias of is_float()'/>
<function name='is_resource' decs='Finds whether a variable is a resource '/>
<function name='is_scalar' decs='Finds whether a variable is a scalar '/>
<function name='is_string' decs='Finds whether a variable is a string'/>
<function name='print_r' decs='Prints human-readable information about a variable '/>
<function name='serialize' decs='Generates a storable representation of a value '/>
<function name='settype' decs='Set the type of a variable'/>
<function name='strval' decs='Get string value of a variable'/>
<function name='unserialize' decs='Creates a PHP value from a stored representation '/>
<function name='var_dump' decs='Dumps information about a variable'/>
<function name='var_export' decs='Outputs or returns a parsable string representation of a variable'/>
</package>
<package name='vpopmail' number='CXIII' desc='vpopmail Functions'>
<function name='vpopmail_add_alias_domain_ex' decs='Add alias to an existing virtual domain'/>
<function name='vpopmail_add_alias_domain' decs='Add an alias for a virtual domain'/>
<function name='vpopmail_add_domain_ex' decs='Add a new virtual domain'/>
<function name='vpopmail_add_domain' decs='Add a new virtual domain'/>
<function name='vpopmail_add_user' decs='Add a new user to the specified virtual domain'/>
<function name='vpopmail_alias_add' decs='insert a virtual alias'/>
<function name='vpopmail_alias_del_domain' decs='deletes all virtual aliases of a domain'/>
<function name='vpopmail_alias_del' decs='deletes all virtual aliases of a user'/>
<function name='vpopmail_alias_get_all' decs='get all lines of an alias for a domain'/>
<function name='vpopmail_alias_get' decs='get all lines of an alias for a domain'/>
<function name='vpopmail_auth_user' decs='Attempt to validate a username/domain/password. Returns true/false'/>
<function name='vpopmail_del_domain_ex' decs='Delete a virtual domain'/>
<function name='vpopmail_del_domain' decs='Delete a virtual domain'/>
<function name='vpopmail_del_user' decs='Delete a user from a virtual domain'/>
<function name='vpopmail_error' decs='Get text message for last vpopmail error. Returns string'/>
<function name='vpopmail_passwd' decs='Change a virtual user&apos;s password'/>
<function name='vpopmail_set_user_quota' decs='Sets a virtual user&apos;s quota'/>
</package>
<package name='W32api' number='CXIV' desc='W32api Functions'>
<function name='w32api_deftype' decs='Defines a type for use with other w32api_functions'/>
<function name='w32api_init_dtype' decs='Creates an instance of the data type typename and fills it with the values passed '/>
<function name='w32api_invoke_function' decs='Invokes function funcname with the arguments passed after the function name'/>
<function name='w32api_register_function' decs='Registers function function_name from library with PHP'/>
<function name='w32api_set_call_method' decs='Sets the calling method used'/>
<const name='DC_MICROSOFT'/>
<const name='DC_BORLAND'/>
<const name='DC_CALL_CDECL'/>
<const name='DC_CALL_STD'/>
<const name='DC_RETVAL_MATH4'/>
<const name='DC_RETVAL_MATH8'/>
<const name='DC_CALL_STD_BO'/>
<const name='DC_CALL_STD_MS'/>
<const name='DC_CALL_STD_M8'/>
<const name='DC_FLAG_ARGPTR'/>
</package>
<package name='WDDX' number='CXV' desc='WDDX Functions'>
<function name='wddx_add_vars' decs='Add variables to a WDDX packet with the specified ID '/>
<function name='wddx_deserialize' decs='Deserializes a WDDX packet'/>
<function name='wddx_packet_end' decs='Ends a WDDX packet with the specified ID'/>
<function name='wddx_packet_start' decs='Starts a new WDDX packet with structure inside it '/>
<function name='wddx_serialize_value' decs='Serialize a single value into a WDDX packet'/>
<function name='wddx_serialize_vars' decs='Serialize variables into a WDDX packet'/>
</package>
<package name='XML-Parser' number='CXVI' desc='XML Parser Functions'>
<function name='utf8_decode' decs='Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1. '/>
<function name='utf8_encode' decs='encodes an ISO-8859-1 string to UTF-8'/>
<function name='xml_error_string' decs='get XML parser error string'/>
<function name='xml_get_current_byte_index' decs='get current byte index for an XML parser'/>
<function name='xml_get_current_column_number' decs='Get current column number for an XML parser '/>
<function name='xml_get_current_line_number' decs='get current line number for an XML parser'/>
<function name='xml_get_error_code' decs='get XML parser error code'/>
<function name='xml_parse_into_struct' decs='Parse XML data into an array structure'/>
<function name='xml_parse' decs='start parsing an XML document'/>
<function name='xml_parser_create_ns' decs='Create an XML parser with namespace support '/>
<function name='xml_parser_create' decs='create an XML parser'/>
<function name='xml_parser_free' decs='Free an XML parser'/>
<function name='xml_parser_get_option' decs='get options from an XML parser'/>
<function name='xml_parser_set_option' decs='set options in an XML parser'/>
<function name='xml_set_character_data_handler' decs='set up character data handler'/>
<function name='xml_set_default_handler' decs='set up default handler'/>
<function name='xml_set_element_handler' decs='set up start and end element handlers'/>
<function name='xml_set_end_namespace_decl_handler' decs='Set up character data handler '/>
<function name='xml_set_external_entity_ref_handler' decs='set up external entity reference handler'/>
<function name='xml_set_notation_decl_handler' decs='set up notation declaration handler'/>
<function name='xml_set_object' decs='Use XML Parser within an object'/>
<function name='xml_set_processing_instruction_handler' decs='Set up processing instruction (PI) handler '/>
<function name='xml_set_start_namespace_decl_handler' decs='Set up character data handler '/>
<function name='xml_set_unparsed_entity_decl_handler' decs='Set up unparsed entity declaration handler '/>
<const name='XML_ERROR_NONE'/>
<const name='XML_ERROR_NO_MEMORY'/>
<const name='XML_ERROR_SYNTAX'/>
<const name='XML_ERROR_NO_ELEMENTS'/>
<const name='XML_ERROR_INVALID_TOKEN'/>
<const name='XML_ERROR_UNCLOSED_TOKEN'/>
<const name='XML_ERROR_PARTIAL_CHAR'/>
<const name='XML_ERROR_TAG_MISMATCH'/>
<const name='XML_ERROR_DUPLICATE_ATTRIBUTE'/>
<const name='XML_ERROR_JUNK_AFTER_DOC_ELEMENT'/>
<const name='XML_ERROR_PARAM_ENTITY_REF'/>
<const name='XML_ERROR_UNDEFINED_ENTITY'/>
<const name='XML_ERROR_RECURSIVE_ENTITY_REF'/>
<const name='XML_ERROR_ASYNC_ENTITY'/>
<const name='XML_ERROR_BAD_CHAR_REF'/>
<const name='XML_ERROR_BINARY_ENTITY_REF'/>
<const name='XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF'/>
<const name='XML_ERROR_MISPLACED_XML_PI'/>
<const name='XML_ERROR_UNKNOWN_ENCODING'/>
<const name='XML_ERROR_INCORRECT_ENCODING'/>
<const name='XML_ERROR_UNCLOSED_CDATA_SECTION'/>
<const name='XML_ERROR_EXTERNAL_ENTITY_HANDLING'/>
<const name='XML_OPTION_CASE_FOLDING'/>
<const name='XML_OPTION_TARGET_ENCODING'/>
<const name='XML_OPTION_SKIP_TAGSTART'/>
<const name='XML_OPTION_SKIP_WHITE'/>
</package>
<package name='XML-RPC' number='CXVII' desc='XML-RPC Functions'>
<function name='xmlrpc_decode_request' decs='Decodes XML into native PHP types'/>
<function name='xmlrpc_decode' decs='Decodes XML into native PHP types'/>
<function name='xmlrpc_encode_request' decs='Generates XML for a method request'/>
<function name='xmlrpc_encode' decs='Generates XML for a PHP value'/>
<function name='xmlrpc_get_type' decs='Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings'/>
<function name='xmlrpc_parse_method_descriptions' decs='Decodes XML into a list of method descriptions'/>
<function name='xmlrpc_server_add_introspection_data' decs='Adds introspection documentation'/>
<function name='xmlrpc_server_call_method' decs='Parses XML requests and call methods'/>
<function name='xmlrpc_server_create' decs='Creates an xmlrpc server'/>
<function name='xmlrpc_server_destroy' decs='Destroys server resources'/>
<function name='xmlrpc_server_register_introspection_callback' decs='Register a PHP function to generate documentation'/>
<function name='xmlrpc_server_register_method' decs='Register a PHP function to resource method matching method_name'/>
<function name='xmlrpc_set_type' decs='Sets xmlrpc type, base64 or datetime, for a PHP string value'/>
</package>
<package name='xdiff' number='CXVIII' desc='xdiff Functions'>
<function name='xdiff_file_diff_binary' decs='Make binary diff of two files. '/>
<function name='xdiff_file_diff' decs='Make unified diff of two files. '/>
<function name='xdiff_file_merge3' decs='Merge 3 files into one. '/>
<function name='xdiff_file_patch_binary' decs='Patch a file with a binary diff. '/>
<function name='xdiff_file_patch' decs='Patch a file with an unified diff. '/>
<function name='xdiff_string_diff_binary' decs='Make binary diff of two strings. '/>
<function name='xdiff_string_diff' decs='Make unified diff of two strings. '/>
<function name='xdiff_string_merge3' decs='Merge 3 strings into one. '/>
<function name='xdiff_string_patch_binary' decs='Patch a string with a binary diff. '/>
<function name='xdiff_string_patch' decs='Patch a string with an unified diff. '/>
<const name='XDIFF_PATCH_NORMAL'/>
<const name='XDIFF_PATCH_REVERSE'/>
</package>
<package name='XSLT' number='CXIX' desc='XSLT Functions'>
<function name='xslt_create' decs='Create a new XSLT processor'/>
<function name='xslt_errno' decs='Returns an error number'/>
<function name='xslt_error' decs='Returns an error string'/>
<function name='xslt_free' decs='Free XSLT processor'/>
<function name='xslt_process' decs='Perform an XSLT transformation'/>
<function name='xslt_set_base' decs='Set the base URI for all XSLT transformations'/>
<function name='xslt_set_encoding' decs='Set the encoding for the parsing of XML documents'/>
<function name='xslt_set_error_handler' decs='Set an error handler for a XSLT processor'/>
<function name='xslt_set_log' decs='Set the log file to write log messages to'/>
<function name='xslt_set_sax_handler' decs='Set SAX handlers for a XSLT processor'/>
<function name='xslt_set_sax_handlers' decs='Set the SAX handlers to be called when the XML document gets processed '/>
<function name='xslt_set_scheme_handler' decs='Set Scheme handlers for a XSLT processor'/>
<function name='xslt_set_scheme_handlers' decs='Set the scheme handlers for the XSLT processor '/>
<const name='XSLT_OPT_SILENT'/>
<const name='XSLT_SABOPT_PARSE_PUBLIC_ENTITIES'/>
<const name='XSLT_SABOPT_DISABLE_ADDING_META'/>
<const name='XSLT_SABOPT_DISABLE_STRIPPING'/>
<const name='XSLT_SABOPT_IGNORE_DOC_NOT_FOUND'/>
<const name='XSLT_ERR_UNSUPPORTED_SCHEME'/>
</package>
<package name='YAZ' number='CXX' desc='YAZ Functions'>
<function name='yaz_addinfo' decs='Returns additional error information'/>
<function name='yaz_ccl_conf' decs='Configure CCL parser'/>
<function name='yaz_ccl_parse' decs='Invoke CCL Parser'/>
<function name='yaz_close' decs='Close YAZ connection'/>
<function name='yaz_connect' decs='Prepares for a connection to a Z39.50 server. '/>
<function name='yaz_database' decs='Specifies the databases within a session '/>
<function name='yaz_element' decs='Specifies Element-Set Name for retrieval '/>
<function name='yaz_errno' decs='Returns error number'/>
<function name='yaz_error' decs='Returns error description'/>
<function name='yaz_es_result' decs='Inspects Extended Services Result '/>
<function name='yaz_get_option' decs='Returns value of option for connection'/>
<function name='yaz_hits' decs='Returns number of hits for last search'/>
<function name='yaz_itemorder' decs='Prepares for Z39.50 Item Order with an ILL-Request package '/>
<function name='yaz_present' decs='Prepares for retrieval (Z39.50 present). '/>
<function name='yaz_range' decs='Specifies the maximum number of records to retrieve '/>
<function name='yaz_record' decs='Returns a record'/>
<function name='yaz_scan_result' decs='Returns Scan Response result'/>
<function name='yaz_scan' decs='Prepares for a scan'/>
<function name='yaz_schema' decs='Specifies schema for retrieval. '/>
<function name='yaz_search' decs='Prepares for a search'/>
<function name='yaz_set_option' decs='Sets one or more options for connection'/>
<function name='yaz_sort' decs='Sets sorting criteria'/>
<function name='yaz_syntax' decs='Specifies the preferred record syntax for retrieval. '/>
<function name='yaz_wait' decs='Wait for Z39.50 requests to complete'/>
</package>
<package name='YP-NIS' number='CXXI' desc='YP/NIS Functions'>
<function name='yp_all' decs='Traverse the map and call a function on each entry '/>
<function name='yp_cat' decs='Return an array containing the entire map '/>
<function name='yp_err_string' decs='Returns the error string associated with the given error code '/>
<function name='yp_errno' decs='Returns the error code of the previous operation '/>
<function name='yp_first' decs='Returns the first key-value pair from the named map '/>
<function name='yp_get_default_domain' decs='Fetches the machine&apos;s default NIS domain'/>
<function name='yp_master' decs='Returns the machine name of the master NIS server for a map '/>
<function name='yp_match' decs='Returns the matched line'/>
<function name='yp_next' decs='Returns the next key-value pair in the named map.'/>
<function name='yp_order' decs='Returns the order number for a map'/>
<const name='YPERR_BADARGS'/>
<const name='YPERR_BADDB'/>
<const name='YPERR_BUSY'/>
<const name='YPERR_DOMAIN'/>
<const name='YPERR_KEY'/>
<const name='YPERR_MAP'/>
<const name='YPERR_NODOM'/>
<const name='YPERR_NOMORE'/>
<const name='YPERR_PMAP'/>
<const name='YPERR_RESRC'/>
<const name='YPERR_RPC'/>
<const name='YPERR_YPBIND'/>
<const name='YPERR_YPERR'/>
<const name='YPERR_YPSERV'/>
<const name='YPERR_VERS'/>
</package>
<package name='Zip-File-Read-Only-Access' number='CXXII' desc='Zip File Functions (Read Only Access)'>
<function name='zip_close' decs='Close a Zip File Archive'/>
<function name='zip_entry_close' decs='Close a Directory Entry'/>
<function name='zip_entry_compressedsize' decs='Retrieve the Compressed Size of a Directory Entry'/>
<function name='zip_entry_compressionmethod' decs='Retrieve the Compression Method of a Directory Entry'/>
<function name='zip_entry_filesize' decs='Retrieve the Actual File Size of a Directory Entry'/>
<function name='zip_entry_name' decs='Retrieve the Name of a Directory Entry'/>
<function name='zip_entry_open' decs='Open a Directory Entry for Reading'/>
<function name='zip_entry_read' decs='Read From an Open Directory Entry'/>
<function name='zip_open' decs='Open a Zip File Archive'/>
<function name='zip_read' decs='Read Next Entry in a Zip File Archive'/>
</package>
<package name='Zlib-Compression' number='CXXIII' desc='Zlib Compression Functions'>
<function name='gzclose' decs='Close an open gz-file pointer'/>
<function name='gzcompress' decs='Compress a string'/>
<function name='gzdeflate' decs='Deflate a string'/>
<function name='gzencode' decs='Create a gzip compressed string'/>
<function name='gzeof' decs='Test for end-of-file on a gz-file pointer'/>
<function name='gzfile' decs='Read entire gz-file into an array'/>
<function name='gzgetc' decs='Get character from gz-file pointer'/>
<function name='gzgets' decs='Get line from file pointer'/>
<function name='gzgetss' decs='Get line from gz-file pointer and strip HTML tags '/>
<function name='gzinflate' decs='Inflate a deflated string'/>
<function name='gzopen' decs='Open gz-file'/>
<function name='gzpassthru' decs='Output all remaining data on a gz-file pointer '/>
<function name='gzputs' decs='Alias of gzwrite()'/>
<function name='gzread' decs='Binary-safe gz-file read'/>
<function name='gzrewind' decs='Rewind the position of a gz-file pointer'/>
<function name='gzseek' decs='Seek on a gz-file pointer'/>
<function name='gztell' decs='Tell gz-file pointer read/write position'/>
<function name='gzuncompress' decs='Uncompress a deflated string'/>
<function name='gzwrite' decs='Binary-safe gz-file write'/>
<function name='readgzfile' decs='Output a gz-file'/>
<function name='zlib_get_coding_type' decs='Returns the coding type used for output compression'/>
<const name='FORCE_GZIP'/>
<const name='FORCE_DEFLATE'/>
</package>
</packages>
</php>
